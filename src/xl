#!/usr/bin/env python


import sys
import datetime
import os

sys.path.append("modules")

from modules.LoggerSingleton import LoggerSingleton
from modules.params import get_params
from modules.commands import COMMANDS_LIST
from modules.tests import test_make
from modules.option_functions import get_config, handle_make
from modules.init import init
from modules.execute import execute_command
from modules.file_functions import list_of_projects
from modules.build_functions import build
from modules.help_functions import manual


logger = LoggerSingleton.initLogger('xl', '../logs')
logger.info('Started')


def get_gnu_make(option_config):
    make_test = test_make(option_config, silent=True)
    handle_make(option_config, make_test)
    return option_config.build_config.gnu_make


if __name__ == "__main__":
    option_config = get_config()
    GNU_MAKE = get_gnu_make(option_config)
    init(option_config)
    params = get_params(option_config)
    command_name = params[1]
    logger.info("Command : %s", command_name)
    if command_name in COMMANDS_LIST:
        execute_command(option_config, command_name, params)
    elif params[1] in list_of_projects("all") + ["examples"] + ["games"] + ["projects"] + ["all"]:
        build(option_config, params)
    else:
        manual(option_config, params)
    logger.info('Finished')
    os.system('mv ../logs/log.log ../logs/log_' + \
              datetime.datetime.now().strftime("%Y-%m-%d_%H_%M_%S")+'.log 2>/dev/null' )
