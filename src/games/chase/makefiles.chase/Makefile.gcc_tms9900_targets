# ------------------------------------------------------------------------------------------
# TMS9000-GCC
#   


# Paths to TMS9900 compilation tools 
# ( Set in environment to override paths )
TMS9900_DIR?=/opt/gcc4ti/bin
ELF2EA5_DIR?=/home/fabri/Retro/GCC4TI/elf2ea5
EA5_SPLIT_DIR?=/home/fabri/Retro/GCC4TI/ea5split
CLASSIC99_DSK1?=/home/fabri/Retro/GCC4TI/DSK1


# Full paths to the executables used
GAS=$(TMS9900_DIR)/tms9900-as
LD=$(TMS9900_DIR)/tms9900-ld
CC=$(TMS9900_DIR)/tms9900-gcc
AR=$(TMS9900_DIR)/tms9900-ar
ELF2EA5=$(ELF2EA5_DIR)/elf2ea5
EA5_SPLIT=$(EA5_SPLIT_DIR)/ea5split

LDFLAGS_EA5=\
  --section-start .text=a000 --section-start .data=2080 -M



C_FLAGS=\
  -O2 -std=c99 -s -I./ -fno-builtin



# test: library testlib.o $(OBJECT_LIST_EA5) 
	# $(LD) $(OBJECT_LIST_EA5) testlib.o $(LDFLAGS_EA5) -L. -lti99 -o testlib.ea5.elf > ea5.map
	# $(ELF2EA5) testlib.ea5.elf testlib.ea5.bin
	# $(EA5_SPLIT) testlib.ea5.bin
	# cp TESTLI* $(CLASSIC99_DSK1)




TI99_CC ?= tms9900-gcc 
TI99_TURN_BASED_OPTS ?= \
	$(C_FLAGS) $(GLOBAL_OPTS) \
	-D__TI99__ -nostdlib -DNO_RANDOM_LEVEL \
	-DXSize=32 \
	-DYSize=22 \
	-DALT_SLEEP \
	-DNO_PRINT -DTURN-BASED \
	-DTINY_GAME -DNO_WALL \
	-DNO_WAIT \
	-D_XL_NO_COLOR \
	-DCONIO \
	-DALT_PRINT \
	-DNO_SET_SCREEN_COLORS \
	-DDEFAULT_CLEAR_SCREEN \
	-D_XL_SLOW_DOWN_FACTOR=50000


TI99_OPTS ?= \
	$(C_FLAGS) $(GLOBAL_OPTS) \
	-D__TI99__ -nostdlib -DNO_RANDOM_LEVEL \
	-DXSize=32 \
	-DYSize=22 \
	-DALT_SLEEP \
	-DNO_PRINT  \
	-DTINY_GAME -DNO_WALL \
	-DNO_WAIT \
	-D_XL_NO_COLOR \
	-DCONIO \
	-DALT_PRINT \
	-DNO_SET_SCREEN_COLORS \
	-DDEFAULT_CLEAR_SCREEN \
	-D_XL_SLOW_DOWN_FACTOR=65000


##################################################################################################

# Paths to TMS9900 compilation tools
GAS=tms9900-as
LD=tms9900-ld
TI99CC=tms9900-gcc
CXX=tms9900-c++
OBJCOPY=tms9900-objcopy

LIB_TI99_PATH=$(TMS9900-GCC_PATH)/../lib

# Flags used during linking
# Refer to the linker rules in an external file
LDFLAGS=\
  --script=$(CFG_PATH)gcc4ti99/linkfile.cfg 

# List of compiled objects used in executable
OBJECT_LIST= \
  $(TOOLS_PATH)/ti99/crt0_ea5.o \
  $(CROSS_LIB_PATH)/display/display_macros.o \
  $(CROSS_LIB_PATH)/input/input_macros.o \
  $(CROSS_LIB_PATH)/text/text_macros.o \
  $(CROSS_LIB_PATH)/rand/rand.o \
  $(CROSS_LIB_PATH)/sleep/sleep_macros.o \
  $(SOURCE_PATH)/init_images.o \
  $(SOURCE_PATH)/move_player.o \
  $(SOURCE_PATH)/strategy.o \
  $(CROSS_LIB_PATH)/display/init_graphics/gcc4ti99/gcc4ti99_init_graphics.o \
  $(SOURCE_PATH)/ghost.o  $(SOURCE_PATH)/level.o $(SOURCE_PATH)/character.o $(SOURCE_PATH)/game_text.o \
  $(SOURCE_PATH)/main.o
  

OBJECT_LIST_TURN_BASED= \
  $(TOOLS_PATH)/ti99/crt0_ea5.o \
  $(CROSS_LIB_PATH)/display/display_macros.o \
  $(CROSS_LIB_PATH)/input/input_macros_turn_based.o \
  $(CROSS_LIB_PATH)/text/text_macros.o \
  $(CROSS_LIB_PATH)/rand/rand.o \
  $(CROSS_LIB_PATH)/sleep/sleep_macros.o \
  $(SOURCE_PATH)/init_images.o \
  $(SOURCE_PATH)/move_player_turn_based.o \
  $(SOURCE_PATH)/strategy_turn_based.o \
  $(CROSS_LIB_PATH)/display/init_graphics/gcc4ti99/gcc4ti99_init_graphics.o \
  $(SOURCE_PATH)/ghost_turn_based.o  $(SOURCE_PATH)/level.o $(SOURCE_PATH)/character.o $(SOURCE_PATH)/game_text.o \
  $(SOURCE_PATH)/main_turn_based.o

TI99_INCLUDE_OPTS ?= $(INCLUDE_OPTS) -I$(TMS9900-GCC_PATH)/../include

# Recipes to compile individual files
%.o: %.asm
	$(GAS) $< -o $@
%.o: %.c
	$(TI99CC) $(TI99_INCLUDE_OPTS) $(TI99_OPTS) -c $< -o $@

%_turn_based.o: %.c
	$(TI99CC) $(TI99_INCLUDE_OPTS) $(TI99_TURN_BASED_OPTS) -c $< -o $@

# List of all files needed in executable
PREREQUISITES=\
  $(OBJECT_LIST)

PREREQUISITES_TURN_BASED=\
  $(OBJECT_LIST_TURN_BASED)

ti99_cross_chase.elf: $(PREREQUISITES)
	$(LD) $(OBJECT_LIST) $(LDFLAGS_EA5) -L$(LIB_TI99_PATH) -lti99 -o xchase.ea5.elf > xchase.map
	# $(LD) $(OBJECT_LIST) $(LDFLAGS) -o $@ -allow-multiple-definition


ti99_cross_chase_turn_based.elf: $(PREREQUISITES_TURN_BASED)
	$(LD) $(OBJECT_LIST_TURN_BASED) $(LDFLAGS_EA5) -L$(LIB_TI99_PATH) -lti99 -o xchase_tb.ea5.elf > xchase_tb.map
	# $(LD) $(OBJECT_LIST) $(LDFLAGS) -o $@ -allow-multiple-definition



# Recipe to compile the executable
ti99: ti99_cross_chase.elf
	$(ELF2EA5) xchase.ea5.elf xchase.ea5.bin
	$(EA5_SPLIT) xchase.ea5.bin
	rm -rf xchase.map
	rm -rf ea5.map
	rm -rf xchase.ea5.elf
	mv XCHASE $(BUILD_PATH)/X$(GAME_NAME)_TINY_ti99a
	rm -rf xchase.ea5.bin


ti99_turn_based: ti99_cross_chase_turn_based.elf
	$(ELF2EA5) xchase_tb.ea5.elf xchase_tb.ea5.bin
	$(EA5_SPLIT) xchase_tb.ea5.bin
	rm -rf xchase_tb.map
	rm -rf ea5.map
	rm -rf xchase_tb.ea5.elf
	mv XCHASE_TB $(BUILD_PATH)/X$(GAME_NAME)_TINY_ti99a_turn_based
	rm -rf xchase_tb.ea5.bin


ti99_targets: \
	ti99 \
	ti99_turn_based

gcc_ti99_targets: \
	ti99_targets

	# $(OBJCOPY) -O binary -j .text -j .data -j .ctors ti99_cross_chase.elf ti99_cross_chase.cart 
	# mv ti99_cross_chase.cart $(BUILD_PATH)
	# mv ti99_cross_chase.elf $(BUILD_PATH)


# Recipe to clean all compiled objects
.phony ti99clean:
	rm -f *.o
	rm -f *.elf
	rm -f *.cart


