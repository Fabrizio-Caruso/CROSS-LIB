# Z88DK Debugging Tests

include ./games/chase/Makefile.chase

TEST_PATH ?= $(SOURCE_PATH)/../../debug


newbrain_hello:
	$(Z88DK_PATH)$(MYZ88DK) +newbrain $(SCCZ80_OPTS) $(INCLUDE_OPTS) \
	-lndos \
	$(TEST_PATH)/helloworld.c \
	-create-app
	tar czvf xchase.tar.zip _dir.txt a.bas a.dat
	mv xchase.tar.zip $(BUILD_PATH)
	rm _dir.txt
	rm a.bas
	rm a.dat
	rm a.bin

spectrum_litterals:
	$(Z88DK_PATH)$(MYZ88DK) +zx $(SCCZ80_OPTS)  \
	-vn \
	-lndos \
	$(TEST_PATH)/litterals.c \
	-create-app

spectrum_extern:
	$(Z88DK_PATH)$(MYZ88DK)  +zx -compiler=sdcc \
	-vn \
	-lndos \
	$(TEST_PATH)/foo.c \
	$(TEST_PATH)/bar.c \
	-create-app

msx_mode1_test:
	$(Z88DK_PATH)$(MYZ88DK) +msx $(SCCZ80_OPTS) -subtype=rom \
	-vn \
	-lndos \
	$(TEST_PATH)//msx_test.c \
	-create-app -o $(BUILD_PATH)/TEST_msx.prg
	rm $(BUILD_PATH)/TEST_msx.prg

msx_mode2_test:
	$(Z88DK_PATH)$(MYZ88DK) +msx $(SCCZ80_OPTS) -subtype=rom \
	-pragma-redirect:fputc_cons=fputc_cons_generic \
	-vn \
	-lndos \
	$(TEST_PATH)//msx_test2.c \
	-create-app -o $(BUILD_PATH)/TEST_msx2.prg
	rm $(BUILD_PATH)/TEST_msx2.prg

c7420_hello:
	$(Z88DK_PATH)$(MYZ88DK) +c7420 $(SCCZ80_OPTS) $(INCLUDE_OPTS) \
	-lndos \
	$(TEST_PATH)/helloworld.c \
	-create-app
	mv a.bin $(BUILD_PATH)
	mv _a.bas $(BUILD_PATH)


oz_hello:
	$(Z88DK_PATH)$(MYZ88DK) +oz $(SCCZ80_OPTS) $(INCLUDE_OPTS) \
	$(TEST_PATH)/helloworld.c 
	$(TOOLS_PATH)/z88dk/oz/makewzd.exe a
	rm a.bin
	mv a.wzd $(BUILD_PATH)/oz_hello.wzd


z88_hello:
	$(Z88DK_PATH)$(MYZ88DK) +z88 $(SCCZ80_OPTS) $(INCLUDE_OPTS) -D__Z88__ -create-app -subtype=app \
	$(TEST_PATH)/helloworld.c 
	rm a.bin
	rm a_BSS.bin
	rm a_DATA.bin
	mv a.63 $(BUILD_PATH)/
	mv a.epr $(BUILD_PATH)/


x07_hello:
	$(Z88DK_PATH)$(MYZ88DK) +x07 $(SCCZ80_OPTS) $(INCLUDE_OPTS) \
	-Cz--audio \
	$(TEST_PATH)/helloworld.c \
	-create-app 


cpm_hello:
	$(Z88DK_PATH)$(MYZ88DK) +cpm $(SCCZ80_OPTS) $(INCLUDE_OPTS) \
	$(TEST_PATH)/hello.c \
	-create-app
	rm a.bin
	mv A.COM $(BUILD_PATH)/CPMHELLO.COM
	
c128_z80_background_color:
	$(Z88DK_PATH)$(MYZ88DK) +c128 -subtype=disk \
	$(TEST_PATH)/helloworld_background_color.c \
	-create-app -oa40.bin
	$(TOOLS_PATH)/generic/c1541 -format "crosschase,0" d64 FULL_c128_z80_40col.d64
	$(TOOLS_PATH)/generic/c1541 -attach FULL_c128_z80_40col.d64 -write a40.ldr
	$(TOOLS_PATH)/generic/c1541 -attach FULL_c128_z80_40col.d64 -write a40
	mv FULL_c128_z80_40col.d64 $(BUILD_PATH)/c128_z80_background_color.d64
	rm A40.LDR
	rm A40
	rm a40.bin

spectrum_background_color:
	$(Z88DK_PATH)$(MYZ88DK) +zx -lndos \
	$(TEST_PATH)/helloworld_background_color.c -create-app
	rm -f a.bin
	rm -f a_BANK_7.bin
	mv a.tap $(BUILD_PATH)/spectrum_background_color.tap

aquarius_hello_world:
	$(Z88DK_PATH)$(MYZ88DK) +aquarius $(SCCZ80_OPTS) -clib=ansi $(INCLUDE_OPTS) -vn \
	$(TEST_PATH)/hello_conio.c \
	-create-app


aquarius_hello_stack:
	$(Z88DK_PATH)$(MYZ88DK) +aquarius $(SCCZ80_OPTS) -pragma-redirect:fputc_cons=fputc_cons_generic -pragma-output:STACKPTR=20000 $(INCLUDE_OPTS) -vn \
	$(TEST_PATH)/hello_fputc.c \
	-create-app -o minimal_hello

    
getk_test:
	$(Z88DK_PATH)$(MYZ88DK) +zx81 $(ZSDCC_OPTS) \
	-compiler=sdcc \
	-create-app -o  $(BUILD_PATH)/getk_test.prg \
	$(TEST_PATH)/getk_test.c
	rm $(BUI

sms_libctest:
	$(Z88DK_PATH)$(MYZ88DK) +sms $(SCCZ80_OPTS) \
	-vn -lndos \
	-create-app \
	-o $(BUILD_PATH)/sms_libctest.sms \
	$(TEST_PATH)/libctest.c

m5_sounds:
	$(Z88DK_PATH)$(MYZ88DK) +m5 $(SCCZ80_OPTS) -create-app \
	-vn -lndos \
	$(TEST_PATH)/sounds.c
	rm -f a.bin
	rm -f A_BSS.bin
	rm -f A_DATA.bin
	mv a.rom $(BUILD_PATH)/m5_sounds.rom

mz2500_getchar:
	$(Z88DK_PATH)$(MYZ88DK) +mz2500 $(SCCZ80_OPTS) -create-app \
	-vn -lndos \
	$(TEST_PATH)/getchar_test.c
	rm -f a.bin
	mv a.2D $(BUILD_PATH)/mz2500_getchar.2D
	
spectrum_sounds:
	$(Z88DK_PATH)$(MYZ88DK) +zx $(SCCZ80_OPTS) -create-app \
	-vn -lndos \
	$(TEST_PATH)/sounds.c
	rm -f a.bin
	rm -f a_BANK_7.bin
	mv a.tap $(BUILD_PATH)/spectrum_sounds.tap
	
   
	
sms_hello:
	$(Z88DK_PATH)$(MYZ88DK) +sms $(SCCZ80_OPTS) -startup=1 -clib=new -O3 \
	-vn -pragma-include:$(CFG_PATH)/z88dk/zpragma_sms.inc \
	-create-app	\
	$(TEST_PATH)/z88dk_hello.c 
	rm a_BSS.bin
	rm a_CODE.bin
	rm a_DATA.bin
	rm a_UNASSIGNED.bin
	mv a.sms $(BUILD_PATH)


samcoupe_wait_for_key:
	$(Z88DK_PATH)$(MYZ88DK) +sam $(SCCZ80_OPTS) -O3 \
	-vn  \
	-create-app -o $(BUILD_PATH)/FULL_samcoupe.bin	\
	$(TEST_PATH)/wait_for_key.c
	cp $(TOOLS_PATH)/z88dk/samcoupe/samdos2_empty $(TOOLS_PATH)/z88dk/samcoupe/samdos2
	$(TOOLS_PATH)/z88dk/samcoupe/pyz80.py -I $(TOOLS_PATH)/z88dk/samcoupe/samdos2 $(TOOLS_PATH)/z88dk/samcoupe/sam_wrapper.asm
	mv $(TOOLS_PATH)/z88dk/samcoupe/sam_wrapper.dsk $(BUILD_PATH)/X$(GAME_NAME)_samcoupe.dsk
	rm $(BUILD_PATH)/FULL_samcoupe.bin


abc80_hello:
	$(Z88DK_PATH)$(MYZ88DK) +abc80 $(SCCZ80_OPTS) \
	-vn -lndos \
	$(TEST_PATH)/hello.c
	perl $(TOOLS_PATH)/z88dk/abc80/bin2bac.pl $(SOURCE_PATH)/../a.bin > a.bac	
	# $(TOOLS_PATH)/z88dk/abc80/bin2bac2$(COMPILEDEXT) a.bin $(BUILD_PATH)/abc80_hello.bac 49200
	rm a.bin	
	
abc800_hello:
	$(Z88DK_PATH)$(MYZ88DK) +abc800 $(SCCZ80_OPTS) -Ca --reloc-info \
	-vn -lndos \
	$(TEST_PATH)/hello.c
	perl $(TOOLS_PATH)/z88dk/abc80/bin2bac.pl -800 $(SOURCE_PATH)/../a.bin $(SOURCE_PATH)/../a.reloc > a.bac
	mv a.bac $(BUILD_PATH)/abc800_hello.bac
	rm a.reloc
	rm a.bin
	
rex_hello:
	$(Z88DK_PATH)$(MYZ88DK) +rex $(SCCZ80_OPTS) \
	-vn -lndos \
	$(TEST_PATH)/hello.c \
	-create-app	
	
mtx_hello:
	$(Z88DK_PATH)$(MYZ88DK) +mtx $(SCCZ80_OPTS) \
	-vn -lndos \
	$(TEST_PATH)/hello.c \
	-create-app	
	mv a.wav $(BUILD_PATH)/hello.wav
	mv a $(BUILD_PATH)/hello.mtx
	
	
c128_hello:
	$(Z88DK_PATH)$(MYZ88DK) +c128 $(SCCZ80_OPTS) \
	-vn -lndos \
	$(TEST_PATH)/hello.c \
	-create-app

# -pragma-redirect:getk=getk_inkey
trs80_test_getch:
	$(Z88DK_PATH)$(MYZ88DK) +trs80 $(SCCZ80_OPTS) -lndos \
	-lm -create-app \
	-pragma-redirect:getk=getk_inkey \
	-vn -lndos \
	$(SOURCE_PATH)/../../notes/tests/trs80_test.c

vg5k_hello:
	$(Z88DK_PATH)$(MYZ88DK) +vg5k $(ZSDCC_OPTS) -compiler=sdcc \
	-vn -lndos \
	$(TEST_PATH)/vg5k_hello.c \
	-create-app

sms_chicken:
	$(Z88DK_PATH)$(MYZ88DK) +sms $(SCCZ80_OPTS) \
	-vn -lndos \
	-create-app \
	-o $(BUILD_PATH)/sms_chicken.sms \
	$(TEST_PATH)/chicken/chicken.c \
	$(TEST_PATH)/chicken/chicken_graphics.asm	

sms_joy_test:
	$(Z88DK_PATH)$(MYZ88DK) +sms $(SCCZ80_OPTS) -clib=sdcc_iy -startup=17 \
	-pragma-include:$(CFG_PATH)/z88dk/zpragma_sms.inc \
	-create-app \
	$(TEST_PATH)/sms_joy_test.c \
	-o $(BUILD_PATH)/sms_joy_test.bin
	rm $(BUILD_PATH)/sms_joy_test_CODE.bin
	rm $(BUILD_PATH)/sms_joy_test_DATA.bin
	rm $(BUILD_PATH)/sms_joy_test_BSS.bin
	rm $(BUILD_PATH)/sms_joy_test_UNASSIGNED.bin	


m5_hello:
	$(Z88DK_PATH)$(MYZ88DK) +m5 $(SCCZ80_OPTS) \
	-create-app -vn -o$(BUILD_PATH)/m5_hello -lndos \
	$(TEST_PATH)/hello.c


trs80_hello:
	$(Z88DK_PATH)$(MYZ88DK) +trs80 $(SCCZ80_OPTS) \
	-create-app -vn -o$(BUILD_PATH)/trs80_hello -lndos \
	$(TEST_PATH)/hello.c	
	
x1_hello:
	$(Z88DK_PATH)$(MYZ88DK) +x1 $(SCCZ80_OPTS) \
	-o $(BUILD_PATH)/x1_hello.bin -vn -lndos \
	$(TEST_PATH)/hello.c
	

x1_wait_press:
	$(Z88DK_PATH)$(MYZ88DK) +x1 $(SCCZ80_OPTS) \
	-o $(BUILD_PATH)/x1_wait_press.bin -vn -lndos \
	$(TEST_PATH)/wait_press.c

z1013_getk:
	$(Z88DK_PATH)$(MYZ88DK) +z1013 $(SCCZ80_OPTS) \
	-o $(BUILD_PATH)/z1013_getk.bin -vn -lndos \
	$(TEST_PATH)/wait_press.c	
	
x1_getk:
	$(Z88DK_PATH)$(MYZ88DK) +x1 $(SCCZ80_OPTS) \
	-o $(BUILD_PATH)/x1_getk.bin -vn -lndos \
	$(TEST_PATH)/test_getk.c
    


gal_hello:
	$(Z88DK_PATH)$(MYZ88DK) +gal $(ZSDCC_OPTS) \
	-compiler=sdcc \
	$(INCLUDE_OPTS) \
	-pragma-need=ansiterminal \
	-pragma-include:$(SOURCE_PATH)/../cfg/z88dk/zpragma.inc \
	-vn -lndos -create-app -Cz--audio \
	$(TEST_PATH)/hello.c \
	-o  $(BUILD_PATH)/hello.prg
	rm $(BUILD_PATH)/hello.prg
	
	
ti85_hello:
	$(Z88DK_PATH)$(MYZ88DK) +ti85 $(SCCZ80_OPTS) $(TEST_PATH)/hello.c \
	-lndos \
	-create-app -o $(BUILD_PATH)/ti85_hello.bin
	rm $(BUILD_PATH)/ti85_hello.bin
	
# load "hello.cpc",&1200
    
cpc_hello:
	$(Z88DK_PATH)$(MYZ88DK) +cpc -lndos -clib=ansi  -create-app -subtype=dsk -o$(BUILD_PATH)/HELLO  -vn \
	$(TEST_PATH)/helloworld.c
	# $(TOOLS_PATH)/z88dk/cpc/2cdt.exe -n -r cross_chase $(BUILD_PATH)/HELLO_cpc.cpc  $(BUILD_PATH)/HELLO_cpc.cdt
	# rm -rf HELLO_cpc.dsk
	# $(TOOLS_PATH)/z88dk/cpc/cpcxfsw -nd HELLO_cpc.dsk
	# $(TOOLS_PATH)/z88dk/cpc/cpcxfsw HELLO_cpc.dsk -p $(BUILD_PATH)/HELLO_cpc.cpc xchase
	# mv HELLO_cpc.dsk $(BUILD_PATH)/
	# cp $(TOOLS_PATH)/z88dk/cpc/nocart/*.rom .
	# $(TOOLS_PATH)/z88dk/cpc/nocart/nocart.exe  $(BUILD_PATH)/HELLO_cpc.dsk  $(BUILD_PATH)/HELLO_gx4000.cpr   -c 'run"xchase'
	# rm os.rom
	# rm amsdos.rom
	# rm basic.rom
	# rm $(BUILD_PATH)/HELLO_cpc.cpc 

# memory &11ff
# load "color.cpc",&1200
# call &1200
cpc_test:
	$(Z88DK_PATH)$(MYZ88DK) +cpc -lndos -pragma-define:REGISTER_SP=-1 -clib=ansi  -create-app -subtype=dsk -o$(BUILD_PATH)/COLOR  -vn \
	$(TEST_PATH)/cpc_test.c
	# $(TOOLS_PATH)/z88dk/cpc/2cdt.exe -n -r cross_chase $(BUILD_PATH)/HELLO_cpc.cpc  $(BUILD_PATH)/HELLO_cpc.cdt
	# rm -rf HELLO_cpc.dsk
	# $(TOOLS_PATH)/z88dk/cpc/cpcxfsw -nd HELLO_cpc.dsk
	# $(TOOLS_PATH)/z88dk/cpc/cpcxfsw HELLO_cpc.dsk -p $(BUILD_PATH)/HELLO_cpc.cpc xchase
	# mv HELLO_cpc.dsk $(BUILD_PATH)/
	# cp $(TOOLS_PATH)/z88dk/cpc/nocart/*.rom .
	# $(TOOLS_PATH)/z88dk/cpc/nocart/nocart.exe  $(BUILD_PATH)/HELLO_cpc.dsk  $(BUILD_PATH)/HELLO_gx4000.cpr   -c 'run"xchase'
	# rm os.rom
	# rm amsdos.rom
	# rm basic.rom
	# rm $(BUILD_PATH)/HELLO_cpc.cpc 


msx_bgcolor:
	$(Z88DK_PATH)$(MYZ88DK) +msx -lndos -pragma-redirect:fputc_cons=fputc_cons_generic   -create-app -subtype=rom -o$(BUILD_PATH)/bgcolor  -vn \
	$(TEST_PATH)/helloworld_background_color.c
    
cpc_bgcolor:
	$(Z88DK_PATH)$(MYZ88DK) +cpc -lndos -pragma-define:REGISTER_SP=-1 	-pragma-redirect:fputc_cons=fputc_cons_generic   -create-app -subtype=dsk -o$(BUILD_PATH)/bgcolor  -vn \
	$(TEST_PATH)/helloworld_background_color.c
	# $(TOOLS_PATH)/z88dk/cpc/2cdt.exe -n -r cross_chase $(BUILD_PATH)/HELLO_cpc.cpc  $(BUILD_PATH)/HELLO_cpc.cdt
	# rm -rf HELLO_cpc.dsk
	# $(TOOLS_PATH)/z88dk/cpc/cpcxfsw -nd HELLO_cpc.dsk
	# $(TOOLS_PATH)/z88dk/cpc/cpcxfsw HELLO_cpc.dsk -p $(BUILD_PATH)/HELLO_cpc.cpc xchase
	# mv HELLO_cpc.dsk $(BUILD_PATH)/
	# cp $(TOOLS_PATH)/z88dk/cpc/nocart/*.rom .
	# $(TOOLS_PATH)/z88dk/cpc/nocart/nocart.exe  $(BUILD_PATH)/HELLO_cpc.dsk  $(BUILD_PATH)/HELLO_gx4000.cpr   -c 'run"xchase'
	# rm os.rom
	# rm amsdos.rom
	# rm basic.rom
	# rm $(BUILD_PATH)/bgcolor

pps_vt52_test:
	$(Z88DK_PATH)$(MYZ88DK) +pps $(SCCZ80_OPTS) $(INCLUDE_OPTS) \
	-pragma-redirect:fputc_cons=fputc_cons_generic \
	$(TEST_PATH)/vt52_test.c \
	-lndos -vn
	
g800_vt52_test:
	$(Z88DK_PATH)$(MYZ88DK) +g800 $(SCCZ80_OPTS) $(INCLUDE_OPTS) \
	-pragma-redirect:fputc_cons=fputc_cons_generic \
	$(TEST_PATH)/vt52_test.c \
	-lndos -vn  \
	-create-app -o	
	
srr_vt52_test:
	$(Z88DK_PATH)$(MYZ88DK) +srr $(SCCZ80_OPTS) $(INCLUDE_OPTS) \
	-pragma-redirect:fputc_cons=fputc_cons_generic \
	$(TEST_PATH)/vt52_test.c \
	-lndos -vn  \
	-create-app -o
	rm a.srr 
	mv a.wav $(BUILD_PATH)/srr_vt52_test.wav

eg2k_hello:
	$(Z88DK_PATH)$(MYZ88DK) +trs80 $(SCCZ80_OPTS) -subtype=eg2000disk -create-app $(INCLUDE_OPTS) \
	$(TEST_PATH)/hello.c
	mv a.cmd $(BUILD_PATH)/eg2k_hello.cmd
	
z1013_hello:
	$(Z88DK_PATH)$(MYZ88DK) +z1013 $(SCCZ80_OPTS) $(INCLUDE_OPTS) $(TEST_PATH)/hello.c \
	-lndos -vn -clib=ansi \
	-create-app -o
	mv $(BUILD_PATH)/../A.Z80 $(BUILD_PATH)/z1013_hello.z80
	rm $(BUILD_PATH)/../a.bin

vg5k_wait_press:
	$(Z88DK_PATH)$(MYZ88DK) +vg5k $(SCCZ80_OPTS) $(TEST_PATH)/wait_press.c \
	-lndos -vn  -zorg=19000 \
	-create-app -o $(BUILD_PATH)/vg5k_wait_press.prg


z1013_wait_press:
	$(Z88DK_PATH)$(MYZ88DK) +z1013 $(SCCZ80_OPTS)  $(TEST_PATH)/wait_press.c \
	-lndos -vn -clib=ansi \
	-create-app -o
	mv $(BUILD_PATH)/../A.Z80 $(BUILD_PATH)/z1013_wait_press.z80
	rm $(BUILD_PATH)/../a.bin	

sound_test:
	$(Z88DK_PATH)$(MYZ88DK) +svi $(SCCZ80_OPTS) \
	-clib=ansi -pragma-define:ansicolumns=32 -vn -lndos \
	-create-app -o $(BUILD_PATH)/sound_test \
	test/sound_test.c

conio_nascom:
	$(Z88DK_PATH)$(MYZ88DK) +nascom $(SCCZ80_OPTS) test/coniotest.c -create-app -o  $(BUILD_PATH)/conio.nas
			

error_z88dk:
	$(Z88DK_PATH)$(MYZ88DK) +vg5k $(SCCZ80_OPTS) $(TEST_PATH)/error.c -o $(BUILD_PATH)/error_z88dk.prg


coleco_sound_test: 
	$(Z88DK_PATH)$(MYZ88DK) +cpm -subtype=adam -lndos -create-app  -vn \
	$(TEST_PATH)/psg_test.c

spectrum_sound_test: 
	$(Z88DK_PATH)$(MYZ88DK) +zx -lndos -create-app  -vn \
	$(TEST_PATH)/psg_test.c
	rm a.bin
	rm a_BANK_7.bin
	mv a.tap $(BUILD_PATH)/spectrum_sound_test.tap

cpc_sound_test: 
	$(Z88DK_PATH)$(MYZ88DK) +cpc -lndos -create-app -o$(BUILD_PATH)/SOUND_cpc.cpc  -vn \
	$(TEST_PATH)/psg_test.c
	$(TOOLS_PATH)/z88dk/cpc/2cdt.exe -n -r cross_chase $(BUILD_PATH)/SOUND_cpc.cpc  $(BUILD_PATH)/SOUND_cpc.cdt
	rm -rf SOUND_cpc.dsk
	$(TOOLS_PATH)/z88dk/cpc/cpcxfsw -nd SOUND_cpc.dsk
	$(TOOLS_PATH)/z88dk/cpc/cpcxfsw SOUND_cpc.dsk -p $(BUILD_PATH)/SOUND_cpc.cpc xchase
	mv SOUND_cpc.dsk $(BUILD_PATH)/
	cp $(TOOLS_PATH)/z88dk/cpc/nocart/*.rom .
	$(TOOLS_PATH)/z88dk/cpc/nocart/nocart.exe  $(BUILD_PATH)/SOUND_cpc.dsk  $(BUILD_PATH)/SOUND_gx4000.cpr   -c 'run"xchase'
	rm os.rom
	rm amsdos.rom
	rm basic.rom
	rm $(BUILD_PATH)/SOUND_cpc.cpc 


spectrum_bitbang:
	$(Z88DK_PATH)$(MYZ88DK) +zx $(SCCZ80_OPTS) $(INCLUDE_OPTS) \
	-pragma-include:$(CFG_PATH)/z88dk/zpragma_clib.inc \
	-pragma-redirect:getk=getk_inkey \
	 \
	 \
	 \
	-DZ88DK_JOYSTICK \
	-D_XL_SLOW_DOWN_FACTOR=200 \
	-D__SPECTRUM__ \
	-lndos -create-app \
	-D__CONIO_GRAPHICS \
	 \
	-pragma-redirect:fputc_cons=fputc_cons_generic \
	-o $(BUILD_PATH)/X$(GAME_NAME)_spectrum_48k.prg \
	$(SOURCE_PATH)/../../test/bitbang.c \

	rm $(BUILD_PATH)/X$(GAME_NAME)_spectrum_48k.prg
	rm $(BUILD_PATH)/X$(GAME_NAME)_spectrum_48k_BANK_7.bin

zx_bit_bang: 
	zcc.exe +zx -clib=default -lndos $(SOURCE_PATH)/../../test/fx.c -create-app

sms_bit_bang: 
	zcc.exe +sms -clib=default -lndos $(SOURCE_PATH)/../../test/fx.c -create-app

sms_bitbang: 
	$(Z88DK_PATH)$(MYZ88DK) +sms $(SCCZ80_OP TS) -clib=default \
	-lndos \
	$(SOURCE_PATH)/../../test/bitbang.c
	-create-app -osms_bitbang.sms
    
c128_bitbang: 
	$(Z88DK_PATH)$(MYZ88DK) +c128 $(SCCZ80_OPTS)  \
	$(INCLUDE_OPTS) \
	-lndos -subtype=disk \
	-D__C128_Z80__ -DXSize=40 \
	 \
	-D__BIT_BANG_SOUND \
	-D__CONIO_GRAPHICS -D__INCLUDE_CONIO_H  \
	$(SOURCE_PATH)/../../test/bitbang.c \
	-create-app -oa40.bin
	$(TOOLS_PATH)/generic/c1541 -format "crosschase,0" d64 FULL_c128_z80_40col.d64
	$(TOOLS_PATH)/generic/c1541 -attach FULL_c128_z80_40col.d64 -write a40.ldr
	$(TOOLS_PATH)/generic/c1541 -attach FULL_c128_z80_40col.d64 -write a40
	mv FULL_c128_z80_40col.d64 $(BUILD_PATH)/X$(GAME_NAME)_c128_z80_40col.d64
	rm A40.LDR
	rm A40
	rm a40.bin
