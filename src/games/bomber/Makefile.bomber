######################################################################
# Makefile for CROSS-BOMBER

GAME_NAME := bomber

PARENT_DIR = games

SOURCE_PATH := $(PARENT_DIR)/$(GAME_NAME)

API_VERSION=2

GLOBAL_OPTS = -DNO_WALL -DFORCE_NARROW -D_API_VERSION=$(API_VERSION)


#####################################################################
# SLOWDOWN VALUES

# Common factor
_COMMON_SLOWDOWN_FACTOR=10


# CC65
_APPLE2_SLOWDOWN=30
_APPLE2ENH_SLOWDOWN=30
_APPLE2_HGR_SLOWDOWN=50
_APPLE2ENH_HGR_SLOWDOWN=50
_ATARI_SLOWDOWN=70
_ATARI5200_SLOWDOWN=70
_C16_SLOWDOWN=55
_C64_SLOWDOWN=45
_CREATIVISION_SLOWDOWN=100
_GAMATE_SLOWDOWN=120
_ORIC_SLOWDOWN=40
_NES_SLOWDOWN=80
_PET_SLOWDOWN=40
_PCE_SLOWDOWN=550
_SUPERVISION_SLOWDOWN=140
_VIC20_SLOWDOWN=55


# Z88DK
_AQUARIUS_SLOWDOWN=105
_ACE_SLOWDOWN=100
_C128_Z80_40COL_SLOWDOWN=20
_C128_Z80_80COL_SLOWDOWN=1
_CPC_MODE0_SLOWDOWN=100
_CPC_CPCRSLIB_MODE1_SLOWDOWN=90
_CPC_MODE2_SLOWDOWN=90
_CPM_Z80_SLOWDOWN=90
_CPM_INTEL8080_SLOWDOWN=80
_COLECO_SLOWDOWN=100
_GB_SLOWDOWN=280
_GG_SLOWDOWN=300
_GB_WAIT_VSYNC_SLOWDOWN=150
_LASER500_SLOWDOWN=200
_MC1000_SLOWDOWN=75
_MSX_SLOWDOWN=200
_MSX_FIXED_COLORS_SLOWDOWN=300
_MTX500_SLOWDOWN=200
_MTX512_SLOWDOWN=200
_MZ_SLOWDOWN=200
_SAMCOUPE_SLOWDOWN=300
_SMS_SLOWDOWN=160
_SPECTRUM_SLOWDOWN=160
_VG5K_SLOWDOWN=75
_VZ200_SLOWDOWN=250 
_ZX81_SLOWDOWN=10
_ZX81_WRX_SLOWDOWN=1


# CMOC
_COCO_SLOWDOWN=160
_DRAGON_SLOWDOWN=160
_MO5_SLOWDOWN=160
_TO7_SLOWDOWN=160


# LCC1802
_COMX_SLOWDOWN=30
_PECOM_SLOWDOWN=30
_TMC600_SLOWDOWN=50
_MICRO_SLOWDOWN=60
_CIDELSA_SLOWDOWN=40


# CC6303
_MC10_SLOWDOWN=12


# GCC
_NCURSES_SLOWDOWN=12


#######################################################################
# Use parameters (env variables) to modify compilation parameters

SCCZ80_OPTS ?=  -O3 $(GLOBAL_OPTS)
#-O0
#-O3

SCCZ80_ROM_OPTS ?= -O3 $(GLOBAL_OPTS)
#-O0
#-O3

ZSDCC_OPTS ?= -SO3 $(ZSDCC_MAKEFILE_COMPILATION_OPTS) $(GLOBAL_OPTS)
#-SO0
# -SO3 --max-allocs-per-node200000

ZSDCC_ROM_OPTS ?= $(ZSDCC_MAKEFILE_COMPILATION_OPTS) $(GLOBAL_OPTS)
# -SO3
# -SO3 --max-allocs-per-node200000

Z88DK_MAKE_OPTS ?= $(ZSDCC_MAKEFILE_THREADS_OPTS)
#-j 8

####################################################################################################################
# COMMON INCLUDES

include makefiles.common/auxiliary/Makefile_ALL



#####################################################################
# Draw skip
LIGHT_DRAW_SKIP ?= -DBOMB_DRAW_SKIP=1 -DWALL_DRAW_SKIP=3
DRAW_SKIP ?=       -DBOMB_DRAW_SKIP=1 -DWALL_DRAW_SKIP=7
EXTRA_DRAW_SKIP ?= -DBOMB_DRAW_SKIP=3 -DWALL_DRAW_SKIP=15
ULTRA_DRAW_SKIP ?= -DBOMB_DRAW_SKIP=7 -DWALL_DRAW_SKIP=15 -DGHOST_DRAW_SKIP=1 


######################################################################
# Cross-Shoot files
#
FULL_FILES ?= \
	$(BASIC_CROSS_LIB_FILES) \
	$(SOURCE_PATH)/main.c 

SCCZ80_OPTS ?= -O0


# Parallel compilation for Z88DK targets
Z88DK_MAKE_OPTS ?= -j 8


#################################################################
#     lcc1802_targets 

ifeq ($(DO_WIN),1)
all: \
    gcc_targets  \
    cc65_targets \
    lcc1802_targets \
    cmoc_targets \
    z88dk_targets
else
all: \
    gcc_targets  \
    cc65_targets \
    cmoc_targets \
    z88dk_targets
endif

gcc_targets: \
	ncurses  

ifeq ($(DO_WIN),1)
cc65_targets: \
    apple2 \
    apple2enh \
    atari \
    atari5200 \
    atari_lynx \
    c16 \
    c64 \
    creativision \
    gamate \
    oric  \
    nes \
    pet \
    pce \
    vic20 
else
cc65_targets: \
    apple2 \
    apple2enh \
    atari \
    atari5200 \
    atari_lynx \
    c16 \
    c64 \
    creativision \
    oric  \
    nes \
    pet \
    pce \
    vic20 
endif

cmoc_targets: \
    coco_targets \
    dragon_targets \
    mo5_targets \
    to7_targets


ifeq ($(DO_WIN),1)
z88dk_targets_aux: \
    aquarius \
    ace \
    c128_z80_80col \
    cpc \
    cpm \
    gb \
    laser500 \
    mc1000 \
    msx \
    samcoupe \
    sms \
    spectrum \
    vg5k \
    vz200 \
    zx81 \
    zx81_gfx
else
z88dk_targets_aux: \
    aquarius \
    ace \
    cpc \
    cpm \
    gb \
    gamegear \
    laser500 \
    mc1000 \
    msx \
    samcoupe \
    sms \
    spectrum \
    vg5k \
    vz200 \
    zx81 \
    zx81_gfx
endif

z88dk_targets: 
	$(MAKE) $(Z88DK_MAKE_OPTS) z88dk_targets_aux -f ./games/$(GAME_NAME)/Makefile.$(GAME_NAME)
    
lcc1802_targets: \
	_comx \
	_pecom \
	_tmc600 \
	_cidelsa \
	_micro \
    clean_combo_files


#################################################################
# CC65

#################################################################

apple2: apple2_hgr

apple2_hgr: $(ASSETS_PATH)/7x8_chars.h
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS) -O -t apple2 \
	--config $(CFG_PATH)/cc65/apple2-hgr.cfg \
	-DFULL_GAME -DALT_SLEEP -DANIMATE_PLAYER \
	-D_XL_SLOW_DOWN_FACTOR=400 -DXSize=20 -DYSize=24 \
	-DSOUNDS -DALT_PRINT  \
	-DAPPLE2_HGR -DDEFAULT_CLEAR_SCREEN \
	$(CROSS_LIB_PATH)/display/init_graphics/cc65/apple2/hgr.s \
	$(FULL_FILES) \
	$(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c \
    --code-name LOWCODE \
	$(CROSS_LIB_PATH)/sound/generic/bit_bang_sounds.c \
	$(CROSS_LIB_PATH)/sleep/sleep_macros.c \
	$(CROSS_LIB_PATH)/display/init_graphics/cc65/apple2/apple2_hgr_init_graphics.c \
	-o $(BUILD_PATH)/$@.bin
	cp $(TOOLS_PATH)/cc65/apple2/MASTER_BOOT_ASCHASE.DSK $(BUILD_PATH)/X$(GAME_NAME)_$@.dsk
	java -jar $(TOOLS_PATH)/cc65/apple2/ac.jar -as $(BUILD_PATH)/X$(GAME_NAME)_$@.dsk aschase < $(BUILD_PATH)/$@.bin
	rm $(BUILD_PATH)/$@.bin

#################################################################

apple2enh: apple2enh_hgr

apple2enh_hgr: $(ASSETS_PATH)/7x8_chars.h
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS) -O -t apple2 \
	--config $(CFG_PATH)/cc65/apple2-hgr.cfg \
	-DFULL_GAME -DALT_SLEEP -DANIMATE_PLAYER \
	-D_XL_SLOW_DOWN_FACTOR=400 -DXSize=20 -DYSize=24 \
	-DSOUNDS -DALT_PRINT \
	-DAPPLE2_HGR -DDEFAULT_CLEAR_SCREEN \
	$(CROSS_LIB_PATH)/display/init_graphics/cc65/apple2/hgr.s \
	$(FULL_FILES) \
	$(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c \
    --code-name LOWCODE \
	$(CROSS_LIB_PATH)/sound/generic/bit_bang_sounds.c \
	$(CROSS_LIB_PATH)/sleep/sleep_macros.c \
	$(CROSS_LIB_PATH)/display/init_graphics/cc65/apple2/apple2_hgr_init_graphics.c \
	-o $(BUILD_PATH)/$@.bin
	cp $(TOOLS_PATH)/cc65/apple2/MASTER_BOOT_ASCHASE.DSK $(BUILD_PATH)/X$(GAME_NAME)_$@.dsk
	java -jar $(TOOLS_PATH)/cc65/apple2/ac.jar -as $(BUILD_PATH)/X$(GAME_NAME)_$@.dsk aschase < $(BUILD_PATH)/$@.bin
	rm $(BUILD_PATH)/$@.bin


#################################################################


atari: $(ASSETS_PATH)/8x8_chars.h
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS) -O -t atari \
	-DREDEFINED_CHARS \
	-DINITIAL_SLOWDOWN=31500 \
	-DANIMATE_PLAYER -DFULL_GAME -DATARI_MODE1 -DSOUNDS -DBETWEEN_LEVEL -DEND_SCREEN \
	--config $(CFG_PATH)/cc65/atari_mode1_redefined_chars.cfg \
	-DATARI_MODE_1_COLOR -DINLINE_LOC \
	-DNO_SET_SCREEN_COLORS -DNO_SPACE_TEXT \
	-DALT_PRINT \
	-D_XL_SLOW_DOWN_FACTOR=700 \
	$(CROSS_LIB_PATH)/display/alt_print/atari_mode1_alt_print.c \
	$(CROSS_LIB_PATH)/display/init_graphics/cc65/atari/disable_setcursor.s \
	$(CROSS_LIB_PATH)/display/init_graphics/cc65/atari/atari_mode1_redefined_chars_init_graphics.c \
	$(CROSS_LIB_PATH)/sound/cc65/pokey/pokey_sounds.c \
	$(FULL_FILES) \
	-o $(BUILD_PATH)/X$(GAME_NAME)_$@.xex


atari_no_color: 
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS) -O -t atari \
	-DFULL_GAME -DSOUNDS -D_XL_NO_COLOR -D_XL_NO_UDG \
	-DCONIO -DNO_INIT_GRAPHICS \
	-D_XL_SLOW_DOWN_FACTOR=700 \
	$(CROSS_LIB_PATH)/sound/cc65/pokey/pokey_sounds.c \
	$(FULL_FILES) \
	-o $(BUILD_PATH)/X$(GAME_NAME)_atari_no_color.xex


atari_test1: $(ASSETS_PATH)/8x8_chars.h
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS) -O -t atari \
	-DREDEFINED_CHARS \
	-DINITIAL_SLOWDOWN=31500 \
	-DANIMATE_PLAYER -DFULL_GAME -DATARI_MODE1 -DSOUNDS -DBETWEEN_LEVEL -DEND_SCREEN \
	--config $(CFG_PATH)/cc65/atari_mode1_redefined_chars.cfg \
	-DMEMORY_MAPPED \
	-DDEFAULT_CLEAR_SCREEN \
	-DNO_SET_SCREEN_COLORS \
	-DALT_PRINT \
	-D_XL_SLOW_DOWN_FACTOR=700 \
	$(CROSS_LIB_PATH)/display/init_graphics/cc65/atari/disable_setcursor.s \
	$(SOURCE_PATH)/tests/atari_test1.c \
	-o $(BUILD_PATH)/X$(GAME_NAME)_atari_color_test1.xex


ATARI_TEST2_FILES ?= \
	$(BASIC_CROSS_LIB_FILES) \
	$(SOURCE_PATH)/tests/atari_test2.c

atari_test2: $(ASSETS_PATH)/8x8_chars.h
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS) -O -t atari \
	-DREDEFINED_CHARS \
	-DINITIAL_SLOWDOWN=31500 \
	-DANIMATE_PLAYER -DFULL_GAME -DATARI_MODE1 -DSOUNDS -DBETWEEN_LEVEL -DEND_SCREEN \
	--config $(CFG_PATH)/cc65/atari_mode1_redefined_chars.cfg \
	-DMEMORY_MAPPED \
	-DDEFAULT_CLEAR_SCREEN \
	-DNO_SET_SCREEN_COLORS \
	-DALT_PRINT \
	-D_XL_SLOW_DOWN_FACTOR=700 \
	$(CROSS_LIB_PATH)/display/alt_print/atari_mode1_alt_print.c \
	$(CROSS_LIB_PATH)/display/init_graphics/cc65/atari/disable_setcursor.s \
	$(CROSS_LIB_PATH)/display/init_graphics/cc65/atari/atari_mode1_redefined_chars_init_graphics.c \
	$(ATARI_TEST2_FILES) \
	-o $(BUILD_PATH)/X$(GAME_NAME)_atari_color_test2.xex

#################################################################

atari5200: $(ASSETS_PATH)/8x8_chars.h
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS) -O -t atari5200 \
	--config $(CFG_PATH)/cc65/atari5200_redefined_chars_32k.cfg \
	-D__ATARI5200__ \
	-DINITIAL_SLOWDOWN=31500 \
	-DFULL_GAME -DEND_SCREEN -DBETWEEN_LEVEL \
	-DATARI_MODE_1_COLOR -DINLINE_LOC \
	-DANIMATE_PLAYER \
	-DSOUNDS \
	-D_XL_SLOW_DOWN_FACTOR=700 \
	$(CROSS_LIB_PATH)/sound/cc65/pokey/pokey_sounds.c \
	$(FULL_FILES) \
	$(CROSS_LIB_PATH)/display/init_graphics/cc65/atari5200/atari5200_init_graphics.c \
	-o $(BUILD_PATH)/X$(GAME_NAME)_atari5200.rom


#################################################################

atari7800: atari7800_no_color

atari7800_color: 
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS) -O -t atari7800 --force-import __EXEHDR__ \
	-DFULL_GAME -DSOUNDS -D_XL_NO_UDG \
	-DCONIO -DNO_INIT_GRAPHICS -DEXTRA_TITLE -DNO_SET_SCREEN_COLORS -DNO_SLEEP \
	-D_XL_SLOW_DOWN_FACTOR=400 -DXSize=20 -DYSize=28 \
	$(FULL_FILES) \
	-o $(BUILD_PATH)/X$(GAME_NAME)_$@.a78


atari7800_no_color: 
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS) -O -t atari7800 --force-import __EXEHDR__ atari7800-mono.o \
	-DFULL_GAME -DSOUNDS -D_XL_NO_UDG -D_XL_NO_COLOR \
	-DCONIO -DNO_INIT_GRAPHICS -DEXTRA_TITLE -DNO_SET_SCREEN_COLORS -DNO_SLEEP \
	-D_XL_SLOW_DOWN_FACTOR=400 -DXSize=40 -DYSize=28 \
	$(FULL_FILES) \
	-o $(BUILD_PATH)/X$(GAME_NAME)_$@.a78

#################################################################

atari_lynx: atari_lynx_gfx

atari_lynx_no_gfx:
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS) -O -t lynx \
	-D__ATARI_LYNX__  -D_XL_SLOW_DOWN_FACTOR=3000 -D_XL_NO_UDG \
	-DNO_SET_SCREEN_COLORS \
	-DFORCE_GHOSTS_NUMBER=8 \
	-DTGI \
	-DFULL_GAME \
	-DALT_PRINT \
    -DDEFAULT_CLEAR_SCREEN \
	$(CROSS_LIB_PATH)/display/init_graphics/cc65/atari_lynx/atari_lynx_init_graphics.c \
	$(CROSS_LIB_PATH)/display/alt_print/tgi_alt_print.c \
	$(FULL_FILES) \
	-o $(BUILD_PATH)/X$(GAME_NAME)_ATARI_LYNX.lnx



atari_lynx_gfx: $(ASSETS_PATH)/8x6_tiles.s
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS) -Or -t lynx \
	-D__ATARI_LYNX__  -D_XL_SLOW_DOWN_FACTOR=2600 -DANIMATE_PLAYER \
	-DNO_SET_SCREEN_COLORS  -DXSize=20 -DYSize=17 -D_XL_NUMBER_OF_TILES=27 \
	-DTGI_GFX \
	-DFULL_GAME \
	-DALT_PRINT \
	$(CROSS_LIB_PATH)/display/alt_print/tgi_gfx_print.c \
	$(CROSS_LIB_PATH)/sound/cc65/atari_lynx/atari_lynx_sounds.c \
	$(CROSS_LIB_PATH)/sound/cc65/atari_lynx/chibisound.asm \
	$(ASSETS_PATH)/8x6_tiles.s \
	$(CROSS_LIB_PATH)/display/init_graphics/cc65/atari_lynx/atari_lynx_gfx_init_graphics.c \
	$(FULL_FILES) \
	-o $(BUILD_PATH)/X$(GAME_NAME)_$@.lnx


#################################################################

c16: c16_16k


plus4: c16_32k


c16_16k: $(ASSETS_PATH)/cc65_udc_arcade_64_chars.s
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS) -Or -Cl -t c16 \
	--config $(CFG_PATH)/cc65/c16-16k_GFX_64chars.cfg \
	-DFORCE_NO_CONIO_LIB -DNO_SET_SCREEN_COLORS \
	-DREDEFINED_CHARS \
	-DSOUNDS \
	-DALT_PRINT \
	-DANIMATE_PLAYER \
	-DMEMORY_MAPPED \
	-DUSE_ASSEMBLY_CLEAR_SCREEN \
	-DC16_UNEXPANDED \
	-DUSE_KERNAL_CLEAR_SCREEN \
	-DALT_SLEEP \
	-D_XL_SLOW_DOWN_FACTOR=550 \
	-DUDG_BASE_FACTOR=15 \
	$(CROSS_LIB_PATH)/display/init_graphics/cc65/c264/c16_linked_redefined_chars_init_graphics.c \
	$(CROSS_LIB_PATH)/sound/cc65/c264/c264_sounds.c \
	$(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c \
	$(FULL_FILES) \
	$(CROSS_LIB_PATH)/sleep/sleep_macros.c \
	$(ASSETS_PATH)/cc65_udc_arcade_64_chars.s \
	-o $(BUILD_PATH)/X$(GAME_NAME)_$@.prg


# TODO: This should use
# c16_linked_redefined_chars_init_graphics
c16_16k_old: $(ASSETS_PATH)/cc65_udc_arcade_64_chars.s
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS) -Or -Cl -t c16 $(DRAW_SKIP) \
	--config $(CFG_PATH)/cc65/c16-16k_GFX_64chars.cfg \
	-DFORCE_NO_CONIO_LIB \
	-DFULL_GAME \
	-DREDEFINED_CHARS \
	-DSOUNDS \
	-DALT_PRINT \
	-DANIMATE_PLAYER \
	-DMEMORY_MAPPED \
	-DC16_UNEXPANDED -DNO_SCREEN_CODES -DNO_SET_SCREEN_COLORS \
	-DDEFAULT_CLEAR_SCREEN \
	-DALT_SLEEP \
	-D_XL_SLOW_DOWN_FACTOR=550 \
	-DDANCE -DEND_SCREEN -DUDG_BASE_FACTOR=15 \
	$(CROSS_LIB_PATH)/display/init_graphics/cc65/c264/c16_redefined_chars_init_graphics.c \
	$(CROSS_LIB_PATH)/sound/cc65/c264/c264_sounds.c \
	$(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c \
	$(CROSS_LIB_PATH)/sleep/sleep_macros.c \
	$(FULL_FILES) \
	$(ASSETS_PATH)/cc65_udc_64_chars.s \
	-o $(BUILD_PATH)/X$(GAME_NAME)_c16_16k.prg


c16_32k: $(ASSETS_PATH)/cc65_udc_arcade_64_chars.s
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS) -Or -Cl -t c16 $(DRAW_SKIP) \
	--config $(CFG_PATH)/cc65/c16-32k_GFX_64chars.cfg \
	-DFORCE_NO_CONIO_LIB -DEXTRA_TITLE \
	-DFULL_GAME \
	-DREDEFINED_CHARS \
	-DSOUNDS \
	-DALT_PRINT \
	-DANIMATE_PLAYER \
	-DMEMORY_MAPPED \
	-DC16_UNEXPANDED \
	-DDEFAULT_CLEAR_SCREEN \
	-DALT_SLEEP \
	-D_XL_SLOW_DOWN_FACTOR=550 \
	-DDANCE -DEND_SCREEN -DUDG_BASE_FACTOR=23 \
	$(CROSS_LIB_PATH)/display/init_graphics/cc65/c264/c16_linked_redefined_chars_init_graphics.c \
	$(CROSS_LIB_PATH)/sound/cc65/c264/c264_sounds.c \
	$(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c \
	$(CROSS_LIB_PATH)/sleep/sleep_macros.c \
	$(FULL_FILES) \
	$(ASSETS_PATH)/cc65_udc_64_chars.s \
	-o $(BUILD_PATH)/X$(GAME_NAME)_c16_32k.prg


#################################################################

c64: $(ASSETS_PATH)/cc65_udc_arcade.s
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS) -Or -Cl -t  c64  \
	-DANIMATE_PLAYER -DSOUNDS -D_API_VERSION=$(API_VERSION) \
	--config $(CFG_PATH)/cc65/c64_GFXat0xC000.cfg  \
	-DMEMORY_MAPPED -DALT_PRINT \
	-D_XL_SLOW_DOWN_FACTOR=500 \
	$(CROSS_LIB_PATH)/sound/cc65/sid/sid_sounds.c \
	$(ASSETS_PATH)/cc65_udc_arcade.s \
	$(CROSS_LIB_PATH)/display/init_graphics/cc65/c64/c64_init_graphics.c \
	$(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c \
	$(FULL_FILES) \
	-o $(BUILD_PATH)/X$(GAME_NAME)_$@.prg

c64_v1: $(ASSETS_PATH)/cc65_udc_arcade.s
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS) -Or -Cl -t  c64 $(DRAW_SKIP) \
	-DANIMATE_PLAYER -DSOUNDS -DBETWEEN_LEVEL -DEND_SCREEN \
	--config $(CFG_PATH)/cc65/c64_GFXat0xC000.cfg  \
	-DCBM_SCREEN_CODES \
	-DMEMORY_MAPPED \
	-D_XL_SLOW_DOWN_FACTOR=440 \
	$(CROSS_LIB_PATH)/sound/cc65/sid/sid_sounds.c \
	$(ASSETS_PATH)/cc65_udc_arcade.s \
	$(CROSS_LIB_PATH)/display/init_graphics/cc65/c64/c64_init_graphics.c \
	$(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c \
	$(FULL_FILES) \
	-o $(BUILD_PATH)/X$(GAME_NAME)_c64.prg

c64_exomized: c64
	$(TOOLS_PATH)/generic/exomizer sfx basic $(BUILD_PATH)/X$(GAME_NAME)_c64.prg -o $(BUILD_PATH)/X$(GAME_NAME)_c64_exomized.prg

c64_crt: c64_exomized
	python $(TOOLS_PATH)/cc65/c64/prg2crt.py $(BUILD_PATH)/X$(GAME_NAME)_c64_exomized.prg  $(BUILD_PATH)/X$(GAME_NAME)_c64_exomized.crt


#################################################################

gamate: $(ASSETS_PATH)/cc65_gamate_tiles.s $(TOOLS_PATH)/cc65/gamate/gamate-fixcart$(COMPILEDEXT)
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS) -Or -Cl -t gamate   --config $(CFG_PATH)/cc65/gamate_reduced_stack.cfg \
	-DFULL_GAME -D_XL_SLOW_DOWN_FACTOR=1200 -DANIMATE_PLAYER -DREDEFINED_CHARS \
	-DINITIAL_SLOWDOWN=31500 -DNO_EXTRA_TITLE \
	-DLESS_TEXT \
	-DCONIO -DNO_INIT_GRAPHICS -DSOUNDS \
	-DSIMPLE_STRATEGY -DNO_HINTS -DNO_BLINKING -DNO_SET_SCREEN_COLORS \
	$(FULL_FILES) \
	$(ASSETS_PATH)/cc65_gamate_tiles.s \
	$(CROSS_LIB_PATH)/sound/cc65/gamate/gamate_sounds.c \
	-o $(BUILD_PATH)/X$(GAME_NAME)_gamate.bin
	$(TOOLS_PATH)/cc65/gamate/gamate-fixcart$(COMPILEDEXT) $(BUILD_PATH)/X$(GAME_NAME)_gamate.bin
    
#################################################################

# Graphics for fire power and ghost needs to be updated
nes: $(ASSETS_PATH)/cc65_nes_color_tiles.s
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS) -O -t nes \
	--config $(CFG_PATH)/cc65/nes_fx.cfg \
	-DNES_CONIO \
	-DANIMATE_PLAYER \
	-DDEFAULT_CLEAR_SCREEN \
	$(CROSS_LIB_PATH)/display/init_graphics/cc65/nes/nes_init_graphics.c \
	$(ASSETS_PATH)/cc65_nes_color_tiles.s \
	$(FULL_FILES) \
	-o $(BUILD_PATH)/X$(GAME_NAME)_nes.nes


#################################################################

pce: pce_32k

# -Or breaks the PCE target
pce_16k: $(ASSETS_PATH)/cc65_pce_tiles.s
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS) -O -t pce \
	-DFULL_GAME \
	-DEND_SCREEN -DBETWEEN_LEVEL \
	-DCONIO -DNO_INIT_GRAPHICS \
	-D_XL_SLOW_DOWN_FACTOR=400 \
	--config $(CFG_PATH)/cc65/pce_16k_less_stack.cfg -DANIMATE_PLAYER  \
	$(FULL_FILES) \
	$(ASSETS_PATH)/cc65_pce_tiles.s \
	-o $(BUILD_PATH)/X$(GAME_NAME)_PCE.bin
	dd if=$(BUILD_PATH)/X$(GAME_NAME)_PCE.bin ibs=1 count=8192 of=$(BUILD_PATH)/X$(GAME_NAME)_PCE_LOW.bin
	dd if=$(BUILD_PATH)/X$(GAME_NAME)_PCE.bin ibs=1 skip=8192 of=$(BUILD_PATH)/X$(GAME_NAME)_PCE_HIGH.bin
	rm $(BUILD_PATH)/X$(GAME_NAME)_PCE.bin 
	cat $(BUILD_PATH)/X$(GAME_NAME)_PCE_HIGH.bin $(BUILD_PATH)/X$(GAME_NAME)_PCE_LOW.bin > $(BUILD_PATH)/X$(GAME_NAME)_PCE_SWAPPED.pce
	rm $(BUILD_PATH)/X$(GAME_NAME)_PCE_LOW.bin
	rm $(BUILD_PATH)/X$(GAME_NAME)_PCE_HIGH.bin


# -Or breaks the PCE target
pce_32k: $(ASSETS_PATH)/cc65_pce_tiles.s
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS) -O -t pce \
	-DFULL_GAME \
	-DEND_SCREEN -DBETWEEN_LEVEL \
	-DCONIO -DNO_INIT_GRAPHICS \
	--config $(CFG_PATH)/cc65/pce_32k.cfg -DANIMATE_PLAYER  \
	$(FULL_FILES) \
	$(ASSETS_PATH)/cc65_pce_tiles.s \
	-o $(BUILD_PATH)/X$(GAME_NAME)_PCE.bin
	dd if=$(BUILD_PATH)/X$(GAME_NAME)_PCE.bin ibs=1 count=24576 of=$(BUILD_PATH)/X$(GAME_NAME)_PCE_LOW.bin
	dd if=$(BUILD_PATH)/X$(GAME_NAME)_PCE.bin ibs=1 skip=24576 of=$(BUILD_PATH)/X$(GAME_NAME)_PCE_HIGH.bin
	rm $(BUILD_PATH)/X$(GAME_NAME)_PCE.bin 
	cat $(BUILD_PATH)/X$(GAME_NAME)_PCE_HIGH.bin $(BUILD_PATH)/X$(GAME_NAME)_PCE_LOW.bin > $(BUILD_PATH)/X$(GAME_NAME)_PCE_SWAPPED.pce
	rm $(BUILD_PATH)/X$(GAME_NAME)_PCE_LOW.bin
	rm $(BUILD_PATH)/X$(GAME_NAME)_PCE_HIGH.bin


#################################################################

creativision: creativision_16k

# Segment 'BSS' overflows memory area 'RAM' by 40 bytes
#  -m mapfile.txt
creativision_16k_fixed_colors: $(ASSETS_PATH)/8x8_chars.h
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS) -O -t creativision \
	-DNO_SET_SCREEN_COLORS -D__CREATIVISION__ -DREDEFINED_CHARS \
	-DFULL_GAME -DBETWEEN_LEVEL -DEND_SCREEN -DALT_SLEEP \
	-DMEMORY_MAPPED -DLESS_TEXT -DANIMATE_PLAYER -DNO_TITLE_LINE \
	-D_XL_SLOW_DOWN_FACTOR=1000 -DSOUNDS \
	--config $(CFG_PATH)/cc65/creativision-16k.cfg \
	$(CROSS_LIB_PATH)/sleep/sleep_macros.c \
	$(CROSS_LIB_PATH)/sound/cc65/creativision/creativision_sounds.c \
	$(FULL_FILES) \
	$(CROSS_LIB_PATH)/display/init_graphics/cc65/creativision/creativision_init_graphics.c \
	-o $(BUILD_PATH)/X$(GAME_NAME)_creativision_16k.bin
	dd if=$(BUILD_PATH)/X$(GAME_NAME)_creativision_16k.bin bs=8k skip=1 > $(BUILD_PATH)/X$(GAME_NAME)_creativision_16k_SWAPPED.bin
	dd if=$(BUILD_PATH)/X$(GAME_NAME)_creativision_16k.bin bs=8k count=1 >> $(BUILD_PATH)/X$(GAME_NAME)_creativision_16k_SWAPPED.bin
	rm $(BUILD_PATH)/X$(GAME_NAME)_creativision_16k.bin


creativision_16k: $(ASSETS_PATH)/8x8_chars.h
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS) -O -t creativision \
	-DNO_SET_SCREEN_COLORS -D__CREATIVISION__ -DREDEFINED_CHARS \
	-DFULL_GAME -DBETWEEN_LEVEL -DEND_SCREEN -DALT_SLEEP \
	-DCREATIVISION_COLOR -DLESS_TEXT -DANIMATE_PLAYER -DNO_TITLE_LINE \
	-D_XL_SLOW_DOWN_FACTOR=1000 -DSOUNDS \
	--config $(CFG_PATH)/cc65/creativision-16k.cfg \
	$(CROSS_LIB_PATH)/sleep/sleep_macros.c \
	$(CROSS_LIB_PATH)/sound/cc65/creativision/creativision_sounds.c \
	$(FULL_FILES) \
	$(CROSS_LIB_PATH)/display/init_graphics/cc65/creativision/creativision_color_init_graphics.c \
	-o $(BUILD_PATH)/X$(GAME_NAME)_creativision_16k.bin
	dd if=$(BUILD_PATH)/X$(GAME_NAME)_creativision_16k.bin bs=8k skip=1 > $(BUILD_PATH)/X$(GAME_NAME)_creativision_16k_SWAPPED.bin
	dd if=$(BUILD_PATH)/X$(GAME_NAME)_creativision_16k.bin bs=8k count=1 >> $(BUILD_PATH)/X$(GAME_NAME)_creativision_16k_SWAPPED.bin
	rm $(BUILD_PATH)/X$(GAME_NAME)_creativision_16k.bin

#################################################################

oric: oric_atmos

atmos: oric_atmos

oric1: oric_atmos

oric1_48k: oric_atmos

oric_atmos: $(ASSETS_PATH)/6x8_chars.h
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS)  -O  -DSOUNDS -DANIMATE_PLAYER -DFULL_GAME -DBETWEEN_LEVEL -DEND_SCREEN \
	-t atmos \
	-D_XL_SLOW_DOWN_FACTOR=400 \
	-D_TILE_17_COLOR=0 -D_TILE_10_COLOR=0 -D_TILE_18_COLOR=0 \
	--config $(CFG_PATH)/cc65/atmos_better_tap.cfg \
	-DORIC_COLOR \
	$(CROSS_LIB_PATH)/display/init_graphics/cc65/atmos/atmos_redefined_characters_init_graphics.c \
	$(FULL_FILES) \
	-o $(BUILD_PATH)/X$(GAME_NAME)_atmos_and_oric1_48k.tap


#################################################################


pet: pet_16k

pet_16k: 
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS) -O -t pet \
	-DFULL_GAME -D_XL_SLOW_DOWN_FACTOR=400 \
	-DNO_INIT_GRAPHICS -DCONIO -DNO_UDG -DSOUNDS \
	$(FULL_FILES) \
	$(CROSS_LIB_PATH)/sound/cc65/pet/pet_sounds.c \
	-o $(BUILD_PATH)/X$(GAME_NAME)_pet_16k.prg



#################################################################

vic20: vic20_exp_8k

vic20_exp_8k: $(ASSETS_PATH)/cc65_udc_arcade_v2.s
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS) -Or -Cl  -t vic20 -DANIMATE_PLAYER -DSOUNDS  \
	--config $(CFG_PATH)/cc65/vic20-8k_CODE2_GFX_V2.cfg \
	-DCONIO -DVIC20_EXP_8K -D_API_VERSION=$(API_VERSION) \
	-D_XL_SLOW_DOWN_FACTOR=$(_COMMON_SLOWDOWN_FACTOR)*$(_VIC20_SLOWDOWN) \
	-DREDEFINED_CHARS \
	$(ASSETS_PATH)/cc65_udc_arcade_v2.s \
	$(FULL_FILES) \
	--code-name CODE2 \
	$(CROSS_LIB_PATH)/display/init_graphics/cc65/vic20/vic20_init_graphics.c \
	$(CROSS_LIB_PATH)/sound/cc65/vic20/vic20_sounds.c \
	-o $(BUILD_PATH)/X$(GAME_NAME)_$@.prg

vic20_exp_8k_v1: $(ASSETS_PATH)/cc65_udc_arcade.s
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS)  -Or -Cl  -t vic20 -DANIMATE_PLAYER -DSOUNDS  \
	--config $(CFG_PATH)/cc65/vic20-8k_CODE2_GFX.cfg \
	-DCONIO -DVIC20_EXP_8K \
	-D_XL_SLOW_DOWN_FACTOR=550 -DCC65_GOTO \
	-DREDEFINED_CHARS -DBETWEEN_LEVEL -DEND_SCREEN \
	$(ASSETS_PATH)/cc65_udc_arcade.s \
	$(FULL_FILES) \
	--code-name CODE2 \
	$(CROSS_LIB_PATH)/display/init_graphics/cc65/vic20/vic20_init_graphics.c \
	$(CROSS_LIB_PATH)/sound/cc65/vic20/vic20_sounds.c \
	-o $(BUILD_PATH)/X$(GAME_NAME)_$@.prg


vic20_wait_vsync: vic20_exp_16k_wait_vsync

vic20_exp_8k_wait_vsync: $(ASSETS_PATH)/cc65_udc_arcade.s
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS)  -Or -Cl  -t vic20 -DANIMATE_PLAYER -DSOUNDS  \
	--config $(CFG_PATH)/cc65/vic20-8k_CODE2_GFX.cfg \
	-DCONIO -DVIC20_EXP_8K -DUSE_WAIT_V_SYNC -DDEBUG_GHOST_DISPLAY \
	-D_XL_SLOW_DOWN_FACTOR=500 -DCC65_GOTO \
	-DREDEFINED_CHARS -DBETWEEN_LEVEL -DEND_SCREEN \
	$(ASSETS_PATH)/cc65_udc_arcade.s \
	$(FULL_FILES) \
	--code-name CODE2 \
	$(CROSS_LIB_PATH)/display/init_graphics/cc65/vic20/vic20_init_graphics.c \
	$(CROSS_LIB_PATH)/sound/cc65/vic20/vic20_sounds.c \
	-o $(BUILD_PATH)/X$(GAME_NAME)_$@.prg

#################################################################
# Z88DK


#################################################################

jupiter_ace: ace

ace: ace_exp_16k

ace_exp_16k: $(ASSETS_PATH)/z88dk_xchase.asm
	$(Z88DK_PATH)$(MYZ88DK) +ace $(SCCZ80_OPTS) $(INCLUDE_OPTS) \
	-D__ACE__ -DFULL_GAME -DBETWEEN_LEVEL -DEND_SCREEN \
	-DSOUNDS \
	-DCONIO \
	-clib=default \
	-DUDG_GRAPHICS \
	-DANIMATE_PLAYER \
	$(CROSS_LIB_PATH)/display/init_graphics/z88dk/udg/udg_init_graphics.c \
	$(ASSETS_PATH)/z88dk_xchase.asm \
	$(FULL_FILES) \
	-o ace -Cz--audio -create-app	
	cp ace.wav $(BUILD_PATH)/X$(GAME_NAME)_$@.wav
	cp ace.tap $(BUILD_PATH)/X$(GAME_NAME)_$@.tap
	rm ace.wav
	rm ace.tap
	rm ace


#################################################################


aquarius: aquarius_exp_16k

aquarius_exp_16k: 
	$(Z88DK_PATH)$(MYZ88DK) +aquarius $(SCCZ80_OPTS) -clib=ansi $(INCLUDE_OPTS) -vn \
	-DSOUNDS -D__AQUARIUS__ \
	-lndos -D_XL_SLOW_DOWN_FACTOR=1500 -DNO_UDG \
	-DCONIO -DNO_INIT_GRAPHICS \
	$(FULL_FILES) \
	-create-app	\
	-o $(BUILD_PATH)/X$(GAME_NAME)_aquarius_exp_16k
	rm $(BUILD_PATH)/X$(GAME_NAME)_aquarius_exp_16k
	# rm X$(GAME_NAME)_aquarius_exp_16k
	# tar czvf X$(GAME_NAME)_aquarius_exp_16k.tar.zip X$(GAME_NAME)_aquarius_exp_16k.caq _X$(GAME_NAME)_aquarius_exp_16k.caq
	# rm X$(GAME_NAME)_aquarius_exp_16k.caq
	# rm _X$(GAME_NAME)_aquarius_exp_16k.caq
	# mv X$(GAME_NAME)_aquarius_exp_16k.tar.zip $(BUILD_PATH)

# experimental
aquarius_exp_4k: 
	$(Z88DK_PATH)$(MYZ88DK) +aquarius -SO3 -compiler=sdcc -clib=ansi $(INCLUDE_OPTS) -vn \
	-pragma-include:$(CFG_PATH)/z88dk/zpragma_clib.inc \
	-D__AQUARIUS__ \
	-lndos -D_XL_SLOW_DOWN_FACTOR=1050 -DNO_UDG \
	-DCONIO -DNO_INIT_GRAPHICS \
	$(FULL_FILES) \
	-create-app	\
	-o $(BUILD_PATH)/X$(GAME_NAME)_aquarius_exp_4k
	rm $(BUILD_PATH)/X$(GAME_NAME)_aquarius_exp_4k


# -DSOUNDS 
# -DFORCE_BIT_BANG 
#################################################################

c128: c128_z80_80col

c128_z80_80col: $(ASSETS_PATH)/z88dk_sprites_definitions.h
	$(Z88DK_PATH)$(MYZ88DK) +c128 $(SCCZ80_OPTS) -lgfx128hr \
	$(INCLUDE_OPTS) $(ULTRA_DRAW_SKIP) \
	-lndos -subtype=disk \
	-D__C128_Z80__ -DSPRITE_X_STEP=8 -DSPRITE_Y_STEP=8 -D_XL_SLOW_DOWN_FACTOR=1 \
	-DZ88DK_SPRITES \
	-DFULL_GAME \
	-DZ88DK_JOYSTICK \
	-DALT_PRINT \
	-D_XL_NO_COLOR \
	$(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c \
	$(CROSS_LIB_PATH)/display/init_graphics/z88dk/c128/c128_init_graphics.c \
	$(FULL_FILES) \
	-create-app -oa80.bin
	$(TOOLS_PATH)/generic/c1541 -format "crosschase,0" d64 X$(GAME_NAME)_c128_z80_80col.d64
	$(TOOLS_PATH)/generic/c1541 -attach X$(GAME_NAME)_c128_z80_80col.d64 -write a80.ldr
	$(TOOLS_PATH)/generic/c1541 -attach X$(GAME_NAME)_c128_z80_80col.d64 -write a80
	mv X$(GAME_NAME)_c128_z80_80col.d64 $(BUILD_PATH)/
	rm A80.LDR
	rm A80
	rm a80.bin


#################################################################

cpc: cpc_mode0

cpc_mode0: $(ASSETS_PATH)/z88dk_xchase.asm  $(TOOLS_PATH)/z88dk/cpc/nocart/nocart$(COMPILEDEXT)
	$(Z88DK_PATH)$(MYZ88DK) +cpc -subtype=dsk $(SCCZ80_OPTS) $(INCLUDE_OPTS) \
	-pragma-include:$(CFG_PATH)/z88dk/zpragma_clib.inc \
	-DYSize=25 -DXSize=20 -DFORCE_SCREEN_MODE=0 \
	-DANIMATE_PLAYER -DALT_SLEEP \
	-DSOUNDS \
	-DZ88DK_JOYSTICK \
	-D_XL_SLOW_DOWN_FACTOR=1900 \
	-D__CPC__ \
	-lndos -create-app \
	-DCONIO \
	-DUDG_GRAPHICS \
	-pragma-redirect:fputc_cons=fputc_cons_generic \
	-o xbin \
	$(CROSS_LIB_PATH)/display/init_graphics/z88dk/udg/udg_init_graphics.c \
	$(CROSS_LIB_PATH)/sound/z88dk/psg/ay-3-8910_psg_sounds.c \
	$(ASSETS_PATH)/z88dk_xchase.asm \
	$(CROSS_LIB_PATH)/sleep/sleep_macros.c \
	$(FULL_FILES)
	mv xbin $(BUILD_PATH)/
	cp $(TOOLS_PATH)/z88dk/cpc/nocart/*.rom .
	$(TOOLS_PATH)/z88dk/cpc/nocart/nocart$(COMPILEDEXT) xbin.dsk  $(BUILD_PATH)/X$(GAME_NAME)_$@_gx4000.cpr   -c 'run"XBIN.CPC'
	rm os.rom
	rm amsdos.rom
	rm basic.rom
	mv xbin.dsk $(BUILD_PATH)/X$(GAME_NAME)_$@.dsk
	rm -rf xbin_BANK_7.bin
	rm -rf xbin.cpc
	rm -rf $(BUILD_PATH)/xbin  

cpc_cpcrslib: $(ASSETS_PATH)/z88dk_cpc_Chars8.asm
	$(Z88DK_PATH)$(MYZ88DK) +cpc -subtype=dsk $(SCCZ80_OPTS) $(INCLUDE_OPTS) -DANIMATE_PLAYER -vn  -clib=ansi \
	-D__CPC__ \
	-DSOUNDS -DFULL_GAME -DBETWEEN_LEVEL -DEND_SCREEN \
	-DCPCRSLIB \
	-DZ88DK_JOYSTICK \
	-D_XL_SLOW_DOWN_FACTOR=1900 \
	-lndos -create-app -o 	$(BUILD_PATH)/X$(GAME_NAME)XXX \
	-DCPCRSLIB_GRAPHICS \
	$(ASSETS_PATH)/z88dk_cpc_Chars8.asm \
	$(CROSS_LIB_PATH)/sound/z88dk/psg/ay-3-8910_psg_sounds.c \
	$(CROSS_LIB_PATH)/display/init_graphics/z88dk/cpc/cpc_cpcrslib_init_graphics.c \
	$(FULL_FILES)
	rm $(BUILD_PATH)/X$(GAME_NAME)XXX.cpc 
	rm -rf $(BUILD_PATH)/X$(GAME_NAME)XXX_BANK_7.bin    
	rm -rf $(BUILD_PATH)/X$(GAME_NAME)XXX
	rm -rf $(BUILD_PATH)/X$(GAME_NAME)XXX.COM
	mv $(BUILD_PATH)/X$(GAME_NAME)XXX.dsk $(BUILD_PATH)/X$(GAME_NAME)XXX_$@.dsk
	# $(TOOLS_PATH)/z88dk/cpc/2cdt.exe -n -r cross_$(GAME_NAME) $(BUILD_PATH)/X$(GAME_NAME)_cpc.cpc  $(BUILD_PATH)/X$(GAME_NAME)_cpc.cdt
	# rm -rf X$(GAME_NAME)_cpc.dsk
	# $(TOOLS_PATH)/z88dk/cpc/cpcxfsw -nd X$(GAME_NAME)_cpc.dsk
	# $(TOOLS_PATH)/z88dk/cpc/cpcxfsw X$(GAME_NAME)_cpc.dsk -p $(BUILD_PATH)/X$(GAME_NAME)_cpc.cpc x$(GAME_NAME)
	# mv X$(GAME_NAME)_cpc.dsk $(BUILD_PATH)/
	# cp $(TOOLS_PATH)/z88dk/cpc/nocart/*.rom .
	# $(TOOLS_PATH)/z88dk/cpc/nocart/nocart.exe  $(BUILD_PATH)/X$(GAME_NAME)_cpc.dsk  $(BUILD_PATH)/X$(GAME_NAME)_gx4000.cpr   -c 'run"x$(GAME_NAME)'
	# rm os.rom
	# rm amsdos.rom
	# rm basic.rom
	# rm $(BUILD_PATH)/X$(GAME_NAME)_cpc.cpc 
	# rm $(BUILD_PATH)/X$(GAME_NAME)_cpc.prg


#################################################################

cpm: cpm_z80_adm3a

cpm_z80_adm3a:
	$(Z88DK_PATH)$(MYZ88DK) +cpm $(SCCZ80_OPTS) \
	$(INCLUDE_OPTS) \
	-D_XL_SLOW_DOWN_FACTOR=1000 \
	-DCONIO_ADM3A \
	-D__CPM_80X24__ \
	-DFULL_GAME -DLESS_TEXT -DNO_WAIT \
	-DCONIO -DNO_INIT_GRAPHICS \
	-create-app -o$(BUILD_PATH)/X$(GAME_NAME)_cpm_adm3a.bin \
	$(FULL_FILES)
	rm $(BUILD_PATH)/X$(GAME_NAME)_cpm_adm3a.bin


#################################################################


gal_plus_no_gfx:
	$(Z88DK_PATH)$(MYZ88DK) +gal -subtype=galaxyp $(SCCZ80_OPTS) \
	$(INCLUDE_OPTS) \
	-pragma-need=ansiterminal \
	-D_XL_SLOW_DOWN_FACTOR=900 \
	-D__GAL__ -D__GAL_PLUS__ -DFULL_GAME -DEND_SCREEN -DBETWEEN_LEVEL \
	-DCONIO -DNO_INIT_GRAPHICS \
	-vn -lndos -create-app -o  $(BUILD_PATH)/X$(GAME_NAME)_galaksija_plus.prg \
	$(FULL_FILES) 
	rm $(BUILD_PATH)/X$(GAME_NAME)_galaksija_plus.prg


gal_plus: gal_plus_no_gfx

gal_plus_gfx: $(ASSETS_PATH)/z88dk_xchase.asm
	$(Z88DK_PATH)$(MYZ88DK) +gal -subtype=galaxyp $(SCCZ80_OPTS) \
	$(INCLUDE_OPTS) \
	-pragma-need=ansiterminal -pragma-define:cd=1 -pragma-redirect:CRT_FONT=_font_8x8_vga_rom \
	-D_XL_SLOW_DOWN_FACTOR=900 -DXSize=32 -DYSize=26 \
	-D__GAL__ -D__GAL_PLUS__ -DFULL_GAME -DEND_SCREEN -DBETWEEN_LEVEL \
	-DCONIO -DUDG_GRAPHICS -DNO_PRINT -DNO_SLEEP -DNO_WAIT \
	-vn -lndos -create-app -o  $(BUILD_PATH)/X$(GAME_NAME)_galaksija_plus.prg \
	$(FULL_FILES) $(ASSETS_PATH)/z88dk_xchase.asm \
	$(CROSS_LIB_PATH)/display/init_graphics/z88dk/udg/udg_init_graphics.c
	rm $(BUILD_PATH)/X$(GAME_NAME)_galaksija_plus.prg


#################################################################


gb: $(ASSETS_PATH)/z88dk_gameboy.asm
	$(Z88DK_PATH)$(MYZ88DK) +gb -v $(INCLUDE_OPTS) -pragma-redirect:fputc_cons=fputc_cons_generic \
	-D__GB__ \
	-DXSize=20 \
	-DYSize=18 \
	-DNO_SET_SCREEN_COLORS \
	-D_XL_NO_COLOR -DANIMATE_PLAYER \
	-DFULL_GAME -DSOUNDS \
	-DCONIO -DZ88DK_JOYSTICK \
	-lndos -D_XL_SLOW_DOWN_FACTOR=2800 \
	-DUDG_GRAPHICS $(CROSS_LIB_PATH)/display/init_graphics/z88dk/udg/udg_init_graphics.c \
	$(ASSETS_PATH)/z88dk_gameboy.asm \
	$(FULL_FILES) \
	$(CROSS_LIB_PATH)/sound/z88dk/gb/gb_sounds.c \
	-create-app -o$(BUILD_PATH)/X$(GAME_NAME)_$@.bin
	rm $(BUILD_PATH)/X$(GAME_NAME)_$@.bin
	rm $(BUILD_PATH)/X$(GAME_NAME)_$@_BSS.bin
	rm $(BUILD_PATH)/X$(GAME_NAME)_$@_DATA.bin
	rm $(BUILD_PATH)/X$(GAME_NAME)_$@_BANK_1F.bin


gb_wait_vsync: $(ASSETS_PATH)/z88dk_gameboy.asm
	$(Z88DK_PATH)$(MYZ88DK) +gb $(SCCZ80_ROM_OPTS) $(INCLUDE_OPTS) -pragma-redirect:fputc_cons=fputc_cons_generic \
	-D__GB__ \
	-DXSize=20 \
	-DYSize=18 \
	-DNO_SET_SCREEN_COLORS \
	-D_XL_NO_COLOR -DANIMATE_PLAYER -DUSE_WAIT_V_SYNC \
	-DFULL_GAME \
	-DCONIO -DZ88DK_JOYSTICK \
	-lndos -D_XL_SLOW_DOWN_FACTOR=1700 \
	-DUDG_GRAPHICS $(CROSS_LIB_PATH)/display/init_graphics/z88dk/udg/udg_init_graphics.c \
	$(ASSETS_PATH)/z88dk_gameboy.asm \
	$(FULL_FILES) \
	-create-app -o$(BUILD_PATH)/X$(GAME_NAME)_$@.bin
	rm $(BUILD_PATH)/X$(GAME_NAME)_$@.bin
	rm $(BUILD_PATH)/X$(GAME_NAME)_$@_BSS.bin
	rm $(BUILD_PATH)/X$(GAME_NAME)_$@_DATA.bin
	rm $(BUILD_PATH)/X$(GAME_NAME)_$@_BANK_1F.bin

#################################################################


gg: gamegear

gamegear: $(ASSETS_PATH)/z88dk_xchase.asm 
	$(Z88DK_PATH)$(MYZ88DK) +sms -subtype=gamegear $(SCCZ80_ROM_OPTS) $(INCLUDE_OPTS) -pragma-redirect:fputc_cons=fputc_cons_generic \
	-D__SMS__ -D__GAME_GEAR__ \
	-DXSize=20 \
	-DYSize=18 \
	-DNO_SET_SCREEN_COLORS \
	-DANIMATE_PLAYER -DFORCE_BIT_BANG \
	-DFULL_GAME -DNO_EXTRA_TITLE \
	-DCONIO -DFORCE_CONIO_LIB -DZ88DK_JOYSTICK \
	-lndos -D_XL_SLOW_DOWN_FACTOR=3000 \
	-DUDG_GRAPHICS $(CROSS_LIB_PATH)/display/init_graphics/z88dk/udg/udg_init_graphics.c \
	$(ASSETS_PATH)/z88dk_xchase.asm \
	$(FULL_FILES) \
	-create-app -o$(BUILD_PATH)/X$(GAME_NAME)_gamegear.bin
	rm $(BUILD_PATH)/X$(GAME_NAME)_gamegear.bin
	rm $(BUILD_PATH)/X$(GAME_NAME)_gamegear_BSS.bin
	rm $(BUILD_PATH)/X$(GAME_NAME)_gamegear_DATA.bin
	rm $(BUILD_PATH)/X$(GAME_NAME)_gamegear_BANK_1F.bin


#################################################################


laser500: $(ASSETS_PATH)/z88dk_xchase.asm 
	$(Z88DK_PATH)$(MYZ88DK) +laser500 $(SCCZ80_OPTS) -vn -Cz--audio \
	-create-app -o laser500bm.bin \
	$(INCLUDE_OPTS) \
	-D__LASER500__ -DUDG_GRAPHICS -DXSize=40 -DYSize=22 -DFORCE_SCREEN_MODE=2 \
	-DFORCE_BIT_BANG -DSOUNDS \
	-DFULL_GAME -DLESS_TEXT -D_XL_SLOW_DOWN_FACTOR=2000 \
	-DCONIO \
	-DANIMATE_PLAYER \
	-DUDG_GRAPHICS \
	-lndos \
	$(FULL_FILES) \
	$(CROSS_LIB_PATH)/display/init_graphics/z88dk/udg/udg_init_graphics.c \
	$(ASSETS_PATH)/z88dk_xchase.asm 
	mv laser500bm.bin $(BUILD_PATH)/X$(GAME_NAME)_$@.bin
	rm laser500bm.cas
	mv laser500bm.wav $(BUILD_PATH)/X$(GAME_NAME)_$@.wav


#################################################################


mc1000: $(ASSETS_PATH)/z88dk_xchase.asm 
	$(Z88DK_PATH)$(MYZ88DK) +mc1000 $(SCCZ80_OPTS) $(INCLUDE_OPTS) -pragma-define:REGISTER_SP=0x3fff \
	-subtype=gaming -D_XL_SLOW_DOWN_FACTOR=750 \
	-DZ88DK_JOYSTICK \
	-DFULL_GAME  \
	-DANIMATE_PLAYER \
	-DUDG_GRAPHICS \
	-D__MC1000__ -DSOUNDS -DEND_SCREEN -DBETWEEN_LEVEL \
	-DCONIO \
	-vn  -lndos -Cz--audio \
	-create-app -o mc1000.bin \
	-clib=default -pragma-redirect:fputc_cons=fputc_cons_generic \
	$(CROSS_LIB_PATH)/display/init_graphics/z88dk/udg/udg_init_graphics.c \
	$(ASSETS_PATH)/z88dk_xchase.asm \
	$(FULL_FILES)
	mv mc1000.wav $(BUILD_PATH)/X$(GAME_NAME)_mc1000_joystick.wav
	rm mc1000.bin
	rm mc1000.cas


#################################################################

msx: msx_32k_rom

msx_32k_rom_fixed_colors: $(ASSETS_PATH)/8x8_chars.h 
	$(Z88DK_PATH)$(MYZ88DK) +msx $(SCCZ80_OPTS) $(INCLUDE_OPTS) -lmsxbios \
	-DUSE_MSX_BIOS \
	-DINITIAL_SLOWDOWN=29000 \
	-DSOUNDS -DANIMATE_PLAYER \
	-vn -DMSX_VPOKE -DFULL_GAME -D__MSX__ -DEND_SCREEN -DBETWEEN_LEVEL \
	-lndos -subtype=rom \
	-create-app -o $(BUILD_PATH)/X$(GAME_NAME)_msx_32k.rom \
	-DMEMORY_MAPPED \
	-DDEFAULT_CLEAR_SCREEN \
	-DALT_PRINT \
	-DLESS_TEXT \
	-DZ88DK_JOYSTICK \
	-D_XL_SLOW_DOWN_FACTOR=1300 \
	$(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c \
	$(CROSS_LIB_PATH)/display/init_graphics/z88dk/msx/msx_redefined_chars_init_graphics.c	\
	$(CROSS_LIB_PATH)/sound/z88dk/psg/ay-3-8910_psg_sounds.c \
	$(FULL_FILES)
	rm $(BUILD_PATH)/X$(GAME_NAME)_msx_32k_BSS.bin
	rm $(BUILD_PATH)/X$(GAME_NAME)_msx_32k_DATA.bin

msx_32k_rom: $(ASSETS_PATH)/z88dk_xchase.asm   
	$(Z88DK_PATH)$(MYZ88DK) +msx $(SCCZ80_OPTS) $(INCLUDE_OPTS) \
	-pragma-redirect:fputc_cons=fputc_cons_generic \
	-DSOUNDS -DANIMATE_PLAYER \
	-vn   -D__MSX__  \
	-lndos -subtype=rom \
	-create-app -o $(BUILD_PATH)/X$(GAME_NAME)_msx_32k.rom \
	-DCONIO  -DFORCE_NARROW -DXSize=32 -DYSize=24 \
	-DUDG_GRAPHICS \
	-DZ88DK_JOYSTICK \
	-D_XL_SLOW_DOWN_FACTOR=2000 \
	$(ASSETS_PATH)/z88dk_xchase.asm \
	$(CROSS_LIB_PATH)/display/init_graphics/z88dk/udg/udg_init_graphics.c \
	$(CROSS_LIB_PATH)/sound/z88dk/psg/ay-3-8910_psg_sounds.c \
	$(FULL_FILES)
	rm $(BUILD_PATH)/X$(GAME_NAME)_msx_32k_BSS.bin
	rm $(BUILD_PATH)/X$(GAME_NAME)_msx_32k_DATA.bin


#################################################################

samcoupe: $(ASSETS_PATH)/z88dk_xchase.asm
	$(Z88DK_PATH)$(MYZ88DK) +sam $(SCCZ80_OPTS) $(INCLUDE_OPTS) \
	-D__SAM__ -DEND_SCREEN -DANIMATE_PLAYER -DBETWEEN_LEVEL \
	-DCONIO -DUDG_GRAPHICS 	-D_XL_SLOW_DOWN_FACTOR=3000 \
	-clib=ansi -pragma-define:ansicolumns=32 -vn \
	-DFULL_GAME -DFORCE_BIT_BANG -o $(BUILD_PATH)/FULL_samcoupe.bin -lndos \
	$(FULL_FILES) \
	$(CROSS_LIB_PATH)/display/init_graphics/z88dk/udg/udg_init_graphics.c \
	$(ASSETS_PATH)/z88dk_xchase.asm
	cp $(TOOLS_PATH)/z88dk/samcoupe/samdos2_empty $(TOOLS_PATH)/z88dk/samcoupe/samdos2
	$(TOOLS_PATH)/z88dk/samcoupe/pyz80.py -I $(TOOLS_PATH)/z88dk/samcoupe/samdos2 $(TOOLS_PATH)/z88dk/samcoupe/sam_wrapper.asm
	mv $(TOOLS_PATH)/z88dk/samcoupe/sam_wrapper.dsk $(BUILD_PATH)/X$(GAME_NAME)_samcoupe.dsk
	rm $(BUILD_PATH)/FULL_samcoupe.bin


#################################################################


sms: sms_gfx


sms_gfx: $(ASSETS_PATH)/z88dk_xchase.asm 
	$(Z88DK_PATH)$(MYZ88DK) +sms $(SCCZ80_ROM_OPTS) $(INCLUDE_OPTS) -pragma-redirect:fputc_cons=fputc_cons_generic \
	-D__SMS__ \
	-DXSize=32 \
	-DYSize=22 \
	-DNO_SET_SCREEN_COLORS \
	-DANIMATE_PLAYER \
	-DFULL_GAME -DFORCE_BIT_BANG \
	-DCONIO -DFORCE_CONIO_LIB -DZ88DK_JOYSTICK \
	-lndos -D_XL_SLOW_DOWN_FACTOR=2500 \
	-DUDG_GRAPHICS $(CROSS_LIB_PATH)/display/init_graphics/z88dk/udg/udg_init_graphics.c \
	$(ASSETS_PATH)/z88dk_xchase.asm \
	$(FULL_FILES) \
	-create-app -o$(BUILD_PATH)/X$(GAME_NAME)_sms.bin
	rm $(BUILD_PATH)/X$(GAME_NAME)_sms.bin
	rm $(BUILD_PATH)/X$(GAME_NAME)_sms_BSS.bin
	rm $(BUILD_PATH)/X$(GAME_NAME)_sms_DATA.bin
	rm $(BUILD_PATH)/X$(GAME_NAME)_sms_BANK_1F.bin


#################################################################

spectrum: spectrum_48k

spectrum_48k: $(ASSETS_PATH)/z88dk_xchase.asm 
	$(Z88DK_PATH)$(MYZ88DK) +zx $(SCCZ80_OPTS) $(INCLUDE_OPTS) \
	-pragma-include:$(CFG_PATH)/z88dk/zpragma_clib.inc \
	-pragma-redirect:getk=getk_inkey \
	-DFULL_GAME \
	-DANIMATE_PLAYER \
	-DSOUNDS \
	-DZ88DK_JOYSTICK \
	-D_XL_SLOW_DOWN_FACTOR=1600 \
	-DEND_SCREEN -DBETWEEN_LEVEL \
	-D__SPECTRUM__ \
	-lndos -create-app \
	-DCONIO \
	-DUDG_GRAPHICS \
	-pragma-redirect:fputc_cons=fputc_cons_generic \
	-o $(BUILD_PATH)/X$(GAME_NAME)_spectrum_48k.prg \
	$(CROSS_LIB_PATH)/display/init_graphics/z88dk/udg/udg_init_graphics.c \
	$(ASSETS_PATH)/z88dk_xchase.asm \
	$(FULL_FILES)
	rm $(BUILD_PATH)/X$(GAME_NAME)_spectrum_48k.prg
	rm $(BUILD_PATH)/X$(GAME_NAME)_spectrum_48k_BANK_7.bin


spectrum_48k_keyboard: $(ASSETS_PATH)/z88dk_xchase.asm 
	$(Z88DK_PATH)$(MYZ88DK) +zx $(SCCZ80_OPTS) $(INCLUDE_OPTS) \
	-pragma-include:$(CFG_PATH)/z88dk/zpragma_clib.inc \
	-pragma-redirect:getk=getk_inkey \
	-DFULL_GAME \
	-DANIMATE_PLAYER \
	-DSOUNDS \
	-D_XL_SLOW_DOWN_FACTOR=1600 \
	-DEND_SCREEN -DBETWEEN_LEVEL \
	-D__SPECTRUM__ \
	-lndos -create-app \
	-DCONIO \
	-DUDG_GRAPHICS \
	-pragma-redirect:fputc_cons=fputc_cons_generic \
	-o $(BUILD_PATH)/X$(GAME_NAME)_spectrum_48k.prg \
	$(CROSS_LIB_PATH)/display/init_graphics/z88dk/udg/udg_init_graphics.c \
	$(ASSETS_PATH)/z88dk_xchase.asm \
	$(FULL_FILES)
	rm $(BUILD_PATH)/X$(GAME_NAME)_spectrum_48k.prg
	rm $(BUILD_PATH)/X$(GAME_NAME)_spectrum_48k_BANK_7.bin


#################################################################

supervision: $(ASSETS_PATH)/cc65_udc.s 
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS) -Or -Cl -t supervision  \
	--config $(CFG_PATH)/cc65/supervision-16k_GFX_2.cfg \
	$(ASSETS_PATH)/cc65_udc.s \
	-DALT_PRINT -DALT_SLEEP \
	-DBIT_MAPPED_4 $(LIGHT_DRAW_SKIP) \
	-DDEFAULT_CLEAR_SCREEN  -D_XL_SLOW_DOWN_FACTOR=1400 \
	-DANIMATE_PLAYER -DNO_EXTRA_TITLE \
	$(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c \
	$(CROSS_LIB_PATH)/sleep/sleep_macros.c \
	$(FULL_FILES) \
	$(CROSS_LIB_PATH)/display/init_graphics/cc65/supervision/supervision_init_graphics.c \
	-o $(BUILD_PATH)/X$(GAME_NAME)_supervision.sv


#################################################################

vg5k: $(ASSETS_PATH)/z88dk_xchase.asm
	$(Z88DK_PATH)$(MYZ88DK) +vg5k $(SCCZ80_OPTS) \
	$(INCLUDE_OPTS) \
	-DSOUNDS -vn -DFULL_GAME -D__VG5K__ -DBETWEEN_LEVEL -DEND_SCREEN -DASM_DISPLAY \
	-lndos -create-app -o $(BUILD_PATH)/X$(GAME_NAME)_vg5k.prg \
	-DCONIO \
	-D_XL_SLOW_DOWN_FACTOR=750 \
	-DINITIAL_SLOWDOWN=29000 \
	-clib=default \
	-DUDG_GRAPHICS \
	-DANIMATE_PLAYER \
	$(CROSS_LIB_PATH)/display/init_graphics/z88dk/udg/udg_init_graphics.c \
	$(ASSETS_PATH)/z88dk_xchase.asm \
	$(FULL_FILES)
	rm $(BUILD_PATH)/X$(GAME_NAME)_vg5k.prg


#################################################################
vz200: vz200_24k

vz200_24k: 	
	$(Z88DK_PATH)$(MYZ88DK) +vz $(SCCZ80_OPTS) -vn -Cz--audio \
	--hardware-keyboard  --generic-console -DHARDWARE_KEYBOARD \
	$(INCLUDE_OPTS) \
	-DSOUNDS -D__VZ__ \
	-DNO_EXTRA_TITLE -D_XL_SLOW_DOWN_FACTOR=2500 \
	-DCONIO -DNO_UDG \
	-lndos \
	-create-app -o $(BUILD_PATH)/X$(GAME_NAME)_$@.vz \
	$(CROSS_LIB_PATH)/display/init_graphics/z88dk/vz200/vz200_init_graphics.c \
	$(FULL_FILES)
	rm $(BUILD_PATH)/X$(GAME_NAME)_$@.cas


#################################################################

zx81: zx81_no_gfx

zx81_gfx: zx81_32k_wrx

zx81_no_gfx: zx81_no_gfx_16k

zx81_no_gfx_16k:
	$(Z88DK_PATH)$(MYZ88DK) +zx81 $(SCCZ80_OPTS) \
	$(INCLUDE_OPTS)  \
	--opt-code-size -D_XL_SLOW_DOWN_FACTOR=900 \
	-vn -D_API_VERSION=2 \
	-D__ZX81__ -DFULL_GAME -pragma-define:ZX_CHAR_XLATE_MODE=1 \
	-DCONIO -DNO_INIT_GRAPHICS -DNO_SLEEP \
	-lndos \
	-create-app -o  $(BUILD_PATH)/X$(GAME_NAME)_zx81_16k.prg \
	$(FULL_FILES)
	rm $(BUILD_PATH)/X$(GAME_NAME)_zx81_16k.prg


zx81_32k_wrx: $(ASSETS_PATH)/z88dk_sprites_definitions.h
	$(Z88DK_PATH)$(MYZ88DK) +zx81 $(SCCZ80_OPTS) -subtype=wrx -clib=wrx \
	$(INCLUDE_OPTS) \
	-pragma-include:$(CFG_PATH)/z88dk/zpragma_clib_no_printf.inc \
	-pragma-define:hrgpage=36096 \
	-D_XL_SLOW_DOWN_FACTOR=10 -DNO_ANIMATION \
	-DXSize=32 \
	-DYSize=22 \
	-vn \
	-D__ZX81__ \
	-DZ88DK_SPRITES -DSPRITE_X_STEP=8 -DSPRITE_Y_STEP=8 \
	-DLESS_PRINT \
	-DFULL_GAME \
	-lndos \
	-DANIMATE_PLAYER \
	-DLESS_TEXT \
	-D_XL_NO_COLOR \
	-DSIMPLE_STRATEGY \
	-DNO_SET_SCREEN_COLORS \
	-DALT_PRINT \
	-DFEWER_SPRITES \
	-create-app -o  $(BUILD_PATH)/X$(GAME_NAME)_zx81_32k_wrx.prg \
	$(FULL_FILES) \
	$(CROSS_LIB_PATH)/display/init_graphics/z88dk/zx81/zx81_init_graphics.c \
	$(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c
	rm $(BUILD_PATH)/X$(GAME_NAME)_zx81_32k_wrx.prg


#################################################################
# CMOC


#################################################################

COCO_OPTS_TINY  ?= -O0 -Wno-const  -D__COCO__ -DTINY_GAME 

COCO_OPTS_LIGHT ?= -O0 -Wno-const -D__COCO__

CMOC_OPTS       ?= -O0 -Wno-const -D_XL_SLOW_DOWN_FACTOR=1600 -DDEFAULT_CLEAR_SCREEN -D__CMOC__  -DMEMORY_MAPPED -DNO_INIT_GRAPHICS -DALT_PRINT -DLESS_TEXT -DFULL_GAME 

COCO_OPTS       ?= -D__COCO__ $(CMOC_OPTS) -DNO_UDG -DALT_SLEEP

GFX_COLOR_OPTS          ?= $(CMOC_OPTS) -DALT_PRINT



GFX_OPTS                    ?= $(CMOC_OPTS) -DBIT_MAPPED -DALT_PRINT -D_XL_SLOW_DOWN_FACTOR=150

COCO_GFX_OPTS               ?= -D__COCO__ $(GFX_OPTS) -D_XL_NO_COLOR

COCO_GFX_COMPILE_OPTS       ?= $(COCO_GFX_OPTS)



COCO_COLOR_GFX_OPTS     ?= -D__COCO__ $(GFX_COLOR_OPTS) -DBIT_MAPPED_4 -D_API_VERSION=2 

COCO_COLOR_GFX_COMPILE_OPTS ?= $(COCO_COLOR_GFX_OPTS)


DRAGON_OPTS     ?= --dragon -D__DRAGON__ $(COCO_OPTS) 

VECTREX_OPTS    ?= -O0 --vectrex  -DNO_SLEEP -DNO_WAIT -DNO_INPUT -DNO_PRINT -Wno-const -DDEFAULT_CLEAR_SCREEN -D__CMOC__ -D__VECTREX__ -DVECTORIAL -DNO_INIT_GRAPHICS -DALT_PRINT -DLESS_TEXT -DFULL_GAME -DEND_SCREEN -DBETWEEN_LEVEL

# -DDEFAULT_CLEAR_SCREEN 
MO5_OPTS        ?= -O2 -DANIMATE_PLAYER -D_XL_SLOW_DOWN_FACTOR=1600 -DFORCE_NO_CONIO_LIB -DMACRO_SLEEP -Wno-const -D__CMOC__ -D__MO5__ -DBIT_MAPPED -DALT_PRINT -DLESS_TEXT -DFULL_GAME -DEND_SCREEN -DBETWEEN_LEVEL

TO7_OPTS        ?= -O2 -DANIMATE_PLAYER -D_XL_SLOW_DOWN_FACTOR=1600 -DMACRO_SLEEP -DFORCE_NO_CONIO_LIB -Wno-const  -D__CMOC__ -D__TO7__ -DBIT_MAPPED -DALT_PRINT -DLESS_TEXT -DFULL_GAME

TO7_ORG_DATA    ?= --org=a000 

#############################################################################################


dragon:
	$(CMOC) \
	$(DRAGON_OPTS) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/display/display_macros.c
	$(CMOC) \
	$(DRAGON_OPTS) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c
	$(CMOC) \
	$(DRAGON_OPTS) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/input/input_macros.c
	$(CMOC) \
	$(COCO_OPTS) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/sleep/sleep_macros.c
	$(CMOC) \
	$(DRAGON_OPTS) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/text/text_macros.c	
	$(CMOC) -o $(BUILD_PATH)/xchase.bin \
	$(DRAGON_OPTS) $(INCLUDE_OPTS) \
	$(SOURCE_PATH)/main.c \
	display_macros.o \
	memory_mapped_alt_print.o sleep_macros.o \
	text_macros.o \
	input_macros.o
	rm 	display_macros.o sleep_macros.o \
	memory_mapped_alt_print.o \
	text_macros.o \
	input_macros.o 
	$(TOOLS_PATH)/cmoc/dragon/bin2cas.pl -o $(BUILD_PATH)/X$(GAME_NAME)_$@.cas -D $(BUILD_PATH)/xchase.bin -A
ifeq ($(DO_WIN),1)
	$(TOOLS_PATH)/cmoc/dragon/File2VDK.exe $(BUILD_PATH)/xchase.bin
	mv $(BUILD_PATH)/xchase.bin.vdk $(BUILD_PATH)/X$(GAME_NAME)_$@.vdk
endif
	rm $(BUILD_PATH)/xchase.bin

dragon_targets: \
	dragon

	
coco: $(TOOLS_PATH)/cmoc/coco/file2dsk/file2dsk$(COMPILEDEXT)
	$(CMOC) \
	$(COCO_OPTS) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/display/display_macros.c
	$(CMOC) \
	$(COCO_OPTS) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c
	$(CMOC) \
	$(COCO_OPTS) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/input/input_macros.c
	$(CMOC) \
	$(COCO_OPTS) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/text/text_macros.c
	$(CMOC) \
	$(COCO_OPTS) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/sleep/sleep_macros.c
	$(CMOC) -o $(BUILD_PATH)/xchase.bin \
	$(COCO_OPTS) $(INCLUDE_OPTS) \
	$(SOURCE_PATH)/main.c \
	display_macros.o sleep_macros.o \
	memory_mapped_alt_print.o \
	text_macros.o input_macros.o
	rm 	display_macros.o sleep_macros.o \
	memory_mapped_alt_print.o \
	text_macros.o input_macros.o 
	mv $(BUILD_PATH)/xchase.bin XCHASE.BIN
	rm -rf $(BUILD_PATH)/X$(GAME_NAME)_$@.dsk
	$(TOOLS_PATH)/cmoc/coco/file2dsk/file2dsk$(COMPILEDEXT) XCHASE.BIN
	mv XCHASE.DSK $(BUILD_PATH)/X$(GAME_NAME)_$@.dsk
	$(TOOLS_PATH)/cmoc/dragon/bin2cas.pl -o $(BUILD_PATH)/X$(GAME_NAME)_$@.cas -C XCHASE.BIN -A
	rm XCHASE.BIN


coco_gfx: $(ASSETS_PATH)/cmoc_udc_tiles_and_fonts.s $(TOOLS_PATH)/cmoc/coco/file2dsk/file2dsk$(COMPILEDEXT)
	$(CMOC) \
	$(COCO_GFX_COMPILE_OPTS) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/sound/generic/dac_sounds.c
	$(CMOC) \
	$(COCO_GFX_COMPILE_OPTS) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/display/display_macros.c
	$(CMOC) \
	$(COCO_GFX_COMPILE_OPTS) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/display/init_graphics/cmoc/coco/coco_init_graphics.c
	$(CMOC) \
	$(COCO_GFX_COMPILE_OPTS) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c
	$(CMOC) \
	$(COCO_GFX_COMPILE_OPTS) $(INCLUDE_OPTS) \
	-c $(ASSETS_PATH)/cmoc_udc_tiles_and_fonts.s
	$(CMOC) \
	$(COCO_GFX_COMPILE_OPTS) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/sleep/sleep_macros.c
	$(CMOC) \
	$(COCO_GFX_COMPILE_OPTS) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/input/input_macros.c
	$(CMOC) \
	$(COCO_GFX_COMPILE_OPTS) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/text/text_macros.c
	$(CMOC) \
	$(COCO_GFX_COMPILE_OPTS) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/main.c
	$(CMOC) -o $(BUILD_PATH)/xchase.bin \
	$(COCO_GFX_OPTS) $(INCLUDE_OPTS) \
	main.o coco_init_graphics.o \
	display_macros.o dac_sounds.o \
	memory_mapped_alt_print.o sleep_macros.o \
	cmoc_udc_tiles_and_fonts.o \
	text_macros.o input_macros.o
	rm main.o dac_sounds.o coco_init_graphics.o display_macros.o sleep_macros.o \
	cmoc_udc_tiles_and_fonts.o \
	memory_mapped_alt_print.o \
	text_macros.o input_macros.o
	mv $(BUILD_PATH)/xchase.bin XCHASE.BIN
	rm -rf $(BUILD_PATH)/X$(GAME_NAME)_$@.dsk
	$(TOOLS_PATH)/cmoc/coco/file2dsk/file2dsk$(COMPILEDEXT) XCHASE.BIN
	mv XCHASE.DSK $(BUILD_PATH)/X$(GAME_NAME)_$@.dsk
	$(TOOLS_PATH)/cmoc/dragon/bin2cas.pl -o $(BUILD_PATH)/X$(GAME_NAME)_$@.cas -C XCHASE.BIN -A
	rm XCHASE.BIN

coco_targets: \
	coco



coco_color: $(ASSETS_PATH)/cmoc_udc_tiles_and_fonts.s $(TOOLS_PATH)/cmoc/coco/file2dsk/file2dsk$(COMPILEDEXT)
	$(CMOC) \
	$(COCO_COLOR_GFX_COMPILE_OPTS) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/sound/generic/dac_sounds.c
	$(CMOC) \
	$(COCO_COLOR_GFX_COMPILE_OPTS) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/display/display_macros.c
	$(CMOC) \
	$(COCO_COLOR_GFX_COMPILE_OPTS) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/display/init_graphics/cmoc/coco/coco_init_graphics.c
	$(CMOC) \
	$(COCO_COLOR_GFX_COMPILE_OPTS) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c
	$(CMOC) \
	$(COCO_COLOR_GFX_COMPILE_OPTS) $(INCLUDE_OPTS) \
	-c $(ASSETS_PATH)/cmoc_udc_tiles_and_fonts.s
	$(CMOC) \
	$(COCO_COLOR_GFX_COMPILE_OPTS) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/sleep/sleep_macros.c
	$(CMOC) \
	$(COCO_COLOR_GFX_COMPILE_OPTS) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/input/input_macros.c
	$(CMOC) \
	$(COCO_COLOR_GFX_COMPILE_OPTS) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/text/text_macros.c
	$(CMOC) \
	$(COCO_COLOR_GFX_COMPILE_OPTS) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/main.c
	$(CMOC) -o $(BUILD_PATH)/xchase.bin \
	$(COCO_COLOR_GFX_OPTS) $(INCLUDE_OPTS) \
	main.o coco_init_graphics.o \
	display_macros.o dac_sounds.o \
	memory_mapped_alt_print.o sleep_macros.o \
	cmoc_udc_tiles_and_fonts.o \
	text_macros.o input_macros.o
	rm main.o dac_sounds.o coco_init_graphics.o display_macros.o sleep_macros.o \
	cmoc_udc_tiles_and_fonts.o \
	memory_mapped_alt_print.o \
	text_macros.o input_macros.o
	mv $(BUILD_PATH)/xchase.bin XCHASE.BIN
	rm -rf $(BUILD_PATH)/X$(GAME_NAME)_$@.dsk
	$(TOOLS_PATH)/cmoc/coco/file2dsk/file2dsk$(COMPILEDEXT) XCHASE.BIN
	mv XCHASE.DSK $(BUILD_PATH)/X$(GAME_NAME)_$@.dsk
	$(TOOLS_PATH)/cmoc/dragon/bin2cas.pl -o $(BUILD_PATH)/X$(GAME_NAME)_$@.cas -C XCHASE.BIN -A
	rm XCHASE.BIN






mo5: $(ASSETS_PATH)/cmoc_udc_tiles.s $(TOOLS_PATH)/cmoc/mo5/f2k5$(COMPILEDEXT) $(TOOLS_PATH)/cmoc/mo5/sapfs$(COMPILEDEXT)
	$(CMOC) \
	$(MO5_OPTS) $(DRAW_SKIP) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/display/alt_print/mo5_alt_print.c 
	$(CMOC) \
	$(MO5_OPTS) $(DRAW_SKIP) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/display/init_graphics/cmoc/mo5/mo5_init_graphics.c
	$(CMOC) \
	$(MO5_OPTS) $(DRAW_SKIP) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/display/display_macros.c
	$(CMOC) \
	$(MO5_OPTS) $(DRAW_SKIP) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/input/input_macros.c
	$(CMOC) \
	$(MO5_OPTS) $(DRAW_SKIP) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/text/text_macros.c	
	$(CMOC) \
	$(MO5_OPTS) $(DRAW_SKIP) $(INCLUDE_OPTS) \
	-c $(ASSETS_PATH)/cmoc_udc_tiles.s	
	$(CMOC) -o $(BUILD_PATH)/FULL_MO5.bin \
	$(MO5_OPTS) $(DRAW_SKIP) $(INCLUDE_OPTS) \
	$(SOURCE_PATH)/main.c \
	mo5_alt_print.o \
	mo5_init_graphics.o \
	display_macros.o \
	cmoc_udc_tiles.o \
	text_macros.o \
	input_macros.o
	rm \
	mo5_alt_print.o \
	cmoc_udc_tiles.o \
	mo5_init_graphics.o \
	display_macros.o \
	text_macros.o \
	input_macros.o
	$(TOOLS_PATH)/cmoc/mo5/f2k5$(COMPILEDEXT) $(BUILD_PATH)/FULL_MO5.bin
	mv $(BUILD_PATH)/FULL_MO5.bin .
	$(TOOLS_PATH)/cmoc/mo5/sapfs$(COMPILEDEXT) -c X$(GAME_NAME)_MO5.sap
	$(TOOLS_PATH)/cmoc/mo5/sapfs$(COMPILEDEXT) --add X$(GAME_NAME)_MO5.sap FULL_MO5.bin
	mv ./X$(GAME_NAME)_MO5.sap $(BUILD_PATH)	
	mv ./FILE.K5 $(BUILD_PATH)/X$(GAME_NAME)_MO5.k5
	rm ./FULL_MO5.bin	

mo5_targets: \
	mo5


to7: $(ASSETS_PATH)/cmoc_udc_tiles.s $(TOOLS_PATH)/cmoc/mo5/sapfs$(COMPILEDEXT)
	$(CMOC) \
	$(TO7_OPTS) $(DRAW_SKIP) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/display/alt_print/mo5_alt_print.c 
	$(CMOC) \
	$(TO7_OPTS) $(DRAW_SKIP) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/display/init_graphics/cmoc/mo5/mo5_init_graphics.c
	$(CMOC) \
	$(TO7_OPTS) $(DRAW_SKIP) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/display/display_macros.c
	$(CMOC) \
	$(TO7_OPTS) $(DRAW_SKIP) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/input/input_macros.c
	$(CMOC) \
	$(TO7_OPTS) $(DRAW_SKIP) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/text/text_macros.c	
	$(CMOC) \
	$(TO7_OPTS) $(DRAW_SKIP) $(INCLUDE_OPTS) \
	-c $(ASSETS_PATH)/cmoc_udc_tiles.s	
	$(CMOC) $(TO7_ORG_DATA) -o $(BUILD_PATH)/XLIB.bin \
	$(TO7_OPTS) $(DRAW_SKIP) $(INCLUDE_OPTS) \
	$(SOURCE_PATH)/main.c \
	mo5_alt_print.o \
	mo5_init_graphics.o \
	display_macros.o \
	cmoc_udc_tiles.o \
	text_macros.o \
	input_macros.o
	rm \
	mo5_alt_print.o \
	cmoc_udc_tiles.o \
	mo5_init_graphics.o \
	display_macros.o \
	text_macros.o \
	input_macros.o
	mv $(BUILD_PATH)/XLIB.bin .
	$(TOOLS_PATH)/cmoc/mo5/sapfs$(COMPILEDEXT) -c X$(GAME_NAME)_TO7.sap
	$(TOOLS_PATH)/cmoc/mo5/sapfs$(COMPILEDEXT) --add X$(GAME_NAME)_TO7.sap XLIB.bin
	rm ./XLIB.bin
	mv ./X$(GAME_NAME)_TO7.sap $(BUILD_PATH)


to7_targets: \
	to7

#################################################################
# LCC1802


#################################################################


full_combo_rand.c: 
	cat  $(FULL_FILES) > $(SOURCE_PATH)/../full_combo_rand.c

# ------------------------------------------------------------------------------------------
# LCC1802
#    -target=xr18CX
# https://sites.google.com/site/lcc1802/downloads/Quarrantine.zip?attredirects=0&d=1


#/cygdrive/c/lcc42/bat/caCX.bat
#/cygdrive/c/lcc42/bin/lcc.exe
LCC1802_OPTS ?= -target=xr18CX "-Wf-volatile" -O "-Wp-D nofloats" "-Wa-D LCCNOLONG"
BASIC_OPTS ?= $(LCC1802_OPTS) "-Wa-D LCCCX=1"
COMX_OPTS ?= $(BASIC_OPTS) "-Wa-D CODELOC=0x4401" 
PECOM_OPTS ?= $(BASIC_OPTS) "-Wa-D CODELOC=0x201" 
TMC600_OPTS ?= $(BASIC_OPTS) "-Wa-D CODELOC=0x6300" "-Wf-mulcall"
CIDELSA_OPTS ?= $(LCC1802_OPTS)  "-Wa-D CODELOC=0"  "-Wa-D NOFILLBSS=1" "-Wf-mulcall"
DRACO_32K_OPTS ?= $(CIDELSA_OPTS) "-Wa-D DATALOC=0x8000" "-Wa-D STACKLOC=0x83ff"
DRACO_16K_OPTS ?= $(CIDELSA_OPTS)  "-Wa-D DATALOC=0x4000" "-Wa-D STACKLOC=0x43ff"
ALTAIR_24K_OPTS ?= $(CIDELSA_OPTS) "-Wa-D DATALOC=0x6000" "-Wa-D STACKLOC=0x60ff"
ALTAIR_12K_OPTS ?= $(CIDELSA_OPTS) "-Wa-D DATALOC=0x3000" "-Wa-D STACKLOC=0x30ff"
DESTROYER_12K_OPTS ?= $(CIDELSA_OPTS) "-Wa-D DATALOC=0x3000" "-Wa-D STACKLOC=0x30ff"
DESTROYER_8K_OPTS ?= $(CIDELSA_OPTS) "-Wa-D DATALOC=0x2000" "-Wa-D STACKLOC=0x20ff"


MICROBOARD_OPTS ?= $(CIDELSA_OPTS) "-Wa-D DATALOC=0x8000" "-Wa-D STACKLOC=0x9fff"
MICROBOARD_PAL_2_OPTS ?= $(MICROBOARD_OPTS) "-DPAL=2"


 
################################################################################



COMX_REDUCED_EXTRA_FILES ?= \
	$(CROSS_LIB_PATH)/display/init_graphics/lcc1802/comx/comx_init_graphics.c \
	$(CROSS_LIB_PATH)/display/alt_print/comx_alt_print.c 

COMX_EXTRA_FILES ?= \
	$(COMX_REDUCED_EXTRA_FILES) \
	$(CROSS_LIB_PATH)/sleep/sleep_macros.c \
	$(CROSS_LIB_PATH)/sound/lcc1802/comx/comx_sounds.c

COMX_EXTRA_FILES_WTIH_END_SCREEN ?= \
	$(COMX_EXTRA_FILES) \
	$(SOURCE_PATH)/end_screen.c 


reduced_full_lcc1802_combo.c: full_combo_rand.c
	cat \
	$(COMX_REDUCED_EXTRA_FILES) $(CROSS_LIB_PATH)/rand/rand.c $(CROSS_LIB_PATH)/sleep/sleep_macros.c \
	$(SOURCE_PATH)/../full_combo_rand.c > $(SOURCE_PATH)/../reduced_full_lcc1802_combo.c
	rm $(SOURCE_PATH)/../full_combo_rand.c

full_lcc1802_combo.c: full_combo_rand.c
	cat \
	$(COMX_EXTRA_FILES_WTIH_END_SCREEN) \
	$(SOURCE_PATH)/../full_combo_rand.c > $(SOURCE_PATH)/../full_lcc1802_combo.c
	rm $(SOURCE_PATH)/../full_combo_rand.c


clean_combo_files:
	rm -rf $(SOURCE_PATH)/../full_combo_rand.c
	rm -rf $(SOURCE_PATH)/../reduced_full_lcc1802_combo.c
	rm -rf $(SOURCE_PATH)/../reduced_full_lcc1802_color_combo.c
	rm -rf $(SOURCE_PATH)/../reduced_full_lcc1802_micro_combo.c

LCC1802_BASIC_C_OPTS ?= \
	-D__LCC1802__ \
	-DFORCE_NO_CONIO_LIB \
	-DNO_SET_SCREEN_COLORS \
	-DLESS_TEXT \
	-DALT_RAND \
	-DMEMORY_MAPPED \
	-DALT_PRINT \
	-DINITIAL_SLOWDOWN=21150


LCC1802_C_OPTS ?= \
	$(LCC1802_BASIC_C_OPTS) \
	-DSOUNDS \
	-DALT_SLEEP \


LCC1802_C_OPTS_NO_SOUNDS ?= \
	$(LCC1802_BASIC_C_OPTS) \
	-DALT_SLEEP \

REDUCED_LCC1802_C_OPTS ?= \
	$(LCC1802_BASIC_C_OPTS) \
	-DNO_SLEEP \
	-DNO_RANDOM_LEVEL


###############################################################################
# COMX

_full_comx: _comx


# TODO: currently broken because it needs reduced_full_lcc1802_color_combo.c
_comx_color: reduced_full_lcc1802_color_combo.c $(ASSETS_PATH)/6x9_chars.h
	$(LCC1802) $(INCLUDE_OPTS) -I$(SOURCE_PATH) $(COMX_OPTS)  \
	-D__COMX__ -D_XL_CURSORS  \
	-DMAX_ARROWS_ON_SCREEN=6 -DNUMBER_OF_MISSILES=3 -DMISSILE_DROP_LOOP_MASK=1 -DSMALL_WALL -DNO_BOTTOM_WALL_REDRAW \
	-DNORMAL_ZOMBIE_SPEED=1 -DSLOW_ZOMBIE_SPEED=7 \
	-DFORCE_NARROW -DREDEFINED_CHARS \
	-DNO_BLINKING -DTINY_TEXT \
	-D_XL_SLOW_DOWN_FACTOR=300 \
	-DLCC1802_JOYSTICK \
	-DNO_TITLE -DNO_SET_SCREEN_COLORS  -DNO_INITIAL_SCREEN \
	-DCOMX_COLOR \
	$(LCC1802_COLOR_C_OPTS) \
	$(SOURCE_PATH)/../reduced_full_lcc1802_color_combo.c
	# rm -rf $(SOURCE_PATH)/../reduced_full_lcc1802_color_combo.c
	mv $(SOURCE_PATH)/../../a.hex $(BUILD_PATH)/X$(GAME_NAME)_$@.hex

_comx_fixed_colors: _comx

_comx: reduced_full_lcc1802_combo.c $(ASSETS_PATH)/6x9_chars.h
	$(LCC1802) $(INCLUDE_OPTS) -I$(SOURCE_PATH) $(COMX_OPTS)  \
	-D__COMX__ $(EXTRA_DRAW_SKIP) \
	-DFULL_GAME -DFORCE_NARROW -DREDEFINED_CHARS \
	-D_XL_NO_COLOR -DSIMPLE_STRATEGY -D_XL_SLOW_DOWN_FACTOR=300 \
	-DNO_BLINKING -DTINY_TEXT \
	-DLCC1802_JOYSTICK \
	-DLESS_TEXT -DNO_HINTS -DNO_TITLE -DNO_SET_SCREEN_COLORS -DNO_INITIAL_SCREEN \
	-DANIMATE_PLAYER -DNINTH_CHAR_LINE \
	$(LCC1802_C_OPTS_NO_SOUNDS) \
	-DFORCE_GHOSTS_NUMBER=7 \
	$(SOURCE_PATH)/../reduced_full_lcc1802_combo.c
	# rm -rf $(SOURCE_PATH)/../reduced_full_lcc1802_combo.c
	mv $(SOURCE_PATH)/../../a.hex $(BUILD_PATH)/X$(GAME_NAME)_$@.hex

comx: \
    _comx \
    clean_combo_files

###############################################################################
# PECOM


_full_pecom: _pecom

_pecom: reduced_full_lcc1802_combo.c $(ASSETS_PATH)/6x9_chars.h
	$(LCC1802) $(INCLUDE_OPTS) -I$(SOURCE_PATH) $(PECOM_OPTS)  \
	-D__PECOM__ $(EXTRA_DRAW_SKIP) \
	-DFULL_GAME -DREDEFINED_CHARS \
	-D_XL_NO_COLOR \
	-DNO_BLINKING \
	-DLCC1802_JOYSTICK \
	-DANIMATE_PLAYER -DNINTH_CHAR_LINE \
	-DBETWEEN_LEVEL -DEND_SCREEN \
	$(LCC1802_C_OPTS_NO_SOUNDS) \
	-DFORCE_GHOSTS_NUMBER=7 \
	$(SOURCE_PATH)/../reduced_full_lcc1802_combo.c
	# rm -rf $(SOURCE_PATH)/../reduced_full_lcc1802_combo.c
	mv $(SOURCE_PATH)/../../a.hex $(BUILD_PATH)/X$(GAME_NAME)_$@.hex

pecom: \
    _pecom \
    clean_combo_files

###############################################################################
# TMC600


_full_tmc600: _tmc600_16k
_tmc600: _tmc600_16k

# -DNO_PRINT -DNO_MESSAGE -DNO_TITLE 
# -savetemps -S
_tmc600_16k: reduced_full_lcc1802_combo.c
	$(LCC1802) $(INCLUDE_OPTS) -I$(SOURCE_PATH) $(TMC600_OPTS) -DNO_UDG -D_XL_SLOW_DOWN_FACTOR=600  \
	-D__TMC600__  $(EXTRA_DRAW_SKIP) \
	-DFULL_GAME -DSIMPLE_STRATEGY \
	-DNO_BLINKING -DBULLETS_NUMBER=4 -DINITIAL_GHOST_SLOWDOWN=25000 \
	-DLCC1802_JOYSTICK -DNO_HINTS \
	$(REDUCED_LCC1802_C_OPTS) \
	-DGHOSTS_NUMBER=6  \
	$(SOURCE_PATH)/../reduced_full_lcc1802_combo.c
	# rm -rf $(SOURCE_PATH)/../reduced_full_lcc1802_combo.c
	mv $(SOURCE_PATH)/../../a.hex $(BUILD_PATH)/X$(GAME_NAME)_$@.hex

tmc600: \
    _tmc600 \
    clean_combo_files

###############################################################################
# CIDELSA DRACO


_cidelsa: _cidelsa_draco

_cidelsa_draco: _cidelsa_draco_32k

# -DREDEFINED_CHARS
_cidelsa_draco_32k: reduced_full_lcc1802_combo.c
	$(LCC1802) $(INCLUDE_OPTS) -I$(SOURCE_PATH) $(DRACO_32K_OPTS)  \
	-D__CIDELSA__ -D__DRACO__  \
	-D_XL_NO_COLOR -D_XL_NO_UDG \
	-DLCC1802_JOYSTICK -D_XL_SLOW_DOWN_FACTOR=300 \
	$(REDUCED_LCC1802_C_OPTS) \
	$(SOURCE_PATH)/../reduced_full_lcc1802_combo.c
	# rm -rf $(SOURCE_PATH)/../reduced_full_lcc1802_combo.c
	mv $(SOURCE_PATH)/../../a.hex $(BUILD_PATH)/X$(GAME_NAME)_$@.hex

cidelsa_draco: \
    _cidelsa_draco \
    clean_combo_files

cidelsa: cidelsa_draco

###############################################################################
# MICRO

_micro: _micro_pal2

_micro_pal2: reduced_full_lcc1802_combo.c $(ASSETS_PATH)/6x9_chars.h
	$(LCC1802) $(INCLUDE_OPTS) -I$(SOURCE_PATH) $(MICROBOARD_PAL_2_OPTS)  \
	-D__MICRO__ \
	-DFULL_GAME -DREDEFINED_CHARS \
	-D_XL_NO_COLOR -DNO_TITLE_LINE -D_XL_SLOW_DOWN_FACTOR=600 \
	-DNO_BLINKING -DSOUNDS \
	-DLCC1802_JOYSTICK \
	-DANIMATE_PLAYER -DNINTH_CHAR_LINE \
	$(REDUCED_LCC1802_C_OPTS) \
	$(SOURCE_PATH)/../reduced_full_lcc1802_combo.c
	# rm -rf $(SOURCE_PATH)/../reduced_full_lcc1802_combo.c
	mv $(SOURCE_PATH)/../../a.hex $(BUILD_PATH)/X$(GAME_NAME)_$@.hex

micro: \
    _micro \
    clean_combo_files



comx_targets: comx

pecom_targets: pecom

tmc600_targets: tmc600_37k

cidelsa_targets: $(MAKE) cidelsa_draco_32k


###############################################################################################

# -S to produce Assembly 
mc10:
	cc68 -tmc10  $(CC6303_MC10_OPTS) $(INCLUDE_OPTS) $(GLOBAL_OPTS) \
	-D__MC10__ \
	-DFORCE_NO_CONIO_LIB \
	-DXSize=32 \
	-DYSize=16 \
	-DMEMORY_MAPPED \
	-D_XL_NO_COLOR \
	-DFULL_GAME -DALT_SLEEP \
	-DNO_INIT_GRAPHICS \
	-D_XL_SLOW_DOWN_FACTOR=1600 \
	-DDEFAULT_CLEAR_SCREEN -DALT_PRINT -DSOUNDS \
	$(CROSS_LIB_PATH)/sound/generic/bit_bang_sounds.c \
	$(FULL_FILES) \
	$(CROSS_LIB_PATH)/sleep/sleep_macros.c \
	$(CROSS_LIB_PATH)/rand/rand.c \
	$(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c \
	-o xchase
	rm xchase
	mv xchase.c10 $(BUILD_PATH)/X$(GAME_NAME)_$@.c10


mc10_gfx: $(ASSETS_PATH)/8x6_c_definition.h 
	cc68 -tmc10 $(CC6303_MC10_OPTS) $(INCLUDE_OPTS) $(GLOBAL_OPTS) \
	-D__MC10__ \
	-DFORCE_NO_CONIO_LIB -DNO_EXTRA_TITLE \
	-DXSize=16 \
	-DYSize=16  \
	-DBIT_MAPPED_4 \
	-DFULL_GAME -DALT_SLEEP -DNO_WAIT -DNO_INPUT -DNO_SLEEP \
	-D_XL_SLOW_DOWN_FACTOR=$(_COMMON_SLOWDOWN_FACTOR)*$(_MC10_SLOWDOWN) \
	-DDEFAULT_CLEAR_SCREEN -DALT_PRINT -DSOUNDS \
	$(CROSS_LIB_PATH)/sound/generic/bit_bang_sounds.c \
	$(FULL_FILES) \
	$(CROSS_LIB_PATH)/display/init_graphics/cc6303/mc10_init_graphics.c \
	$(CROSS_LIB_PATH)/sleep/sleep_macros.c \
	$(CROSS_LIB_PATH)/rand/rand.c \
	$(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c \
	-o xchase
	mv xchase $(BUILD_PATH)/X$(GAME_NAME)_$@.bin
	mv xchase.c10 $(BUILD_PATH)/X$(GAME_NAME)_$@.c10


mc10_turn_based:
	cc68 -tmc10  $(CC6303_MC10_OPTS) $(INCLUDE_OPTS) \
	-D__MC10__ -DNO_UDG \
	-DFORCE_NO_CONIO_LIB \
	-DXSize=32 \
	-DYSize=16 \
	-DMEMORY_MAPPED \
	-D_XL_NO_COLOR -DTURN_BASED \
	-DTINY_GAME -DNO_SLEEP \
	-DNO_INIT_GRAPHICS \
	-DNO_PRINT -DNO_WAIT \
	-DNO_INPUT -DNO_WALL \
	-DDEFAULT_CLEAR_SCREEN \
	$(FULL_FILES) \
	$(CROSS_LIB_PATH)/rand/rand.c \
	-o xchase
	mv xchase $(BUILD_PATH)/X$(GAME_NAME)_$@
	mv xchase.c10 $(BUILD_PATH)/X$(GAME_NAME)_$@.c10

mc10_buffered:
	cc68 -tmc10 $(CC6303_MC10_OPTS) $(INCLUDE_OPTS) \
	-D__GCC_BUFFERED__ -D__MC10__ \
	-DXSize=31 \
	-DYSize=15 \
	-DSTDLIB -DEVEN_LOOP_MOVE -DTURN_BASED_SKULL_MIN_SLOWDOWN_SCALE=1 -DTURN_BASED_GHOST_MIN_SLOWDOWN_SCALE=1 \
	-DINITIAL_SLOWDOWN=25000 -DTURN_BASED_EFFECT_SCALE=1 -DTURN_BASED_WAIT_SCALE=1 \
	-D_XL_NO_COLOR \
	-DFULL_GAME -DNO_SLEEP \
	-DTURN_BASED \
	-DBUFFERED \
	-DNO_INIT_GRAPHICS \
	-DALT_PRINT \
	-DDEFAULT_CLEAR_SCREEN \
	$(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c \
	$(FULL_FILES) -o x$(GAME_NAME)_$@
	mv xchase $(BUILD_PATH)/X$(GAME_NAME)_$@
	mv xchase.c10 $(BUILD_PATH)/X$(GAME_NAME)_$@.c10

###############################################################################################
# GCC
#


ncurses_targets: \
	ncurses
    
###############################################################################################

ncurses_debug:
	$(NATIVE_CC) $(GCC_OPTS) $(INCLUDE_OPTS) -D__NCURSES__ \
	-DFULL_GAME \
	-DXSize=$(XSIZE) -DYSize=$(YSIZE) -D_DEBUG_FLAG=$(_DEBUG_FLAG) \
	-D_XL_SLOW_DOWN_FACTOR=$(_COMMON_SLOWDOWN_FACTOR)*$(_NCURSES_SLOWDOWN) \
	-DCONIO -D_XL_NO_UDG \
	-DALT_PRINT \
	-DNO_TITLE_LINE \
	$(CROSS_LIB_PATH)/display/alt_print/ncurses_alt_print.c \
	$(CROSS_LIB_PATH)/display/init_graphics/gcc/ncurses_init_graphics.c \
	$(FULL_FILES) \
	-lncurses
ifeq ($(_DEBUG_FLAG),1)
	mv a$(COMPILEDEXT) $(BUILD_PATH)/X$(GAME_NAME)_ncurses_debug_$(XSIZE)X$(YSIZE)$(COMPILEDEXT)
else
	mv a$(COMPILEDEXT) $(BUILD_PATH)/X$(GAME_NAME)_ncurses_$(XSIZE)X$(YSIZE)$(COMPILEDEXT)
endif


ncurses:
	$(NATIVE_CC) $(GCC_OPTS) $(INCLUDE_OPTS) -D__NCURSES__ \
	-DFULL_GAME -D_XL_SLOW_DOWN_FACTOR=120 \
	-DEND_SCREEN -DBETWEEN_LEVEL \
	-DCONIO -DNO_UDG \
	-DALT_PRINT \
	-DNO_TITLE_LINE \
	$(CROSS_LIB_PATH)/display/alt_print/ncurses_alt_print.c \
	$(CROSS_LIB_PATH)/display/init_graphics/gcc/ncurses_init_graphics.c \
	$(FULL_FILES) \
	-lncurses
	mv a$(COMPILEDEXT) $(BUILD_PATH)/X$(GAME_NAME)_ncurses$(COMPILEDEXT)
    
    

##

###############################################################################

# ------------------------------------------------------------------------------------------
# TMS9000-GCC
#   


# Paths to TMS9900 compilation tools 
# ( Set in environment to override paths )
TMS9900_DIR?=/opt/gcc4ti/bin
ELF2EA5_DIR?=/home/fabri/Retro/GCC4TI/elf2ea5
EA5_SPLIT_DIR?=/home/fabri/Retro/GCC4TI/ea5split
CLASSIC99_DSK1?=/home/fabri/Retro/GCC4TI/DSK1


# Full paths to the executables used
GAS=$(TMS9900_DIR)/tms9900-as
LD=$(TMS9900_DIR)/tms9900-ld
CC=$(TMS9900_DIR)/tms9900-gcc
AR=$(TMS9900_DIR)/tms9900-ar
ELF2EA5=$(ELF2EA5_DIR)/elf2ea5
EA5_SPLIT=$(EA5_SPLIT_DIR)/ea5split

LDFLAGS_EA5=\
  --section-start .text=a000 --section-start .data=2040 -M



C_FLAGS=\
  -O2 -std=c99 -s -I./ -fno-builtin



TI99_CC ?= tms9900-gcc 


TI99_OPTS ?= \
	$(C_FLAGS) $(GLOBAL_OPTS) \
	-D__TI99__ -nostdlib -DNO_RANDOM_LEVEL \
	-DXSize=32 -DREDEFINED_CHARS -DANIMATE_PLAYER \
	-DYSize=23 -DSOUNDS \
	-DALT_SLEEP -DNO_SLOW_DOWN_MACRO \
	-DTINY_GAME -DNO_WALL -DBUGGY_MOD10 \
	-DTI99_COLOR \
	-DNO_SET_SCREEN_COLORS \
	-D_XL_SLOW_DOWN_FACTOR=3500


##################################################################################################

# Paths to TMS9900 compilation tools
GAS=tms9900-as
LD=tms9900-ld
TI99CC=tms9900-gcc
CXX=tms9900-c++
OBJCOPY=tms9900-objcopy

LIB_TI99_PATH=$(TMS9900-GCC_PATH)/../lib

# Flags used during linking
# Refer to the linker rules in an external file
LDFLAGS=\
  --script=$(CFG_PATH)gcc4ti99/linkfile.cfg 

# List of compiled objects used in executable
OBJECT_LIST= \
  $(TOOLS_PATH)/ti99/crt0_ea5.o \
  $(CROSS_LIB_PATH)/display/display_macros.o \
  $(CROSS_LIB_PATH)/input/input_macros.o \
  $(CROSS_LIB_PATH)/text/text_macros.o \
  $(CROSS_LIB_PATH)/rand/rand.o \
  $(CROSS_LIB_PATH)/sleep/sleep_macros.o \
  $(CROSS_LIB_PATH)/sound/gcc4ti99/ti99_sounds.o \
  $(CROSS_LIB_PATH)/display/init_graphics/gcc4ti99/gcc4ti99_init_graphics.o \
  $(SOURCE_PATH)/main.o


TI99_INCLUDE_OPTS ?= $(INCLUDE_OPTS) -I$(TMS9900-GCC_PATH)/../include

# Recipes to compile individual files
%.o: %.asm
	$(GAS) $< -o $@
%.o: %.c
	$(TI99CC) $(TI99_INCLUDE_OPTS) $(TI99_OPTS) -c $< -o $@

# 	$(TI99CC) $(TI99_INCLUDE_OPTS) $(TI99_FULL_OPTS) -c $< -o $@

test_ti99: 
	$(TI99CC) $(SOURCE_PATH)/../../debug/gcc_test.c 
# List of all files needed in executable
PREREQUISITES=\
  $(OBJECT_LIST)


#####################################################################


xchase.ea5.elf: $(PREREQUISITES)
	$(LD) $(OBJECT_LIST) $(LDFLAGS_EA5) -L$(LIB_TI99_PATH) -lti99 -o xchase.ea5.elf > xchase.map
	# $(LD) $(OBJECT_LIST) $(LDFLAGS) -o $@ -allow-multiple-definition


# Recipe to compile the executable
ti99: $(ASSETS_PATH)/8x8_chars.h xchase.ea5.elf $(TOOLS_PATH)/ti99/elf2ea5$(COMPILEDEXT) $(TOOLS_PATH)/ti99/ea5split$(COMPILEDEXT)
	$(TOOLS_PATH)/ti99/elf2ea5$(COMPILEDEXT) xchase.ea5.elf x$(GAME_NAME)1.ea5.bin
	$(TOOLS_PATH)/ti99/ea5split$(COMPILEDEXT) x$(GAME_NAME)1.ea5.bin
	rm -rf xchase.map
	rm -rf ea5.map
	rm -rf xchase.ea5.elf
	mv X$(GAME_NAME,lc)* $(BUILD_PATH)/
	rm -rf x$(GAME_NAME)1.ea5.bin

ti99_targets: \
	ti99 \
	ti99_turn_based

gcc_ti99_targets: \
	ti99_targets

	# $(OBJCOPY) -O binary -j .text -j .data -j .ctors ti99_cross_chase.elf ti99_cross_chase.cart 
	# mv ti99_cross_chase.cart $(BUILD_PATH)
	# mv ti99_cross_chase.elf $(BUILD_PATH)



