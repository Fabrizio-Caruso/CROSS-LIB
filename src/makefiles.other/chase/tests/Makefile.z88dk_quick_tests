####################################################################################################################

# TESTS



FAST_TEST_OPTS ?= \
-D_DEFAULT_ASCII \
-DTINY_GAME -DLESS_TEXT -D_XL_NO_SLEEP \
 -DNO_CHASE \
-DNO_INITIAL_SCREEN -D__NO_SCREEN_COLOR_INIT \
-DNO_DEAD_GHOSTS \
-DNO_RANDOM_LEVEL -DFLAT_ENEMIES -DGHOSTS_NUMBER=8 \
-DNO_STATS -DNO_WALL

FAST_SCCZ80_TEST_OPTS ?= -O0 $(FAST_TEST_OPTS)

FAST_ZSDCC_TEST_OPTS ?= -SO0 $(FAST_TEST_OPTS)

# include makefiles.common/auxiliary/Makefile_ALL

NO_CHASE_FILES ?= \
	$(BASIC_CROSS_LIB_FILES) \
	$(SOURCE_PATH)/move_player.c \
	$(SOURCE_PATH)/ghost.c  $(SOURCE_PATH)/level.c $(SOURCE_PATH)/character.c $(SOURCE_PATH)/game_text.c \
	$(SOURCE_PATH)/main.c \
	$(SOURCE_PATH)/init_images.c

#
TINY_FILES ?= $(NO_CHASE_FILES) $(SOURCE_PATH)/strategy.c

#
TEST_FILES ?= $(NO_CHASE_FILES)

include ./games/chase/Makefile.chase

# include Makefile

####################################################################################################################
# TODO: Fix
# 	c128_z80_zsdcc_quick_test
zsdcc_quick_test: \
	aquarius_zsdcc_quick_test \
	mc1000_zsdcc_quick_test \
	spectrum_zsdcc_quick_test \
	svi_zsdcc_quick_test \
	vz200_zsdcc_quick_test \
	vg5k_zsdcc_quick_test \
	zx81_zsdcc_quick_test 

# TODO: Fix
# 	c128_z80_quick_test 
#	msx_quick_test 
#   	nc100_quick_test 
sccz80_quick_test: \
	abc80_quick_test \
	ace_quick_test \
	aquarius_quick_test \
	cpc_quick_test \
	cpm_quick_test \
 	eg2k_quick_test \
	einstein_quick_test \
	gal_quick_test \
	kc_quick_test \
	lambda_quick_test \
	m5_quick_test \
	mc1000_quick_test \
	microbee_quick_test \
	mtx_quick_test \
	mz_quick_test \
	nascom_quick_test \
	p2000_quick_test \
	pc6001_quick_test \
	pps_quick_test \
	pv2000_quick_test \
	px4_quick_test \
	px8_quick_test \
	samcoupe_quick_test \
	sc3000_quick_test \
	sg1000_quick_test \
	spectrum_quick_test \
	srr_quick_test \
	svi_quick_test \
	ti82_quick_test \
	ti83_quick_test \
	ti85_quick_test \
	trs80_quick_test \
	vg5k_quick_test \
	vz200_quick_test \
	x1_quick_test \
	z1013_quick_test \
	z9001_quick_test \
	zx80_quick_test \
	zx81_quick_test 


z88dk_quick_test: \
	sccz80_quick_test \
	zsdcc_quick_test	
	

####################################################################################################################


abc80_quick_test: 
	$(Z88DK_PATH)$(MYZ88DK) +abc80 -lm -subtype=hex -zorg=49200 \
	-D__ABC80__ -clib=ansi -vn   -lndos \
	$(FAST_SCCZ80_TEST_OPTS) $(INCLUDE_OPTS) \
	-DCONIO \
	-D__NO_INIT_GRAPHICS \
	-create-app -o abc80t.bin \
	-lndos \
	$(TEST_FILES)
	rm -rf abc80t.bin
	mv abc80t.ihx $(BUILD_PATH)/TEST_abc80.ihx 	


ace_quick_test:
	$(Z88DK_PATH)$(MYZ88DK) +ace \
	-D__ACE__ \
	 \
	-DCONIO \
	-clib=default -o acet.bin \
	-D__NO_INIT_GRAPHICS \
	$(FAST_SCCZ80_TEST_OPTS) $(INCLUDE_OPTS) \
	-Cz--audio -create-app \
	$(TEST_FILES)
	cp acet.wav $(BUILD_PATH)/TEST_ace_exp_16k.wav
	rm acet.wav
	rm acet.tap
	rm acet.bin


aquarius_quick_test: 
	$(Z88DK_PATH)$(MYZ88DK) +aquarius -clib=ansi -vn \
	 -D__AQUARIUS__  -DTINY_GAME \
	$(FAST_SCCZ80_TEST_OPTS) $(INCLUDE_OPTS) \
	-DCONIO \
	-D__NO_INIT_GRAPHICS \
	-lndos \
	-o TEST_aquarius -create-app \
	$(TEST_FILES)
	rm TEST_aquarius
	mv TEST_aquarius.caq $(BUILD_PATH)
	mv _TEST_aquarius.caq $(BUILD_PATH)	


c128_z80_quick_test:	
	$(Z88DK_PATH)$(MYZ88DK) +c128 \
	-lndos -subtype=disk \
	-D__C128_Z80__ -DXSize=40 \
	$(FAST_SCCZ80_TEST_OPTS) $(INCLUDE_OPTS) \
	-D__INCLUDE_CONIO_H \
	-DCONIO \
	-D__NO_INIT_GRAPHICS \
	$(TEST_FILES) \
	-create-app -o c128t.bin
	$(TOOLS_PATH)/generic/c1541 -format "crosschase,0" d64 TEST_c128_z80.d64
	$(TOOLS_PATH)/generic/c1541 -attach TEST_c128_z80.d64 -write c128t.ldr
	$(TOOLS_PATH)/generic/c1541 -attach TEST_c128_z80.d64 -write c128t
	mv TEST_c128_z80.d64 $(BUILD_PATH)/
	rm C128T.LDR
	rm C128T
	rm c128t.bin


cpc_quick_test: $(ASSETS_PATH)/z88dk_cpc_Chars8.asm
	$(Z88DK_PATH)$(MYZ88DK) +cpc  -vn  -clib=ansi \
	-D__CPC__  \
	$(FAST_SCCZ80_TEST_OPTS) $(INCLUDE_OPTS) \
	-DCPCRSLIB \
	-pragma-define:REGISTER_SP=-1 \
	-lndos -create-app -o 	$(BUILD_PATH)/TEST_cpc.prg \
	$(CROSS_LIB_PATH)/sound/z88dk/psg/ay-3-8910_psg_sounds.c \
	$(CROSS_LIB_PATH)/display/init_graphics/z88dk/cpc/cpc_cpcrslib_init_graphics.c \
	$(TEST_FILES) $(ASSETS_PATH)/z88dk_cpc_Chars8.asm
	$(TOOLS_PATH)/z88dk/cpc/2cdt.exe -n -r cross_chase $(BUILD_PATH)/TEST_cpc.cpc  $(BUILD_PATH)/TEST_cpc.cdt
	# $(TOOLS_PATH)/z88dk/cpc/cpcxfsw -nd TEST_cpc.dsk
	# $(TOOLS_PATH)/z88dk/cpc/cpcxfsw TEST_cpc.dsk -p $(BUILD_PATH)/TEST_cpc.cpc xchase
	# mv TEST_cpc.dsk $(BUILD_PATH)/
	rm $(BUILD_PATH)/TEST_cpc.cpc 
	rm $(BUILD_PATH)/TEST_cpc.prg	


cpm_quick_test:
	$(Z88DK_PATH)$(MYZ88DK) +cpm \
	-DCONIO_ADM3A \
	-DCONIO \
	-D__NO_INIT_GRAPHICS \
	-D__CPM_80X24__ \
	-D_XL_NO_SLEEP -D_XL_NO_WAIT \
	$(FAST_SCCZ80_TEST_OPTS) $(INCLUDE_OPTS) \
	-create-app -o$(BUILD_PATH)/TEST_cpm.bin \
	$(TEST_FILES)
	rm $(BUILD_PATH)/TEST_cpm.bin


eg2k_quick_test:
	$(Z88DK_PATH)$(MYZ88DK) +trs80 \
	-D__EG2K__ \
	-DCONIO \
	-D__NO_INIT_GRAPHICS \
	-subtype=eg2000disk \
	-lndos \
	-lm \
	-D__TRS80__ \
	$(FAST_SCCZ80_TEST_OPTS) $(INCLUDE_OPTS) \
	-create-app -o eg2kt.bin \
	-DCONIO_VT52 \
	$(TEST_FILES)
	mv eg2kt.cmd $(BUILD_PATH)/TEST_eg2k.cmd	
	rm eg2kt.bin


einstein_quick_test:
	$(Z88DK_PATH)$(MYZ88DK) +cpm -leinstein  -v \
	-D__EINSTEIN__ \
	-D__INCLUDE_CONIO_H \
	-DCONIO \
	-D__NO_INIT_GRAPHICS \
	$(FAST_SCCZ80_TEST_OPTS) $(INCLUDE_OPTS) \
	-clib=ansi \
	-create-app -o$(BUILD_PATH)/TEST_einstein.bin \
	$(TEST_FILES) 
	rm $(BUILD_PATH)/TEST_einstein.bin


gal_quick_test:
	$(Z88DK_PATH)$(MYZ88DK) +gal \
	-pragma-need=ansiterminal \
	-D__GAL__ \
	-DCONIO \
	-D__NO_INIT_GRAPHICS \
	$(FAST_SCCZ80_TEST_OPTS) $(INCLUDE_OPTS) \
	-vn -lndos -create-app -o  $(BUILD_PATH)/TEST_galaksija.prg \
	$(TEST_FILES) 
	rm $(BUILD_PATH)/TEST_galaksija.prg	
	rm $(BUILD_PATH)/TEST_galaksija.wav


kc_quick_test: $(ASSETS_PATH)/z88dk_xchase.asm 
	$(Z88DK_PATH)$(MYZ88DK) +kc -subtype=tap \
	-D__KC__ \
	-D__NO_INIT_GRAPHICS \
	$(FAST_SCCZ80_TEST_OPTS) $(INCLUDE_OPTS) \
	 \
	-DCONIO_VT52 \
	-DCONIO \
	-D_XL_NO_SLEEP \
	-D_XL_NO_WAIT \
	 \
	-create-app -o$(BUILD_PATH)/TEST_kc_sprites.bin \
	$(TEST_FILES) $(ASSETS_PATH)/z88dk_xchase.asm 
	rm $(BUILD_PATH)/TEST_kc_sprites.bin	


lambda_quick_test:
	$(Z88DK_PATH)$(MYZ88DK) +lambda \
	-vn -D__LAMBDA__ \
	-DCONIO \
	-D__NO_INIT_GRAPHICS \
	$(FAST_SCCZ80_TEST_OPTS) $(INCLUDE_OPTS) \
	-lndos -create-app -o  $(BUILD_PATH)/TEST_lambda.prg \
	$(TEST_FILES)
	rm $(BUILD_PATH)/TEST_lambda.prg		


m5_quick_test:
	$(Z88DK_PATH)$(MYZ88DK) +m5 \
	-DCONIO \
	-D__NO_INIT_GRAPHICS \
	-lm -create-app -Cz--audio -subtype=tape \
	-D__M5__ \
	-clib=ansi -pragma-define:ansicolumns=32 \
	$(FAST_SCCZ80_TEST_OPTS) $(INCLUDE_OPTS) \
	-o$(BUILD_PATH)/TEST_m5.bin \
	$(TEST_FILES)
	rm $(BUILD_PATH)/TEST_m5.bin 
	rm $(BUILD_PATH)/TEST_m5.cas


mc1000_quick_test:
	$(Z88DK_PATH)$(MYZ88DK) +mc1000 \
	-subtype=gaming -pragma-define:ansicolumns=32 \
	$(FAST_SCCZ80_TEST_OPTS) $(INCLUDE_OPTS) \
	-DCONIO \
	-D__NO_INIT_GRAPHICS \
	-clib=ansi \
	-D__MC1000__  \
	-vn  -lndos -create-app -Cz--audio -o mc1kt.bin \
	$(CROSS_LIB_PATH)/sound/z88dk/psg/ay-3-8910_psg_sounds.c \
	$(TEST_FILES)
	mv mc1kt.wav $(BUILD_PATH)/TEST_mc1000.wav
	rm mc1kt.bin
	rm mc1kt.cas	


microbee_quick_test:
	$(Z88DK_PATH)$(MYZ88DK) +bee \
	-D__BEE__ -clib=ansi -vn   \
	-DCONIO \
	-D__NO_INIT_GRAPHICS \
	$(FAST_SCCZ80_TEST_OPTS) $(INCLUDE_OPTS) \
	-lndos -create-app -o $(BUILD_PATH)/TEST_microbee.prg  \
	$(TEST_FILES)
	rm $(BUILD_PATH)/TEST_microbee.prg


msx_quick_test: $(ASSETS_PATH)/8x8_chars.h
	$(Z88DK_PATH)$(MYZ88DK) +msx -zorg=49200 \
	  -create-app -vn -DMSX_VPOKE -D__MSX__ -lndos \
	$(FAST_SCCZ80_TEST_OPTS) $(INCLUDE_OPTS) \
	-DMEMORY_MAPPED -D__INCLUDE_CONIO_H \
	-DUSE_MSX_BIOS \
	 \
	-vn \
	-lndos \
	-DZ88DK_JOYSTICK \
	-create-app -o $(BUILD_PATH)/TEST_msx.prg \
	$(CROSS_LIB_PATH)/sound/z88dk/psg/ay-3-8910_psg_sounds.c \
	$(CROSS_LIB_PATH)/display/init_graphics/z88dk/msx/msx_redefined_chars_init_graphics.c \
	$(TEST_FILES)
	rm $(BUILD_PATH)/TEST_msx.prg 	


mtx_quick_test:
	$(Z88DK_PATH)$(MYZ88DK) +mtx -startup=2 \
	-D__MTX__ -clib=ansi -pragma-define:ansicolumns=32 -create-app -o TEST_mtx.bin -vn \
	 \
	-DCONIO \
	-D__NO_INIT_GRAPHICS \
	$(FAST_SCCZ80_TEST_OPTS) $(INCLUDE_OPTS) \
	-lndos \
	$(TEST_FILES)
	rm TEST_mtx.bin
	mv TEST_mtx.wav $(BUILD_PATH)/TEST_mtx.wav
	mv TEST_mtx.mtx $(BUILD_PATH)/TEST_mtx.mtx


mz_quick_test:	
	$(Z88DK_PATH)$(MYZ88DK) +mz \
	-D__MZ__ -clib=ansi -pragma-define:ansicolumns=32 -vn \
	 \
	-DCONIO \
	-D__NO_INIT_GRAPHICS \
	$(FAST_SCCZ80_TEST_OPTS) $(INCLUDE_OPTS) \
	-lndos -create-app -o $(BUILD_PATH)/TEST_mz.prg \
	$(TEST_FILES)
	rm $(BUILD_PATH)/TEST_mz.prg
	mv $(BUILD_PATH)/TEST_mz.mzt $(BUILD_PATH)/TEST_mz.mzf


nascom_quick_test:
	$(Z88DK_PATH)$(MYZ88DK) +nascom -clib=ansi -vn -lndos \
	-D__NASCOM__ \
	-DCONIO \
	-D__NO_INIT_GRAPHICS \
	 \
	$(FAST_SCCZ80_TEST_OPTS) $(INCLUDE_OPTS) \
	-create-app -o $(BUILD_PATH)/TEST_nascom.prg \
	$(TEST_FILES)
	rm $(BUILD_PATH)/TEST_nascom.prg


nc100_quick_test:
	$(Z88DK_PATH)$(MYZ88DK) +nc -lgfxnc100 \
	-D__NO_INIT_GRAPHICS \
	-D__NC100__ \
	-DNO_PRINT  \
	-DZ88DK_SPRITES \
	-DLESS_TEXT \
	-D_XL_NO_SLEEP \
	-D_XL_NO_WAIT \
	 \
	$(FAST_SCCZ80_TEST_OPTS) $(INCLUDE_OPTS) \
	-create-app -o$(BUILD_PATH)/TEST_nc100.bin \
	$(TEST_FILES)
	rm $(BUILD_PATH)/TEST_nc100.bin	


p2000_quick_test:
	$(Z88DK_PATH)$(MYZ88DK) +p2000 -clib=ansi -D__P2000__ -vn \
	  \
	-DCONIO \
	-D__NO_INIT_GRAPHICS \
	$(FAST_SCCZ80_TEST_OPTS) $(INCLUDE_OPTS) \
	-lndos -create-app -o $(BUILD_PATH)/TEST_p2000.prg \
	$(TEST_FILES)
	rm $(BUILD_PATH)/TEST_p2000.prg


pc6001_quick_test:
	$(Z88DK_PATH)$(MYZ88DK) +pc6001 -Cz--audio -clib=ansi -subtype=32k \
	-D__PC6001__ -v \
	-DCONIO \
	-D__NO_INIT_GRAPHICS \
	$(FAST_SCCZ80_TEST_OPTS) $(INCLUDE_OPTS) \
	-lndos -create-app -o $(BUILD_PATH)/TEST_pc6001_32k.prg \
	$(CROSS_LIB_PATH)/sound/z88dk/psg/ay-3-8910_psg_sounds.c \
	$(TEST_FILES)
	rm $(BUILD_PATH)/TEST_pc6001_32k.prg
	rm $(BUILD_PATH)/TEST_pc6001_32k.wav
	mv $(BUILD_PATH)/TEST_pc6001_32k.cas $(BUILD_PATH)/TEST_pc6001_32k.cp6	


pps_quick_test:	
	$(Z88DK_PATH)$(MYZ88DK) +pps -pragma-redirect:fputc_cons=fputc_cons_generic \
	-D__PPS__ -vn \
	-DCONIO_VT52 \
	-DCONIO \
	-D__NO_INIT_GRAPHICS \
	$(FAST_SCCZ80_TEST_OPTS) $(INCLUDE_OPTS) \
	-D_XL_NO_WAIT \
	-lndos -o ppst.bin \
	$(TEST_FILES) 
	mv ppst.bin $(BUILD_PATH)/TEST_pps.exe		


pv2000_quick_test:
	$(Z88DK_PATH)$(MYZ88DK) +pv2000 -pragma-redirect:fputc_cons=fputc_cons_generic \
	-D__SRR__ -vn \
	-DCONIO \
	-D__NO_INIT_GRAPHICS \
	 \
	-D_XL_NO_WAIT \
	-DCONIO_VT52 \
	-lndos \
	$(FAST_SCCZ80_TEST_OPTS) $(INCLUDE_OPTS) \
	-create-app -o pv2kt.bin \
	$(TEST_FILES)
	mv pv2kt.rom $(BUILD_PATH)/TEST_pv2000.rom
	rm pv2kt.bin
	rm pv2kt_BSS.bin
	rm pv2kt_DATA.bin


px4_quick_test:
	$(Z88DK_PATH)$(MYZ88DK) +cpm -lpx4 \
	$(FAST_SCCZ80_TEST_OPTS) $(INCLUDE_OPTS) \
	-D__PX4__ \
	-subtype=px4 -Cz--32k \
	-create-app \
	-vn -lndos -o px4.bin \
	-D__ALT_PRINT \
	-DZ88DK_SPRITES -D__NO_INIT_GRAPHICS \
	$(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c \
	$(TEST_FILES)
	rm px4.bin
	mv PX4.ROM $(BUILD_PATH)/TEST_px4.ROM


px8_quick_test:
	$(Z88DK_PATH)$(MYZ88DK) +cpm -subtype=px8 \
	$(FAST_SCCZ80_TEST_OPTS) $(INCLUDE_OPTS) \
	-D__PX8__ \
	-create-app \
	-vn -lndos -o px8.bin \
	-D__ALT_PRINT \
	-DZ88DK_SPRITES -D__NO_INIT_GRAPHICS \
	$(TEST_FILES) \
	$(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c 
	rm px8.bin
	mv PX8.ROM $(BUILD_PATH)/TEST_px8.ROM


samcoupe_quick_test:
	$(Z88DK_PATH)$(MYZ88DK) +sam \
	-D__SAM__ \
	-DCONIO \
	-D__NO_INIT_GRAPHICS \
	$(FAST_SCCZ80_TEST_OPTS) $(INCLUDE_OPTS) \
	-clib=ansi -pragma-define:ansicolumns=32 -vn \
	-o $(BUILD_PATH)/FULL_samcoupe.bin -lndos \
	$(TEST_FILES)
	cp $(TOOLS_PATH)/z88dk/samcoupe/samdos2_empty $(TOOLS_PATH)/z88dk/samcoupe/samdos2
	$(TOOLS_PATH)/z88dk/samcoupe/pyz80.py -I $(TOOLS_PATH)/z88dk/samcoupe/samdos2 $(TOOLS_PATH)/z88dk/samcoupe/sam_wrapper.asm
	mv $(TOOLS_PATH)/z88dk/samcoupe/sam_wrapper.dsk $(BUILD_PATH)/TEST_samcoupe.dsk
	rm $(BUILD_PATH)/FULL_samcoupe.bin


sc3000_quick_test:
	$(Z88DK_PATH)$(MYZ88DK) +sc3000 \
	$(FAST_SCCZ80_TEST_OPTS) $(INCLUDE_OPTS) \
	-DCONIO \
	-D__NO_INIT_GRAPHICS \
	-clib=ansi \
	-pragma-define:ansicolumns=32 \
	-vn -lndos -create-app -Cz--audio \
	-o $(BUILD_PATH)/TEST_sc3000_16k.prg \
	$(TEST_FILES)
	rm $(BUILD_PATH)/TEST_sc3000_16k.prg
	rm $(BUILD_PATH)/TEST_sc3000_16k.tap	


sg1000_quick_test:
	$(Z88DK_PATH)$(MYZ88DK) +sc3000 -subtype=rom \
	$(FAST_SCCZ80_TEST_OPTS) $(INCLUDE_OPTS) \
	-DCONIO \
	-D__NO_INIT_GRAPHICS \
	-clib=ansi \
	-pragma-define:ansicolumns=32 \
	-vn -lndos -create-app -Cz--audio \
	-o $(BUILD_PATH)/TEST_sg1000.prg \
	$(TEST_FILES) 
	rm $(BUILD_PATH)/TEST_sg1000.prg
	rm $(BUILD_PATH)/TEST_sg1000_BSS.bin
	rm $(BUILD_PATH)/TEST_sg1000_DATA.bin


spectrum_quick_test: 
	$(Z88DK_PATH)$(MYZ88DK) +zx -clib=ansi -vn  \
	-pragma-define:ansicolumns=32 \
	 -DCLIB_ANSI -D__SPECTRUM__ \
	-D__NO_INIT_GRAPHICS \
	-DCONIO \
	-lndos -create-app -o $(BUILD_PATH)/TEST_spectrum.prg \
	$(FAST_SCCZ80_TEST_OPTS) $(INCLUDE_OPTS) \
	$(TEST_FILES)
	rm $(BUILD_PATH)/TEST_spectrum.prg
	rm -rf $(BUILD_PATH)/TEST_spectrum_BANK_7.bin


srr_quick_test:
	$(Z88DK_PATH)$(MYZ88DK) +srr -pragma-redirect:fputc_cons=fputc_cons_generic \
	-D__SRR__ -vn \
	-DCONIO \
	-D__NO_INIT_GRAPHICS \
	 \
	-D_XL_NO_WAIT \
	-DCONIO_VT52 \
	$(FAST_SCCZ80_TEST_OPTS) $(INCLUDE_OPTS) \
	-lndos \
	-create-app -o srrt.bin \
	$(TEST_FILES)
	rm srrt.srr
	rm srrt.bin
	mv srrt.wav $(BUILD_PATH)/TEST_srr.wav


svi_quick_test:
	$(Z88DK_PATH)$(MYZ88DK) +svi \
	 -vn -lndos \
	 \
	-D__SVI__ -o svit.bin \
	-DCONIO \
	-D__INCLUDE_CONIO_H \
	-pragma-define:ansicolumns=32 \
	-clib=ansi -pragma-define:ansicolumns=32 -vn -lndos \
	 \
	-DCONIO \
	-D__NO_INIT_GRAPHICS \
	-D__SVI__ \
	$(FAST_SCCZ80_TEST_OPTS) $(INCLUDE_OPTS) \
	-create-app \
	$(CROSS_LIB_PATH)/sound/z88dk/psg/ay-3-8910_psg_sounds.c  \
	$(TEST_FILES)
	mv svit.cas $(BUILD_PATH)/TEST_svi.cas
	rm svit.bin


ti82_quick_test:
	$(Z88DK_PATH)$(MYZ88DK) +ti82 \
	$(FAST_SCCZ80_TEST_OPTS) $(INCLUDE_OPTS) -D__TI82__ \
	-DCONIO \
	-D__NO_INIT_GRAPHICS \
	-clib=ansi -pragma-define:ansicolumns=32 \
	-vn \
	-DTURN_BASED -D_XL_NO_WAIT \
	-lndos \
	-create-app -o ti82t.bin \
	$(TEST_FILES)
	mv ti82t.82p $(BUILD_PATH)/TEST_ti82.82p
	rm ti82t.bin


ti83_quick_test:
	$(Z88DK_PATH)$(MYZ88DK) +ti83 \
	$(FAST_SCCZ80_TEST_OPTS) $(INCLUDE_OPTS) -D__TI83__ \
	-DCONIO \
	-D__NO_INIT_GRAPHICS \
	-clib=ansi -pragma-define:ansicolumns=32 \
	-vn \
	-DTURN_BASED -D_XL_NO_WAIT \
	-lndos \
	-create-app -o ti83t.bin \
	$(TEST_FILES)
	mv ti83t.83p $(BUILD_PATH)/TEST_ti83.83p
	rm ti83t.bin


ti85_quick_test:
	$(Z88DK_PATH)$(MYZ88DK) +ti85 \
	$(FAST_SCCZ80_TEST_OPTS) $(INCLUDE_OPTS) -D__TI85__ \
	-DCONIO \
	-D__NO_INIT_GRAPHICS \
	-clib=ansi -pragma-define:ansicolumns=32 \
	-vn \
	-DTURN_BASED -D_XL_NO_WAIT \
	-lndos \
	-create-app -o ti85t.bin \
	$(TEST_FILES)
	mv ti85t.85s $(BUILD_PATH)/TEST_ti85.85s
	rm ti85t.bin


trs80_quick_test:
	$(Z88DK_PATH)$(MYZ88DK) +trs80 -lndos \
	-lm -create-app \
	-D__TRS80__ \
	-DCONIO \
	-D__NO_INIT_GRAPHICS \
	$(FAST_SCCZ80_TEST_OPTS) $(INCLUDE_OPTS) \
	-D_XL_NO_SLEEP \
	-DCONIO_VT52 \
	-o$(BUILD_PATH)/TEST_trs80.bin \
	$(TEST_FILES)
	rm $(BUILD_PATH)/TEST_trs80.bin	


vg5k_quick_test:
	$(Z88DK_PATH)$(MYZ88DK) +vg5k \
	$(FAST_SCCZ80_TEST_OPTS) $(INCLUDE_OPTS) \
	-DCONIO \
	-D__NO_INIT_GRAPHICS \
	 -vn -D__VG5K__ -DASM_DISPLAY \
	-lndos -create-app -o $(BUILD_PATH)/TEST_vg5k.prg \
	$(TEST_FILES)
	rm $(BUILD_PATH)/TEST_vg5k.prg	


vz200_quick_test:
	$(Z88DK_PATH)$(MYZ88DK) +vz -vn \
	-pragma-include:$(CFG_PATH)/z88dk/zpragma.inc \
	-D__VZ__ -clib=ansi \
	-DCONIO \
	-D__NO_INIT_GRAPHICS \
	$(FAST_SCCZ80_TEST_OPTS) $(INCLUDE_OPTS) \
	-lndos \
	-create-app -o $(BUILD_PATH)/TEST_vz200.vz \
	$(TEST_FILES)
	rm $(BUILD_PATH)/TEST_vz200.cas	


x1_quick_test:
	$(Z88DK_PATH)$(MYZ88DK) +x1 \
	-D__X1__ \
	-DCONIO \
	-D__NO_INIT_GRAPHICS \
	-D_XL_NO_SLEEP \
	$(FAST_SCCZ80_TEST_OPTS) $(INCLUDE_OPTS) \
	-create-app -o $(BUILD_PATH)/TEST_x1.bin -vn -lndos \
	$(TEST_FILES)
	rm $(BUILD_PATH)/TEST_x1.bin


z1013_quick_test:
	$(Z88DK_PATH)$(MYZ88DK) +z1013 -clib=ansi \
	-DCONIO \
	-D__NO_INIT_GRAPHICS \
	-vn -lndos \
	-D__Z1013__ \
	$(FAST_SCCZ80_TEST_OPTS) $(INCLUDE_OPTS) \
	$(TEST_FILES) \
	-create-app -o z1013t.bin
	mv Z1013T.Z80 $(BUILD_PATH)/TEST_z1013.z80
	rm z1013t.bin


z9001_quick_test:
	$(Z88DK_PATH)$(MYZ88DK) +z9001 -clib=ansi \
	-D__Z9001__ -vn   \
	-DCONIO \
	-D__NO_INIT_GRAPHICS \
	$(FAST_SCCZ80_TEST_OPTS) $(INCLUDE_OPTS) \
	-lndos -create-app -o $(BUILD_PATH)/TEST_z9001.z80 \
	$(TEST_FILES)
	rm $(BUILD_PATH)/TEST_z9001.z80	


zx80_quick_test:
	$(Z88DK_PATH)$(MYZ88DK) +zx80 -vn \
	-D__ZX80__ \
	-DCONIO \
	-D__NO_INIT_GRAPHICS \
	-DTURN_BASED \
	$(FAST_SCCZ80_TEST_OPTS) $(INCLUDE_OPTS) \
	-D__ALT_SLEEP \
	-lndos \
	-create-app -o  $(BUILD_PATH)/TEST_zx80.prg \
	$(CROSS_LIB_PATH)/sleep/sleep_macros.c \
	$(TEST_FILES) 
	rm $(BUILD_PATH)/TEST_zx80.prg


zx81_quick_test:
	$(Z88DK_PATH)$(MYZ88DK) +zx81 -vn \
	-D__ZX81__ \
	-DTURN_BASED \
	-DCONIO \
	-D__NO_INIT_GRAPHICS \
	$(FAST_SCCZ80_TEST_OPTS) $(INCLUDE_OPTS) \
	-D__ALT_SLEEP \
	-lndos \
	-create-app -o  $(BUILD_PATH)/TEST_zx81.prg \
	$(CROSS_LIB_PATH)/sleep/sleep_macros.c \
	$(TEST_FILES) 
	rm $(BUILD_PATH)/TEST_zx81.prg


###############################################################################


zx81_zsdcc_quick_test:
	$(Z88DK_PATH)$(MYZ88DK) +zx81 \
	-compiler=sdcc \
	-vn \
	-D__ZX81__ -DTINY_GAME \
	-D__ALT_SLEEP \
	-DCONIO \
	-D__NO_INIT_GRAPHICS \
	$(FAST_ZSDCC_TEST_OPTS) $(INCLUDE_OPTS) \
	-lndos \
	-create-app -o  $(BUILD_PATH)/TEST_ZSDCC_zx81.prg \
	$(CROSS_LIB_PATH)/sleep/sleep_macros.c \
	$(TEST_FILES)
	rm $(BUILD_PATH)/TEST_ZSDCC_zx81.prg


aquarius_zsdcc_quick_test:
	$(Z88DK_PATH)$(MYZ88DK) +aquarius \
	-pragma-include:$(CFG_PATH)/z88dk/zpragma.inc \
	-compiler=sdcc \
	$(FAST_ZSDCC_TEST_OPTS) $(INCLUDE_OPTS) \
	-vn \
	-D__ALT_PRINT -D__AQUARIUS__ -DTINY_GAME \
	-pragma-include:$(CFG_PATH)/z88dk/zpragma_clib.inc \
	-lndos -o TEST_ZSDCC_aquarius -create-app \
	-DMEMORY_MAPPED \
	$(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c \
	$(CROSS_LIB_PATH)/display/init_graphics/z88dk/aquarius/aquarius_init_graphics.c \
	$(TEST_FILES) 
	rm TEST_ZSDCC_aquarius
	mv TEST_ZSDCC_aquarius.caq $(BUILD_PATH)
	mv _TEST_ZSDCC_aquarius.caq $(BUILD_PATH)	


vz200_zsdcc_quick_test:
	$(Z88DK_PATH)$(MYZ88DK) +vz -vn \
	-DTINY_GAME \
	-pragma-include:$(CFG_PATH)/z88dk/zpragma.inc \
	-compiler=sdcc \
	-DCONIO \
	-D__NO_INIT_GRAPHICS \
	$(FAST_ZSDCC_TEST_OPTS) $(INCLUDE_OPTS) \
	-D__VZ__ -clib=ansi \
	-DLESS_TEXT \
	 \
	-DNO_RANDOM_LEVEL \
	-DNO_DEAD_GHOSTS \
	-D__NO_SCREEN_COLOR_INIT \
	-DNO_STATS \
	-DNO_INITIAL_SCREEN \
	-lndos \
	-create-app -o $(BUILD_PATH)/TEST_ZSDCC_vz200.vz \
	$(TEST_FILES)
	rm $(BUILD_PATH)/TEST_ZSDCC_vz200.cas


spectrum_zsdcc_quick_test: $(ASSETS_PATH)/z88dk_xchase.asm
	$(Z88DK_PATH)$(MYZ88DK) +zx  -v -zorg=24055 \
	-compiler=sdcc \
	-pragma-include:$(CFG_PATH)/z88dk/zpragma_clib.inc \
	-pragma-redirect:getk=getk_inkey \
	-DZ88DK_JOYSTICK \
	-DTINY_GAME \
	 \
	 \
	-D__SPECTRUM__ \
	-lndos -create-app \
	-DCONIO \
	 \
	-pragma-redirect:fputc_cons=fputc_cons_generic \
	-create-app -o $(BUILD_PATH)/TEST_ZSDCC_spectrum.prg \
	$(CROSS_LIB_PATH)/display/init_graphics/z88dk/udg/udg_init_graphics.c \
	$(ASSETS_PATH)/z88dk_xchase.asm \
	$(FAST_ZSDCC_TEST_OPTS) $(INCLUDE_OPTS) \
	-DCONIO \
	$(TEST_FILES)
	rm $(BUILD_PATH)/TEST_ZSDCC_spectrum.prg 
	# rm $(BUILD_PATH)/TEST_ZSDCC_spectrum_BANK_7.bin


svi_zsdcc_quick_test:
	$(Z88DK_PATH)$(MYZ88DK) +svi \
	-compiler=sdcc \
	$(FAST_ZSDCC_TEST_OPTS) $(INCLUDE_OPTS) \
	-compiler=sdcc \
	-D__INCLUDE_CONIO_H \
	-zorg=49152 \
	-clib=ansi \
	-pragma-define:ansicolumns=32 \
	-pragma-include:$(CFG_PATH)/z88dk/zpragma_clib.inc \
	-vn -lndos -o svizt.bin \
	-D__SVI__ \
	 \
	-D__BIT_BANG_SOUND \
	-DCONIO -D__NO_INIT_GRAPHICS \
	-create-app \
	-create-app \
	$(TEST_FILES) 
	mv svizt.cas $(BUILD_PATH)/TEST_ZSDCC_svi.cas
	rm svizt.bin
	
	
vg5k_zsdcc_quick_test:
	$(Z88DK_PATH)$(MYZ88DK) +vg5k \
	-compiler=sdcc \
	--reserve-regs-iy \
	-pragma-include:$(CFG_PATH)/z88dk/zpragma_clib.inc \
	 \
	-vn -D__VG5K__ \
	-DLESS_TEXT \
	 \
	-DCONIO \
	-D__NO_INIT_GRAPHICS \
	$(FAST_ZSDCC_TEST_OPTS) $(INCLUDE_OPTS) \
	-create-app -o $(BUILD_PATH)/TEST_ZSDCC_vg5k.prg \
	$(TEST_FILES)
	rm $(BUILD_PATH)/TEST_ZSDCC_vg5k.prg


mc1000_zsdcc_quick_test:
	$(Z88DK_PATH)$(MYZ88DK) +mc1000 -compiler=sdcc \
	-subtype=gaming -pragma-define:ansicolumns=32 \
	-DLESS_TEXT \
	 \
	-DNO_HINTS \
	-clib=ansi \
	$(FAST_ZSDCC_TEST_OPTS) $(INCLUDE_OPTS) \
	-DCONIO \
	-D__NO_INIT_GRAPHICS \
	-D__MC1000__  \
	-D__ALT_SLEEP \
	-vn  -lndos -create-app -Cz--audio -o mc1kzt.bin \
	$(CROSS_LIB_PATH)/sound/z88dk/psg/ay-3-8910_psg_sounds.c \
	$(CROSS_LIB_PATH)/sleep/sleep_macros.c \
	$(TEST_FILES) 
	mv mc1kzt.wav $(BUILD_PATH)/TEST_ZSDCC_mc1000.wav
	rm mc1kzt.bin
	rm mc1kzt.cas


c128_z80_zsdcc_quick_test:
	$(Z88DK_PATH)$(MYZ88DK) +c128 \
	-compiler=sdcc \
	-lndos -subtype=disk \
	-D__C128_Z80__ -DXSize=40 \
	-D__INCLUDE_CONIO_H \
	-DCONIO \
	-D__NO_INIT_GRAPHICS \
	$(FAST_ZSDCC_TEST_OPTS) $(INCLUDE_OPTS) \
	$(TEST_FILES) \
	-create-app -o c128zt.bin
	$(TOOLS_PATH)/generic/c1541 -format "crosschase,0" d64 TEST_c128_z80.d64
	$(TOOLS_PATH)/generic/c1541 -attach TEST_c128_z80.d64 -write c128zt.ldr
	$(TOOLS_PATH)/generic/c1541 -attach TEST_c128_z80.d64 -write c128zt
	mv TEST_c128_z80.d64 $(BUILD_PATH)/
	rm C128ZT.LDR
	rm C128ZT
	rm c128zt.bin


