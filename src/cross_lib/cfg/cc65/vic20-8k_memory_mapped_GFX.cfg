# Memory configuration for the VIC-20 with 16K RAM Cartridge
# Contributed by Stefan Haubenthal
SYMBOLS {
    __LOADADDR__:  type = import;
    __EXEHDR__:    type = import;
    __STACKSIZE__: type = weak, value = $001B; # small stack
    __GFX_START__: type = weak, value = $1F20;
}
MEMORY {
    ZP:       file = "", define = yes, start = $0002, size = $001A;
    SCREEN:   start =  $1000, size = $0200;
    LOADADDR: file = %O,               start = $11FF, size = $0002;
    HEADER:   file = %O,               start = $1201, size = $000C;
    MAIN:     file = %O, define = yes, start = $120D, fill = yes, size = __GFX_START__ - $120D - __STACKSIZE__;
    DUMMY:    file = %O,               start = __GFX_START__ - __STACKSIZE__ - 1, fill = yes, size = __STACKSIZE__;
    CHARMEM:  file = %O, start = __GFX_START__, size = $00E0, type = rw,  define = yes, fill = yes;
    RAMEXP:   file = %O, start = $2000, size = $2000, type = rw;
}

SEGMENTS {
    ZEROPAGE: load = ZP,       type = zp;
    LOADADDR: load = LOADADDR, type = ro;
    EXEHDR:   load = HEADER,   type = ro;
    STARTUP:  load = MAIN,     type = ro;
    LOWCODE:  load = MAIN,     type = ro,  optional = yes;
    ONCE:     load = MAIN,     type = ro,  optional = yes;
    CODE:     load = RAMEXP,   type = ro;
    RODATA:   load = MAIN,     type = ro;
    DATA:     load = MAIN,     type = rw;
    INIT:     load = MAIN,     type = bss;
    BSS:      load = MAIN,     type = bss, define   = yes;
    UDCCHAR:  load = CHARMEM,  type = ro, define = yes, optional = no;
    CODE2:    load = MAIN,     type = ro;
}
FEATURES {
    CONDES: type    = constructor,
            label   = __CONSTRUCTOR_TABLE__,
            count   = __CONSTRUCTOR_COUNT__,
            segment = ONCE;
    CONDES: type    = destructor,
            label   = __DESTRUCTOR_TABLE__,
            count   = __DESTRUCTOR_COUNT__,
            segment = RODATA;
    CONDES: type    = interruptor,
            label   = __INTERRUPTOR_TABLE__,
            count   = __INTERRUPTOR_COUNT__,
            segment = RODATA,
            import  = __CALLIRQ__;
}
