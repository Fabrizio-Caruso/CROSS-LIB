######################################################################
# Makefile for CROSS-SHOOT 


GAME_NAME := shoot

PARENT_DIR = games

SOURCE_PATH := $(PARENT_DIR)/$(GAME_NAME)

API_VERSION=1

GLOBAL_OPTS = -DFULL_LOWER_BORDER -DFORCE_NARROW -D_DEFAULT_ASCII 
#-D_API_VERSION=$(API_VERSION)

#####################################################################
# SLOWDOWN VALUES

# Common factor
_COMMON_SLOWDOWN_FACTOR=8


# CC65
_APPLE2_SLOWDOWN=30
_APPLE2ENH_SLOWDOWN=30
_APPLE2_HGR_SLOWDOWN=50
_APPLE2ENH_HGR_SLOWDOWN=50
_ATARI_SLOWDOWN=70
_ATARI5200_SLOWDOWN=70
_C16_SLOWDOWN=55
_C64_SLOWDOWN=45
_CREATIVISION_SLOWDOWN=100
_GAMATE_SLOWDOWN=120
_ORIC_SLOWDOWN=40
_NES_SLOWDOWN=80
_PET_SLOWDOWN=40
_PCE_SLOWDOWN=550
_SUPERVISION_SLOWDOWN=140
_VIC20_SLOWDOWN=55


# Z88DK
_AQUARIUS_SLOWDOWN=105
_ACE_SLOWDOWN=100
_C128_Z80_40COL_SLOWDOWN=20
_C128_Z80_80COL_SLOWDOWN=1
_CPC_MODE0_SLOWDOWN=100
_CPC_CPCRSLIB_MODE1_SLOWDOWN=90
_CPC_MODE2_SLOWDOWN=90
_CPM_Z80_SLOWDOWN=90
_CPM_INTEL8080_SLOWDOWN=80
_COLECO_SLOWDOWN=100
_GB_SLOWDOWN=280
_GG_SLOWDOWN=300
_GB_WAIT_VSYNC_SLOWDOWN=150
_LASER500_SLOWDOWN=200
_MC1000_SLOWDOWN=75
_MSX_SLOWDOWN=200
_MSX_FIXED_COLORS_SLOWDOWN=300
_MTX500_SLOWDOWN=200
_MTX512_SLOWDOWN=200
_MZ_SLOWDOWN=200
_SAMCOUPE_SLOWDOWN=300
_SMS_SLOWDOWN=160
_SPECTRUM_SLOWDOWN=160
_VG5K_SLOWDOWN=75
_VZ200_SLOWDOWN=250 
_ZX81_SLOWDOWN=10
_ZX81_WRX_SLOWDOWN=1


# CMOC
_COCO_SLOWDOWN=160
_DRAGON_SLOWDOWN=160
_MO5_SLOWDOWN=160
_TO7_SLOWDOWN=160


# LCC1802
_COMX_SLOWDOWN=30
_PECOM_SLOWDOWN=30
_TMC600_SLOWDOWN=50
_MICRO_SLOWDOWN=60
_CIDELSA_SLOWDOWN=40


# GCC
_NCURSES_SLOWDOWN=1


#######################################################################
# Use parameters (env variables) to modify compilation parameters

SCCZ80_OPTS ?=  $(GLOBAL_OPTS)
#-O0
#-O3

SCCZ80_ROM_OPTS ?= -O3 $(GLOBAL_OPTS)
#-O0
#-O3

ZSDCC_OPTS ?= -SO3 $(ZSDCC_MAKEFILE_COMPILATION_OPTS) $(GLOBAL_OPTS)
#-SO0
# -SO3 --max-allocs-per-node200000

ZSDCC_ROM_OPTS ?= $(ZSDCC_MAKEFILE_COMPILATION_OPTS) $(GLOBAL_OPTS)
# -SO3
# -SO3 --max-allocs-per-node200000

Z88DK_MAKE_OPTS ?= $(ZSDCC_MAKEFILE_THREADS_OPTS)
#-j 8


#####################################################################
# Compilers variables
include makefiles.common/auxiliary/Makefile_compilers


#####################################################################
# Common includes and targets
include makefiles.common/auxiliary/Makefile_common


#####################################################################
# Assets

include makefiles.common/auxiliary/Makefile_assets


#####################################################################
# Draw skip
LIGHT_DRAW_SKIP ?= -DBOMB_DRAW_SKIP=1 -DWALL_DRAW_SKIP=3
DRAW_SKIP ?=       -DBOMB_DRAW_SKIP=1 -DWALL_DRAW_SKIP=7
EXTRA_DRAW_SKIP ?= -DBOMB_DRAW_SKIP=3 -DWALL_DRAW_SKIP=15
ULTRA_DRAW_SKIP ?= -DBOMB_DRAW_SKIP=7 -DWALL_DRAW_SKIP=15 -DGHOST_DRAW_SKIP=1 


######################################################################
# Cross-Shoot files
#
NO_CHASE_FILES ?= \
	$(BASIC_CROSS_LIB_FILES) \
	$(SOURCE_PATH)/move_player.c \
	$(SOURCE_PATH)/ghost.c  $(SOURCE_PATH)/level.c $(SOURCE_PATH)/character.c $(SOURCE_PATH)/game_text.c \
	$(SOURCE_PATH)/main.c \
	$(SOURCE_PATH)/init_images.c

TINY_FILES ?= $(NO_CHASE_FILES) $(SOURCE_PATH)/strategy.c 

#
TEST_FILES ?= $(NO_CHASE_FILES)

#
LIGHT_ONLY_FILES ?= $(SOURCE_PATH)/item.c $(SOURCE_PATH)/skull.c $(SOURCE_PATH)/bullet.c 

#
FULL_ONLY_FILES ?= $(SOURCE_PATH)/horizontal_missile.c $(SOURCE_PATH)/rocket.c $(SOURCE_PATH)/sleep.c

#
LIGHT_FILES ?= $(TINY_FILES) $(LIGHT_ONLY_FILES) 

#
FULL_FILES ?= $(LIGHT_FILES) $(FULL_ONLY_FILES)


SCCZ80_OPTS ?= -O3

SCCZ80_ROM_OPTS ?= -O3

# Parallel compilation for Z88DK targets
Z88DK_MAKE_OPTS ?= -j 8


#################################################################



gcc_targets: \
	ncurses  

ifeq ($(DO_WIN),1)
cc65_targets: \
    atari \
    atari5200 \
    atari_lynx \
    c16 \
    c64 \
    oric  \
    nes \
    pce \
    supervision \
    vic20 


z88dk_targets_aux: \
    ace \
    c128_z80_80col \
    cpc \
    gb \
    laser500 \
    mc1000 \
    msx \
    samcoupe \
    sms \
    spectrum \
    vg5k \
    vz200
else
cc65_targets: \
    atari \
    atari5200 \
    atari_lynx \
    c16 \
    c64 \
    oric  \
    nes \
    pce \
    vic20 


z88dk_targets_aux: \
    ace \
    cpc \
    gb \
    laser500 \
    mc1000 \
    msx \
    samcoupe \
    sms \
    spectrum \
    vg5k \
    vz200
endif


z88dk_targets: 
	$(MAKE) $(Z88DK_MAKE_OPTS) z88dk_targets_aux -f ./games/$(GAME_NAME)/Makefile.$(GAME_NAME)

lcc1802_targets: \
    _comx \
    _pecom \
    _tmc600 \
    _cidelsa \
    _micro \
    clean_combo_files

ifeq ($(DO_WIN),1)
all: \
	gcc_targets \
	cc65_targets \
	lcc1802_targets \
	z88dk_targets
else
all: \
	gcc_targets \
	cc65_targets \
	z88dk_targets
endif

#################################################################
# CC65

#################################################################

apple2_hgr: $(ASSETS_PATH)/7x8_chars.h
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS) -O -t apple2 \
	--config $(CFG_PATH)/cc65/apple2-hgr.cfg \
	-DFULL_GAME -DALT_SLEEP -DANIMATE_PLAYER \
	-DINITIAL_SLOWDOWN=31500 -DFORCE_XSIZE=20 -DFORCE_YSIZE=24 \
	-DBETWEEN_LEVEL -DSOUNDS -DEND_SCREEN -DALT_PRINT \
	-DAPPLE2_HGR -DDEFAULT_CLEAR_SCREEN \
	$(CROSS_LIB_PATH)/display/init_graphics/cc65/apple2/hgr.s \
	$(FULL_FILES) \
	$(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c \
    --code-name LOWCODE \
	$(SOURCE_PATH)/end_screen.c \
	$(CROSS_LIB_PATH)/sound/generic/bit_bang_sounds.c \
	$(CROSS_LIB_PATH)/sleep/sleep_macros.c \
	$(CROSS_LIB_PATH)/display/init_graphics/cc65/apple2/apple2_hgr_init_graphics.c \
	-o $(BUILD_PATH)/$@.bin
	cp $(TOOLS_PATH)/cc65/apple2/MASTER_BOOT_ASCHASE.DSK $(BUILD_PATH)/X$(GAME_NAME)_$@.dsk
	java -jar $(TOOLS_PATH)/cc65/apple2/ac.jar -as $(BUILD_PATH)/X$(GAME_NAME)_$@.dsk aschase < $(BUILD_PATH)/$@.bin
	rm $(BUILD_PATH)/$@.bin

#################################################################

apple2enh_hgr: $(ASSETS_PATH)/7x8_chars.h
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS) -O -t apple2 \
	--config $(CFG_PATH)/cc65/apple2-hgr.cfg \
	-DFULL_GAME -DALT_SLEEP -DANIMATE_PLAYER \
	-DINITIAL_SLOWDOWN=31500 -DFORCE_XSIZE=20 -DFORCE_YSIZE=24 \
	-DBETWEEN_LEVEL -DSOUNDS -DEND_SCREEN -DALT_PRINT \
	-DAPPLE2_HGR -DDEFAULT_CLEAR_SCREEN \
	$(CROSS_LIB_PATH)/display/init_graphics/cc65/apple2/hgr.s \
	$(FULL_FILES) \
	$(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c \
    --code-name LOWCODE \
	$(SOURCE_PATH)/end_screen.c \
	$(CROSS_LIB_PATH)/sound/generic/bit_bang_sounds.c \
	$(CROSS_LIB_PATH)/sleep/sleep_macros.c \
	$(CROSS_LIB_PATH)/display/init_graphics/cc65/apple2/apple2_hgr_init_graphics.c \
	-o $(BUILD_PATH)/$@.bin
	cp $(TOOLS_PATH)/cc65/apple2/MASTER_BOOT_ASCHASE.DSK $(BUILD_PATH)/X$(GAME_NAME)_$@.dsk
	java -jar $(TOOLS_PATH)/cc65/apple2/ac.jar -as $(BUILD_PATH)/X$(GAME_NAME)_$@.dsk aschase < $(BUILD_PATH)/$@.bin
	rm $(BUILD_PATH)/$@.bin

#################################################################


atari: atari_color

atari_color: $(ASSETS_PATH)/8x8_chars.h
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS) -O -t atari \
	-DREDEFINED_CHARS \
	-DINITIAL_SLOWDOWN=31500 \
	-DANIMATE_PLAYER -DFULL_GAME -DATARI_MODE1 -DSOUNDS -DBETWEEN_LEVEL -DEND_SCREEN \
	--config $(CFG_PATH)/cc65/atari_mode1_redefined_chars.cfg \
	-DATARI_MODE_1_COLOR -DINLINE_LOC -DNO_SPACE_TEXT \
	-DNO_SET_SCREEN_COLORS \
	-DALT_PRINT \
	-D_XL_SLOW_DOWN_FACTOR=200 \
	$(CROSS_LIB_PATH)/display/alt_print/atari_mode1_alt_print.c \
	$(CROSS_LIB_PATH)/display/init_graphics/cc65/atari/disable_setcursor.s \
	$(CROSS_LIB_PATH)/display/init_graphics/cc65/atari/atari_mode1_redefined_chars_init_graphics.c \
	$(CROSS_LIB_PATH)/sound/cc65/pokey/pokey_sounds.c \
	$(SOURCE_PATH)/end_screen.c \
	$(FULL_FILES) \
	-o $(BUILD_PATH)/X$(GAME_NAME)_atari_color.xex

#################################################################

atari5200: $(ASSETS_PATH)/8x8_chars.h
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS) -O -t atari5200 \
	--config $(CFG_PATH)/cc65/atari5200_redefined_chars_32k.cfg \
	-D__ATARI5200__ \
	-DINITIAL_SLOWDOWN=31500 \
	-DFULL_GAME -DEND_SCREEN -DBETWEEN_LEVEL \
	-DATARI_MODE_1_COLOR -DINLINE_LOC -DNO_SPACE_TEXT \
	-DANIMATE_PLAYER \
	-DSOUNDS \
	-D_XL_SLOW_DOWN_FACTOR=200 \
	$(SOURCE_PATH)/end_screen.c \
	$(CROSS_LIB_PATH)/sound/cc65/pokey/pokey_sounds.c \
	$(FULL_FILES) \
	$(CROSS_LIB_PATH)/display/init_graphics/cc65/atari5200/atari5200_init_graphics.c \
	-o $(BUILD_PATH)/X$(GAME_NAME)_atari5200.rom


#################################################################

atari_lynx:
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS) -O -t lynx \
	-D__ATARI_LYNX__  -D_XL_SLOW_DOWN_FACTOR=1000 -D_XL_NO_UDG \
	-DNO_SET_SCREEN_COLORS \
	-DFORCE_GHOSTS_NUMBER=8 \
	-DTGI \
	-DFULL_GAME \
	-DALT_PRINT \
    -DDEFAULT_CLEAR_SCREEN \
	$(CROSS_LIB_PATH)/display/init_graphics/cc65/atari_lynx/atari_lynx_init_graphics.c \
	$(CROSS_LIB_PATH)/display/alt_print/tgi_alt_print.c \
	$(FULL_FILES) \
	-o $(BUILD_PATH)/X$(GAME_NAME)_ATARI_LYNX.lnx


#################################################################


c16: c16_32k


plus4: c16_32k


c16_32k: $(ASSETS_PATH)/cc65_udc_arcade_64_chars.s
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS) -Or -Cl -t c16 $(DRAW_SKIP) \
	--config $(CFG_PATH)/cc65/c16-32k_GFX_64chars.cfg \
	-DFORCE_NO_CONIO_LIB \
	-DFULL_GAME \
	-DREDEFINED_CHARS \
	-DSOUNDS \
	-DALT_PRINT \
	-DANIMATE_PLAYER \
	-DMEMORY_MAPPED \
	-DC16_UNEXPANDED \
	-DDEFAULT_CLEAR_SCREEN \
	-DALT_SLEEP \
	-D_XL_SLOW_DOWN_FACTOR=300 \
	-DDANCE -DEND_SCREEN -DUDG_BASE_FACTOR=23 \
	$(CROSS_LIB_PATH)/display/init_graphics/cc65/c264/c16_linked_redefined_chars_init_graphics.c \
	$(CROSS_LIB_PATH)/sound/cc65/c264/c264_sounds.c \
	$(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c \
	$(CROSS_LIB_PATH)/sleep/sleep_macros.c \
	$(FULL_FILES) \
	$(SOURCE_PATH)/end_screen.c \
	$(ASSETS_PATH)/cc65_udc_arcade_64_chars.s \
	-o $(BUILD_PATH)/X$(GAME_NAME)_c16_32k.prg


#################################################################

# c64: c64_exomized

	# -D_XL_SLOW_DOWN_FACTOR=990 -DINITIAL_GHOST_SLOWDOWN=31000 
c64: $(ASSETS_PATH)/cc65_udc_arcade.s
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS) -Or -Cl -t  c64 $(DRAW_SKIP) \
	-DANIMATE_PLAYER -DSOUNDS -DBETWEEN_LEVEL -DEND_SCREEN \
	--config $(CFG_PATH)/cc65/c64_GFXat0xC000.cfg  \
	-DCBM_SCREEN_CODES \
	-DMEMORY_MAPPED \
	-D_XL_SLOW_DOWN_FACTOR=250 \
	$(CROSS_LIB_PATH)/sound/cc65/sid/sid_sounds.c \
	$(ASSETS_PATH)/cc65_udc_arcade.s \
	$(CROSS_LIB_PATH)/display/init_graphics/cc65/c64/c64_init_graphics.c \
	$(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c \
	$(SOURCE_PATH)/end_screen.c \
	$(FULL_FILES) \
	-o $(BUILD_PATH)/X$(GAME_NAME)_c64.prg


c64_exomized: c64
	$(TOOLS_PATH)/generic/exomizer sfx basic $(BUILD_PATH)/X$(GAME_NAME)_c64.prg -o $(BUILD_PATH)/X$(GAME_NAME)_c64_exomized.prg

c64_crt: c64_exomized
	python $(TOOLS_PATH)/cc65/c64/prg2crt.py $(BUILD_PATH)/X$(GAME_NAME)_c64_exomized.prg  $(BUILD_PATH)/X$(GAME_NAME)_c64_exomized.crt



#################################################################

# Graphics for fire power and ghost needs to be updated
nes: $(ASSETS_PATH)/cc65_nes_tiles.s
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS) -O -t nes \
	--config $(CFG_PATH)/cc65/nes_fx.cfg \
	-DFULL_GAME -D_XL_SLOW_DOWN_FACTOR=100 \
	-DBETWEEN_LEVEL -DEND_SCREEN -D_XL_NO_COLOR \
	-DCONIO \
	-DANIMATE_PLAYER \
	-DDEFAULT_CLEAR_SCREEN \
	$(CROSS_LIB_PATH)/display/init_graphics/cc65/nes/nes_init_graphics.c \
	$(SOURCE_PATH)/end_screen.c \
	$(ASSETS_PATH)/cc65_nes_tiles.s \
	$(FULL_FILES) \
	-o $(BUILD_PATH)/X$(GAME_NAME)_nes.nes


#################################################################

pce: pce_32k

# -Or breaks the PCE target
pce_16k: $(ASSETS_PATH)/cc65_pce_tiles.s
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS) -O -t pce \
	-DFULL_GAME \
	-DEND_SCREEN -DBETWEEN_LEVEL \
	-DCONIO -DNO_INIT_GRAPHICS \
	--config $(CFG_PATH)/cc65/pce_16k_less_stack.cfg -DANIMATE_PLAYER  \
	$(FULL_FILES) \
	$(SOURCE_PATH)/end_screen.c \
	$(ASSETS_PATH)/cc65_pce_tiles.s \
	-o $(BUILD_PATH)/X$(GAME_NAME)_PCE.bin
	dd if=$(BUILD_PATH)/X$(GAME_NAME)_PCE.bin ibs=1 count=8192 of=$(BUILD_PATH)/X$(GAME_NAME)_PCE_LOW.bin
	dd if=$(BUILD_PATH)/X$(GAME_NAME)_PCE.bin ibs=1 skip=8192 of=$(BUILD_PATH)/X$(GAME_NAME)_PCE_HIGH.bin
	rm $(BUILD_PATH)/X$(GAME_NAME)_PCE.bin 
	cat $(BUILD_PATH)/X$(GAME_NAME)_PCE_HIGH.bin $(BUILD_PATH)/X$(GAME_NAME)_PCE_LOW.bin > $(BUILD_PATH)/X$(GAME_NAME)_PCE_SWAPPED.pce
	rm $(BUILD_PATH)/X$(GAME_NAME)_PCE_LOW.bin
	rm $(BUILD_PATH)/X$(GAME_NAME)_PCE_HIGH.bin


# -Or breaks the PCE target
pce_32k: $(ASSETS_PATH)/cc65_pce_tiles.s
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS) -O -t pce \
	-DFULL_GAME \
	-DEND_SCREEN -DBETWEEN_LEVEL \
	-DCONIO -DNO_INIT_GRAPHICS \
	--config $(CFG_PATH)/cc65/pce_32k.cfg -DANIMATE_PLAYER  \
	$(FULL_FILES) \
	$(SOURCE_PATH)/end_screen.c \
	$(ASSETS_PATH)/cc65_pce_tiles.s \
	-o $(BUILD_PATH)/X$(GAME_NAME)_PCE.bin
	dd if=$(BUILD_PATH)/X$(GAME_NAME)_PCE.bin ibs=1 count=24576 of=$(BUILD_PATH)/X$(GAME_NAME)_PCE_LOW.bin
	dd if=$(BUILD_PATH)/X$(GAME_NAME)_PCE.bin ibs=1 skip=24576 of=$(BUILD_PATH)/X$(GAME_NAME)_PCE_HIGH.bin
	rm $(BUILD_PATH)/X$(GAME_NAME)_PCE.bin 
	cat $(BUILD_PATH)/X$(GAME_NAME)_PCE_HIGH.bin $(BUILD_PATH)/X$(GAME_NAME)_PCE_LOW.bin > $(BUILD_PATH)/X$(GAME_NAME)_PCE_SWAPPED.pce
	rm $(BUILD_PATH)/X$(GAME_NAME)_PCE_LOW.bin
	rm $(BUILD_PATH)/X$(GAME_NAME)_PCE_HIGH.bin

#################################################################

creativision: creativision_18k

# Segment 'BSS' overflows memory area 'RAM' by 40 bytes

creativision_32k: $(ASSETS_PATH)/cc65_8x8_chars.h
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS) -O -t creativision \
	-D_XL_NO_COLOR -DNO_SLEEP -DLESS_TEXT -DFULL_GAME -DBETWEEN_LEVEL -DEND_SCREEN \
	-DMEMORY_MAPPED -DNO_INIT_GRAPHICS -D_XL_NO_COLOR -DGHOSTS_NUMBER=2 -DBULLETS_NUMBER=1 \
	--config $(CFG_PATH)/cc65/creativision-32k.cfg \
	$(FULL_FILES) \
	$(SOURCE_PATH)/end_screen.c \
	-o $(BUILD_PATH)/X$(GAME_NAME)_creativision_32k.bin

creativision_24k: $(ASSETS_PATH)/cc65_8x8_chars.h
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS) -O -t creativision \
	-D_XL_NO_COLOR -DNO_SLEEP -DLESS_TEXT -DFULL_GAME -DBETWEEN_LEVEL -DEND_SCREEN \
	-DMEMORY_MAPPED -DNO_INIT_GRAPHICS -D_XL_NO_COLOR -DGHOSTS_NUMBER=2 -DBULLETS_NUMBER=1 \
	--config $(CFG_PATH)/cc65/creativision-24k.cfg \
	$(FULL_FILES) \
	$(SOURCE_PATH)/end_screen.c \
	-o $(BUILD_PATH)/X$(GAME_NAME)_creativision_24k.bin
	dd if=$(BUILD_PATH)/X$(GAME_NAME)_creativision_24k.bin bs=8k skip=1 > $(BUILD_PATH)/X$(GAME_NAME)_creativision_24k_SWAPPED.bin
	dd if=$(BUILD_PATH)/X$(GAME_NAME)_creativision_24k.bin bs=8k count=1 >> $(BUILD_PATH)/X$(GAME_NAME)_creativision_24k_SWAPPED.bin
	rm $(BUILD_PATH)/X$(GAME_NAME)_creativision_24k.bin

creativision_18k: $(ASSETS_PATH)/cc65_8x8_chars.h
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS) -O -t creativision \
	-D_XL_NO_COLOR -DNO_SLEEP -DLESS_TEXT -DFULL_GAME -DBETWEEN_LEVEL -DEND_SCREEN \
	-DMEMORY_MAPPED -DNO_INIT_GRAPHICS -D_XL_NO_COLOR -DGHOSTS_NUMBER=2 -DBULLETS_NUMBER=1 \
	--config $(CFG_PATH)/cc65/creativision-18k.cfg \
	$(FULL_FILES) \
	$(SOURCE_PATH)/end_screen.c \
	-o $(BUILD_PATH)/X$(GAME_NAME)_creativision_18k.bin


#################################################################

oric: oric_atmos

atmos: oric_atmos

oric1: oric_atmos

oric1_48k: oric_atmos

oric_atmos: $(ASSETS_PATH)/6x8_chars.h
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS)  -O  -DSOUNDS -DANIMATE_PLAYER -DFULL_GAME -DBETWEEN_LEVEL -DEND_SCREEN \
	-t atmos \
	--config $(CFG_PATH)/cc65/atmos_better_tap.cfg \
	-DORIC_COLOR \
	$(CROSS_LIB_PATH)/display/init_graphics/cc65/atmos/atmos_redefined_characters_init_graphics.c \
	$(FULL_FILES) \
	$(SOURCE_PATH)/end_screen.c \
	-o $(BUILD_PATH)/X$(GAME_NAME)_atmos_and_oric1_48k.tap


#################################################################


supervision: $(ASSETS_PATH)/cc65_udc.s 
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS) -Or -Cl -t supervision  \
	--config $(CFG_PATH)/cc65/supervision-16k_GFX_3.cfg \
	$(ASSETS_PATH)/cc65_udc.s \
	-DALT_PRINT   -DNO_SLEEP \
	-DBIT_MAPPED_4 $(LIGHT_DRAW_SKIP) \
	-DDEFAULT_CLEAR_SCREEN  -D_XL_SLOW_DOWN_FACTOR=1000 -D_XL_NO_COLOR \
	-DANIMATE_PLAYER -DNO_EXTRA_TITLE \
	$(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c \
	$(FULL_ONLY_FILES) \
	--code-name CODE0 \
	$(LIGHT_FILES) \
	$(CROSS_LIB_PATH)/display/init_graphics/cc65/supervision/supervision_init_graphics.c \
	-o $(BUILD_PATH)/X$(GAME_NAME)_supervision.sv

#################################################################

vic20: vic20_exp_16k

vic20_exp_16k: $(ASSETS_PATH)/cc65_udc_arcade.s
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS)  -Or -Cl  -t vic20 -DANIMATE_PLAYER -DSOUNDS  \
	--config $(CFG_PATH)/cc65/vic20-16k_CODE2_GFX.cfg \
	-DCONIO -DVIC20_EXP_16K \
	-D_XL_SLOW_DOWN_FACTOR=800 -DCC65_GOTO -DGHOSTS_NUMBER=8 \
	-DREDEFINED_CHARS -DBETWEEN_LEVEL -DEND_SCREEN \
	$(ASSETS_PATH)/cc65_udc_arcade.s \
	$(TINY_FILES) $(SOURCE_PATH)/item.c $(SOURCE_PATH)/bullet.c  $(SOURCE_PATH)/sleep.c \
	--code-name CODE2 \
	$(SOURCE_PATH)/horizontal_missile.c $(SOURCE_PATH)/rocket.c  $(SOURCE_PATH)/skull.c \
	$(CROSS_LIB_PATH)/display/init_graphics/cc65/vic20/vic20_init_graphics.c \
	$(CROSS_LIB_PATH)/sound/cc65/vic20/vic20_sounds.c \
	$(SOURCE_PATH)/end_screen.c \
	-o $(BUILD_PATH)/X$(GAME_NAME)_$@.prg

vic20_wait_vsync: $(ASSETS_PATH)/cc65_udc_arcade.s
	$(CC65_PATH)$(MYCC65) $(INCLUDE_OPTS)  -Or -Cl  -t vic20 -DANIMATE_PLAYER -DSOUNDS  \
	--config $(CFG_PATH)/cc65/vic20-16k_CODE2_GFX.cfg \
	-DCONIO -DVIC20_EXP_16K \
	-D_XL_SLOW_DOWN_FACTOR=800 -DCC65_GOTO -DGHOSTS_NUMBER=8 -DUSE_WAIT_V_SYNC -DDEBUG_GHOST_DISPLAY \
	-DREDEFINED_CHARS -DBETWEEN_LEVEL -DEND_SCREEN \
	$(ASSETS_PATH)/cc65_udc_arcade.s \
	$(TINY_FILES) $(SOURCE_PATH)/item.c $(SOURCE_PATH)/bullet.c  $(SOURCE_PATH)/sleep.c \
	--code-name CODE2 \
	$(SOURCE_PATH)/horizontal_missile.c $(SOURCE_PATH)/rocket.c  $(SOURCE_PATH)/skull.c \
	$(CROSS_LIB_PATH)/display/init_graphics/cc65/vic20/vic20_init_graphics.c \
	$(CROSS_LIB_PATH)/sound/cc65/vic20/vic20_sounds.c \
	$(SOURCE_PATH)/end_screen.c \
	-o $(BUILD_PATH)/X$(GAME_NAME)_$@.prg


#################################################################
# Z88DK


#################################################################

jupiter_ace: ace

ace: ace_exp_16k

ace_exp_16k: $(ASSETS_PATH)/z88dk_xchase.asm
	$(Z88DK_PATH)$(MYZ88DK) +ace $(SCCZ80_OPTS) $(INCLUDE_OPTS) \
	-D__ACE__ -DFULL_GAME -DBETWEEN_LEVEL -DEND_SCREEN \
	-DSOUNDS \
	-DCONIO \
	-clib=default \
	-DUDG_GRAPHICS \
	-DANIMATE_PLAYER \
	$(CROSS_LIB_PATH)/display/init_graphics/z88dk/udg/udg_init_graphics.c \
	$(ASSETS_PATH)/z88dk_xchase.asm \
	$(SOURCE_PATH)/end_screen.c \
	$(FULL_FILES) \
	-o ace -Cz--audio -create-app	
	cp ace.wav $(BUILD_PATH)/X$(GAME_NAME)_$@.wav
	cp ace.tap $(BUILD_PATH)/X$(GAME_NAME)_$@.tap
	rm ace.wav
	rm ace.tap
	rm ace


#################################################################


aquarius: aquarius_exp_32k

aquarius_exp_32k: 
	$(Z88DK_PATH)$(MYZ88DK) +aquarius $(SCCZ80_OPTS) -clib=ansi $(INCLUDE_OPTS) -vn \
	-DSOUNDS -D__AQUARIUS__ \
	-lndos -D_XL_SLOW_DOWN_FACTOR=900 \
	-DCONIO -DNO_INIT_GRAPHICS \
	$(FULL_FILES) \
	-create-app \
	-o $(BUILD_PATH)/X$(GAME_NAME)_aquarius_exp_32k
	rm $(BUILD_PATH)/X$(GAME_NAME)_aquarius_exp_32k
	# tar czvf X$(GAME_NAME)_aquarius_exp_16k.zip X$(GAME_NAME)_aquarius_exp_16k.caq _X$(GAME_NAME)_aquarius_exp_16k.caq
	# rm X$(GAME_NAME)_aquarius_exp_16k.caq
	# rm _X$(GAME_NAME)_aquarius_exp_16k.caq
	# mv X$(GAME_NAME)_aquarius_exp_16k.zip $(BUILD_PATH)



# -DSOUNDS 
# -DFORCE_BIT_BANG 
#################################################################

c128_z80_80col: $(ASSETS_PATH)/z88dk_sprites_definitions.h
	$(Z88DK_PATH)$(MYZ88DK) +c128 $(SCCZ80_OPTS) -lgfx128hr \
	$(INCLUDE_OPTS) $(ULTRA_DRAW_SKIP) \
	-lndos -subtype=disk \
	-D__C128_Z80__ \
	-DINITIAL_SLOWDOWN=10000 -DBULLETS_NUMBER=3 \
	-DZ88DK_SPRITES -DANIMATE_PLAYER \
	-DFULL_GAME -DEND_SCREEN \
	-DLESS_TEXT \
	-DNO_BLINKING -DSIMPLE_STRATEGY \
	-DZ88DK_JOYSTICK \
	-DGHOSTS_NUMBER=6 \
	-DALT_PRINT \
	-D_XL_NO_COLOR \
	$(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c \
	$(CROSS_LIB_PATH)/display/init_graphics/z88dk/c128/c128_init_graphics.c \
	$(SOURCE_PATH)/end_screen.c \
	$(FULL_FILES) \
	-create-app -oa80.bin
	$(TOOLS_PATH)/generic/c1541 -format "crosschase,0" d64 X$(GAME_NAME)_c128_z80_80col.d64
	$(TOOLS_PATH)/generic/c1541 -attach X$(GAME_NAME)_c128_z80_80col.d64 -write a80.ldr
	$(TOOLS_PATH)/generic/c1541 -attach X$(GAME_NAME)_c128_z80_80col.d64 -write a80
	mv X$(GAME_NAME)_c128_z80_80col.d64 $(BUILD_PATH)/
	rm A80.LDR
	rm A80
	rm a80.bin


#################################################################

cpc: $(ASSETS_PATH)/z88dk_cpc_Chars8.asm
	$(Z88DK_PATH)$(MYZ88DK) +cpc -subtype=dsk $(SCCZ80_OPTS) $(INCLUDE_OPTS) -DANIMATE_PLAYER -vn  -clib=ansi \
	-D__CPC__ \
	-DSOUNDS -DFULL_GAME -DBETWEEN_LEVEL -DEND_SCREEN \
	-DCPCRSLIB \
	-DZ88DK_JOYSTICK \
	-D_XL_SLOW_DOWN_FACTOR=100 \
	-pragma-define:REGISTER_SP=-1 \
	-lndos -create-app -o 	$(BUILD_PATH)/X$(GAME_NAME)_cpc \
	-DCPCRSLIB_GRAPHICS \
	$(ASSETS_PATH)/z88dk_cpc_Chars8.asm \
	$(CROSS_LIB_PATH)/sound/z88dk/psg/ay-3-8910_psg_sounds.c \
	$(CROSS_LIB_PATH)/display/init_graphics/z88dk/cpc/cpc_cpcrslib_init_graphics.c \
	$(SOURCE_PATH)/end_screen.c \
	$(FULL_FILES)
	# $(TOOLS_PATH)/z88dk/cpc/2cdt.exe -n -r cross_$(GAME_NAME) $(BUILD_PATH)/X$(GAME_NAME)_cpc.cpc  $(BUILD_PATH)/X$(GAME_NAME)_cpc.cdt
	# rm -rf X$(GAME_NAME)_cpc.dsk
	# $(TOOLS_PATH)/z88dk/cpc/cpcxfsw -nd X$(GAME_NAME)_cpc.dsk
	# $(TOOLS_PATH)/z88dk/cpc/cpcxfsw X$(GAME_NAME)_cpc.dsk -p $(BUILD_PATH)/X$(GAME_NAME)_cpc.cpc x$(GAME_NAME)
	# mv X$(GAME_NAME)_cpc.dsk $(BUILD_PATH)/
	# cp $(TOOLS_PATH)/z88dk/cpc/nocart/*.rom .
	# $(TOOLS_PATH)/z88dk/cpc/nocart/nocart.exe  $(BUILD_PATH)/X$(GAME_NAME)_cpc.dsk  $(BUILD_PATH)/X$(GAME_NAME)_gx4000.cpr   -c 'run"x$(GAME_NAME)'
	# rm os.rom
	# rm amsdos.rom
	# rm basic.rom
	rm $(BUILD_PATH)/X$(GAME_NAME)_cpc.cpc 
	rm $(BUILD_PATH)/X$(GAME_NAME)_cpc
	rm $(BUILD_PATH)/X$(GAME_NAME)_cpc.com

#################################################################


gb: $(ASSETS_PATH)/z88dk_gameboy.asm
	$(Z88DK_PATH)$(MYZ88DK) +gb $(INCLUDE_OPTS) -pragma-redirect:fputc_cons=fputc_cons_generic \
	-D__GB__ \
	-DFORCE_XSIZE=20 \
	-DFORCE_YSIZE=18 \
	-DNO_SET_SCREEN_COLORS \
	-D_XL_NO_COLOR -DANIMATE_PLAYER  \
	-DFULL_GAME \
	-DCONIO -DZ88DK_JOYSTICK \
	-lndos -D_XL_SLOW_DOWN_FACTOR=450 -DSOUNDS \
	-DUDG_GRAPHICS $(CROSS_LIB_PATH)/display/init_graphics/z88dk/udg/udg_init_graphics.c \
	$(ASSETS_PATH)/z88dk_gameboy.asm \
	$(FULL_FILES) \
	$(CROSS_LIB_PATH)/sound/z88dk/gb/gb_sounds.c \
	-create-app -o$(BUILD_PATH)/X$(GAME_NAME)_gb.bin
	rm $(BUILD_PATH)/X$(GAME_NAME)_gb.bin
	rm $(BUILD_PATH)/X$(GAME_NAME)_gb_BSS.bin
	rm $(BUILD_PATH)/X$(GAME_NAME)_gb_DATA.bin
	rm $(BUILD_PATH)/X$(GAME_NAME)_gb_BANK_1F.bin


#################################################################

gg: gamegear

gamegear: gamegear_gfx

gamegear_gfx: $(ASSETS_PATH)/z88dk_xchase.asm 
	$(Z88DK_PATH)$(MYZ88DK) +sms -subtype=gamegear $(SCCZ80_ROM_OPTS) $(INCLUDE_OPTS) -pragma-redirect:fputc_cons=fputc_cons_generic \
	-D__SMS__ -D__GAME_GEAR__ \
	-DFORCE_XSIZE=20 \
	-DFORCE_YSIZE=18 \
	-DNO_SET_SCREEN_COLORS \
	-DANIMATE_PLAYER \
	-DFULL_GAME -DFORCE_BIT_BANG \
	-DCONIO -DFORCE_CONIO_LIB -DZ88DK_JOYSTICK \
	-lndos -D_XL_SLOW_DOWN_FACTOR=500 \
	-DUDG_GRAPHICS $(CROSS_LIB_PATH)/display/init_graphics/z88dk/udg/udg_init_graphics.c \
	$(ASSETS_PATH)/z88dk_xchase.asm \
	$(FULL_FILES) \
	-create-app -o$(BUILD_PATH)/X$(GAME_NAME)_gamegear.bin
	rm $(BUILD_PATH)/X$(GAME_NAME)_gamegear.bin
	rm $(BUILD_PATH)/X$(GAME_NAME)_gamegear_BSS.bin
	rm $(BUILD_PATH)/X$(GAME_NAME)_gamegear_DATA.bin
	rm $(BUILD_PATH)/X$(GAME_NAME)_gamegear_BANK_1F.bin


#################################################################


laser500: $(ASSETS_PATH)/z88dk_xchase.asm 
	$(Z88DK_PATH)$(MYZ88DK) +laser500 $(SCCZ80_OPTS) -vn -Cz--audio \
	-create-app -o laser500bm.bin \
	$(INCLUDE_OPTS) \
	-D__LASER500__ -DUDG_GRAPHICS -DFORCE_XSIZE=40 -DFORCE_YSIZE=22 -DFORCE_SCREEN_MODE=2 \
	-DFORCE_BIT_BANG -DSOUNDS \
	-DFULL_GAME -DLESS_TEXT -D_XL_SLOW_DOWN_FACTOR=80 \
	-DCONIO \
	-DANIMATE_PLAYER \
	-DUDG_GRAPHICS \
	-lndos \
	$(FULL_FILES) \
	$(CROSS_LIB_PATH)/display/init_graphics/z88dk/udg/udg_init_graphics.c \
	$(ASSETS_PATH)/z88dk_xchase.asm 
	mv laser500bm.bin $(BUILD_PATH)/X$(GAME_NAME)_$@.bin
	rm laser500bm.cas
	mv laser500bm.wav $(BUILD_PATH)/X$(GAME_NAME)_$@.wav


#################################################################

mc1000: mc1000_exp_48k

mc1000_exp_48k: $(ASSETS_PATH)/z88dk_xchase.asm 
	$(Z88DK_PATH)$(MYZ88DK) +mc1000 $(SCCZ80_OPTS) $(INCLUDE_OPTS) \
	-subtype=gaming \
	-DZ88DK_JOYSTICK \
	-DFULL_GAME  \
	-DANIMATE_PLAYER \
	-DUDG_GRAPHICS \
	-D__MC1000__ -DSOUNDS -DEND_SCREEN -DBETWEEN_LEVEL \
	-DCONIO \
	-vn  -lndos -Cz--audio \
	-create-app -o mc1000.bin \
	-clib=default -pragma-redirect:fputc_cons=fputc_cons_generic \
	$(CROSS_LIB_PATH)/display/init_graphics/z88dk/udg/udg_init_graphics.c \
	$(ASSETS_PATH)/z88dk_xchase.asm \
	$(SOURCE_PATH)/end_screen.c \
	$(FULL_FILES)
	mv mc1000.wav $(BUILD_PATH)/X$(GAME_NAME)_mc1000_X$(GAME_NAME)_exp_48k_joystick.wav
	rm mc1000.bin
	rm mc1000.cas


#################################################################

msx: msx_32k_rom

msx_32k_rom_fixed_colors: $(ASSETS_PATH)/8x8_chars.h 
	$(Z88DK_PATH)$(MYZ88DK) +msx $(SCCZ80_OPTS) $(INCLUDE_OPTS) -lmsxbios \
	-DUSE_MSX_BIOS \
	-DINITIAL_SLOWDOWN=29000 \
	-DSOUNDS -DANIMATE_PLAYER \
	-vn -DMSX_VPOKE -DFULL_GAME -D__MSX__ -DEND_SCREEN -DBETWEEN_LEVEL \
	-lndos -subtype=rom \
	-create-app -o $(BUILD_PATH)/X$(GAME_NAME)_msx_32k.rom \
	-DMEMORY_MAPPED \
	-DDEFAULT_CLEAR_SCREEN \
	-DALT_PRINT \
	-DLESS_TEXT \
	-DZ88DK_JOYSTICK \
	-D_XL_SLOW_DOWN_FACTOR=800 \
	$(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c \
	$(CROSS_LIB_PATH)/display/init_graphics/z88dk/msx/msx_redefined_chars_init_graphics.c	\
	$(CROSS_LIB_PATH)/sound/z88dk/psg/ay-3-8910_psg_sounds.c \
	$(SOURCE_PATH)/end_screen.c \
	$(FULL_FILES)
	rm $(BUILD_PATH)/X$(GAME_NAME)_msx_32k_BSS.bin
	rm $(BUILD_PATH)/X$(GAME_NAME)_msx_32k_DATA.bin


msx_32k_rom: $(ASSETS_PATH)/z88dk_xchase.asm
	$(Z88DK_PATH)$(MYZ88DK) +msx $(SCCZ80_OPTS) $(INCLUDE_OPTS) \
	-pragma-redirect:fputc_cons=fputc_cons_generic \
	-DINITIAL_SLOWDOWN=29000 \
	-DSOUNDS -DANIMATE_PLAYER \
	-vn -DFULL_GAME -D__MSX__ -DEND_SCREEN -DBETWEEN_LEVEL \
	-lndos -subtype=rom \
	-create-app -o $(BUILD_PATH)/X$(GAME_NAME)_msx_32k.rom \
	-DCONIO -DUDG_GRAPHICS \
	-DZ88DK_JOYSTICK \
	-D_XL_SLOW_DOWN_FACTOR=200 \
	$(ASSETS_PATH)/z88dk_xchase.asm \
	$(CROSS_LIB_PATH)/display/init_graphics/z88dk/udg/udg_init_graphics.c \
	$(CROSS_LIB_PATH)/sound/z88dk/psg/ay-3-8910_psg_sounds.c \
	$(SOURCE_PATH)/end_screen.c \
	$(FULL_FILES)
	rm $(BUILD_PATH)/X$(GAME_NAME)_msx_32k_BSS.bin
	rm $(BUILD_PATH)/X$(GAME_NAME)_msx_32k_DATA.bin


#################################################################


samcoupe: $(ASSETS_PATH)/z88dk_xchase.asm
	$(Z88DK_PATH)$(MYZ88DK) +sam $(SCCZ80_OPTS) $(INCLUDE_OPTS) \
	-D__SAM__ -DEND_SCREEN -DANIMATE_PLAYER -DBETWEEN_LEVEL \
	-DCONIO -DUDG_GRAPHICS \
	-clib=ansi -pragma-define:ansicolumns=32 -vn \
	-DFULL_GAME  -o $(BUILD_PATH)/FULL_samcoupe.bin -lndos \
	$(FULL_FILES) -DFORCE_BIT_BANG \
	$(SOURCE_PATH)/end_screen.c \
	$(CROSS_LIB_PATH)/display/init_graphics/z88dk/udg/udg_init_graphics.c \
	$(ASSETS_PATH)/z88dk_xchase.asm
	cp $(TOOLS_PATH)/z88dk/samcoupe/samdos2_empty $(TOOLS_PATH)/z88dk/samcoupe/samdos2
	$(TOOLS_PATH)/z88dk/samcoupe/pyz80.py -I $(TOOLS_PATH)/z88dk/samcoupe/samdos2 $(TOOLS_PATH)/z88dk/samcoupe/sam_wrapper.asm
	mv $(TOOLS_PATH)/z88dk/samcoupe/sam_wrapper.dsk $(BUILD_PATH)/X$(GAME_NAME)_samcoupe.dsk
	rm $(BUILD_PATH)/FULL_samcoupe.bin


#################################################################

sms: sms_gfx

sms_gfx: $(ASSETS_PATH)/z88dk_xchase.asm 
	$(Z88DK_PATH)$(MYZ88DK) +sms $(SCCZ80_ROM_OPTS) $(INCLUDE_OPTS) -pragma-redirect:fputc_cons=fputc_cons_generic \
	-D__SMS__ \
	-DFORCE_XSIZE=32 \
	-DFORCE_YSIZE=22 \
	-DNO_SET_SCREEN_COLORS \
	-DANIMATE_PLAYER \
	-DFULL_GAME -DFORCE_BIT_BANG \
	-DCONIO -DFORCE_CONIO_LIB -DZ88DK_JOYSTICK \
	-lndos -D_XL_SLOW_DOWN_FACTOR=400 \
	-DUDG_GRAPHICS $(CROSS_LIB_PATH)/display/init_graphics/z88dk/udg/udg_init_graphics.c \
	$(ASSETS_PATH)/z88dk_xchase.asm \
	$(FULL_FILES) \
	-create-app -o$(BUILD_PATH)/X$(GAME_NAME)_sms.bin
	rm $(BUILD_PATH)/X$(GAME_NAME)_sms.bin
	rm $(BUILD_PATH)/X$(GAME_NAME)_sms_BSS.bin
	rm $(BUILD_PATH)/X$(GAME_NAME)_sms_DATA.bin
	rm $(BUILD_PATH)/X$(GAME_NAME)_sms_BANK_1F.bin

#################################################################

spectrum: spectrum_48k

spectrum_48k: $(ASSETS_PATH)/z88dk_xchase.asm 
	$(Z88DK_PATH)$(MYZ88DK) +zx $(SCCZ80_OPTS) $(INCLUDE_OPTS) \
	-pragma-include:$(CFG_PATH)/z88dk/zpragma_clib.inc \
	-pragma-redirect:getk=getk_inkey \
	-DFULL_GAME \
	-DANIMATE_PLAYER \
	-DSOUNDS \
	-DZ88DK_JOYSTICK \
	-D_XL_SLOW_DOWN_FACTOR=200 \
	-DEND_SCREEN -DBETWEEN_LEVEL \
	-D__SPECTRUM__ \
	-lndos -create-app \
	-DCONIO \
	-DUDG_GRAPHICS \
	-pragma-redirect:fputc_cons=fputc_cons_generic \
	-o $(BUILD_PATH)/X$(GAME_NAME)_spectrum_48k.prg \
	$(CROSS_LIB_PATH)/display/init_graphics/z88dk/udg/udg_init_graphics.c \
	$(ASSETS_PATH)/z88dk_xchase.asm \
	$(SOURCE_PATH)/end_screen.c \
	$(FULL_FILES)
	rm $(BUILD_PATH)/X$(GAME_NAME)_spectrum_48k.prg
	rm $(BUILD_PATH)/X$(GAME_NAME)_spectrum_48k_BANK_7.bin


spectrum_48k_keyboard: $(ASSETS_PATH)/z88dk_xchase.asm 
	$(Z88DK_PATH)$(MYZ88DK) +zx $(SCCZ80_OPTS) $(INCLUDE_OPTS) \
	-pragma-include:$(CFG_PATH)/z88dk/zpragma_clib.inc \
	-pragma-redirect:getk=getk_inkey \
	-DFULL_GAME \
	-DANIMATE_PLAYER \
	-DSOUNDS \
	-D_XL_SLOW_DOWN_FACTOR=200 \
	-DEND_SCREEN -DBETWEEN_LEVEL \
	-D__SPECTRUM__ \
	-lndos -create-app \
	-DCONIO \
	-DUDG_GRAPHICS \
	-pragma-redirect:fputc_cons=fputc_cons_generic \
	-o $(BUILD_PATH)/X$(GAME_NAME)_spectrum_48k.prg \
	$(CROSS_LIB_PATH)/display/init_graphics/z88dk/udg/udg_init_graphics.c \
	$(ASSETS_PATH)/z88dk_xchase.asm \
	$(SOURCE_PATH)/end_screen.c \
	$(FULL_FILES)
	rm $(BUILD_PATH)/X$(GAME_NAME)_spectrum_48k.prg
	rm $(BUILD_PATH)/X$(GAME_NAME)_spectrum_48k_BANK_7.bin

#################################################################


vg5k: vg5k_exp_16k

vg5k_exp_16k: $(ASSETS_PATH)/z88dk_xchase.asm
	$(Z88DK_PATH)$(MYZ88DK) +vg5k $(SCCZ80_OPTS) \
	$(INCLUDE_OPTS) \
	-DSOUNDS -vn -DFULL_GAME -D__VG5K__ -DBETWEEN_LEVEL -DEND_SCREEN -DASM_DISPLAY \
	-lndos -create-app -o $(BUILD_PATH)/X$(GAME_NAME)_vg5k_exp_16k.prg \
	-DCONIO \
	-D_XL_SLOW_DOWN_FACTOR=300 \
	-DINITIAL_SLOWDOWN=29000 \
	-clib=default \
	-DUDG_GRAPHICS \
	-DANIMATE_PLAYER \
	$(CROSS_LIB_PATH)/display/init_graphics/z88dk/udg/udg_init_graphics.c \
	$(ASSETS_PATH)/z88dk_xchase.asm \
	$(SOURCE_PATH)/end_screen.c \
	$(FULL_FILES)
	rm $(BUILD_PATH)/X$(GAME_NAME)_vg5k_exp_16k.prg


#################################################################
vz200: vz200_24k

vz200_24k: 	
	$(Z88DK_PATH)$(MYZ88DK) +vz $(SCCZ80_OPTS) -vn \
	--hardware-keyboard  --generic-console -DHARDWARE_KEYBOARD \
	$(INCLUDE_OPTS) \
	-DSOUNDS -D__VZ__  \
	-DNO_EXTRA_TITLE -D_XL_SLOW_DOWN_FACTOR=300 \
	-DCONIO -DNO_INIT_GRAPHICS  \
	-lndos \
	-create-app -o $(BUILD_PATH)/X$(GAME_NAME)_$@.vz \
	$(FULL_FILES)
	rm $(BUILD_PATH)/X$(GAME_NAME)_$@.cas


#################################################################

zx81: zx81_no_gfx

zx81_no_gfx: zx81_no_gfx_32k

zx81_no_gfx_32k:
	$(Z88DK_PATH)$(MYZ88DK) +zx81 $(ZSDCC_OPTS) \
	$(INCLUDE_OPTS) -compiler=sdcc  \
	--opt-code-size -D_XL_SLOW_DOWN_FACTOR=1 \
	-vn \
	-D__ZX81__ -DFULL_GAME  \
	-DLESS_TEXT -DNO_HINTS -DNO_BLINKING \
	-DCONIO -DNO_INIT_GRAPHICS \
	-lndos \
	-create-app -o  $(BUILD_PATH)/X$(GAME_NAME)_$@.prg \
	$(FULL_FILES)
	rm $(BUILD_PATH)/X$(GAME_NAME)_$@.prg

zx81_no_gfx_32k_v2:
	$(Z88DK_PATH)$(MYZ88DK) +zx81 $(ZSDCC_OPTS) \
	$(INCLUDE_OPTS) -compiler=sdcc \
	-pragma-define:ZX_CHAR_XLATE_MODE=1 -D_API_VERSION=2  \
	--opt-code-size -D_XL_SLOW_DOWN_FACTOR=1 \
	-vn -pragma-define:REGISTER_SP=49151 \
	-D__ZX81__ -DFULL_GAME -pragma-define:ZX_CHAR_XLATE_MODE=1 \
	-DLESS_TEXT -DNO_HINTS -DNO_BLINKING \
	-DCONIO -DNO_INIT_GRAPHICS \
	-lndos \
	-create-app -o  $(BUILD_PATH)/X$(GAME_NAME)_$@.prg \
	$(FULL_FILES)
	rm $(BUILD_PATH)/X$(GAME_NAME)_$@.prg


#################################################################
# ------------------------------------------------------------------------------------------
# CMOC
#
COCO_OPTS_TINY  ?= -O0 -Wno-const  -D__COCO__ -DTINY_GAME 

COCO_OPTS_LIGHT ?= -O0 -Wno-const -D__COCO__

CMOC_OPTS       ?= -O0 -Wno-const  -DDEFAULT_CLEAR_SCREEN -D__CMOC__  -DNO_SLEEP -DALT_PRINT -DLESS_TEXT -DFULL_GAME -DEND_SCREEN -DBETWEEN_LEVEL

NO_UDG_OPS      ?= $(CMOC_OPTS) -DMEMORY_MAPPED -DNO_INIT_GRAPHICS  -D_XL_SLOW_DOWN_FACTOR=7000 -DSOUNDS

GFX_OPTS        ?= $(CMOC_OPTS) -DBIT_MAPPED -D_XL_SLOW_DOWN_FACTOR=150

COCO_OPTS       ?= -D__COCO__ $(NO_UDG_OPS) 

COCO_GFX_OPTS   ?= -D__COCO__ $(GFX_OPTS) -D_XL_NO_COLOR -DANIMATE_PLAYER

COCO3_GFX_OPTS  ?= -D__COCO__ $(CMOC_OPTS)

DRAGON_OPTS     ?= --dragon -D__DRAGON__ $(COCO_OPTS) 

DRAGON_GFX_OPTS   ?= -D__DRAGON__ $(GFX_OPTS) -D_XL_NO_COLOR -DANIMATE_PLAYER

VECTREX_OPTS    ?= -O0 --vectrex  -DNO_SLEEP -DNO_WAIT -DNO_INPUT -DNO_PRINT -Wno-const -DDEFAULT_CLEAR_SCREEN -D__CMOC__ -D__VECTREX__ -DVECTORIAL -DNO_INIT_GRAPHICS -DALT_PRINT -DLESS_TEXT -DFULL_GAME -DEND_SCREEN -DBETWEEN_LEVEL

# -DDEFAULT_CLEAR_SCREEN
MO5_OPTS        ?= -O0 -DANIMATE_PLAYER -DSOUNDS -D_XL_SLOW_DOWN_FACTOR=150 -DFORCE_NO_CONIO_LIB -DMACRO_SLEEP  -Wno-const  -D__CMOC__ -D__MO5__ -DBIT_MAPPED -DALT_PRINT -DLESS_TEXT -DFULL_GAME -DEND_SCREEN -DBETWEEN_LEVEL

TO7_OPTS        ?= -O2 -DANIMATE_PLAYER -DSOUNDS -D_XL_SLOW_DOWN_FACTOR=200 -DFORCE_NO_CONIO_LIB -DMACRO_SLEEP  -Wno-const  -D__CMOC__ -D__TO7__ -DBIT_MAPPED -DALT_PRINT -DLESS_TEXT -DFULL_GAME

TO7_ORG_DATA    ?= --org=a000 
# --data=D400

################################################################################


cmoc_targets: \
	coco_targets \
	dragon_targets \
	mo5_targets \
	to7_targets

coco_no_gfx:
	$(CMOC) \
	$(COCO_OPTS) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/sound/generic/dac_sounds.c
	$(CMOC) \
	$(COCO_OPTS) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/display/display_macros.c
	$(CMOC) \
	$(COCO_OPTS) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/init_images.c	
	$(CMOC) \
	$(COCO_OPTS) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c
	$(CMOC) \
	$(COCO_OPTS) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/input/input_macros.c
	$(CMOC) \
	$(COCO_OPTS) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/text/text_macros.c	
	$(CMOC) \
	$(COCO_GFX_OPTS) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/sleep.c
	$(CMOC) \
	$(COCO_OPTS) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/move_player.c
	$(CMOC) \
	$(COCO_OPTS) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/ghost.c
	$(CMOC) \
	$(COCO_OPTS) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/level.c
	$(CMOC) \
	$(COCO_OPTS) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/character.c
	$(CMOC) \
	$(COCO_OPTS) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/game_text.c
	$(CMOC) \
	$(COCO_OPTS) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/strategy.c
	$(CMOC) \
	$(COCO_OPTS) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/item.c
	$(CMOC) \
	$(COCO_OPTS) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/bullet.c
	$(CMOC) \
	$(COCO_OPTS) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/skull.c	
	$(CMOC) \
	$(COCO_OPTS) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/horizontal_missile.c
	$(CMOC) \
	$(COCO_OPTS) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/rocket.c 
	$(CMOC) \
	$(COCO_OPTS) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/end_screen.c	
	$(CMOC) -o $(BUILD_PATH)/X$(GAME_NAME)_$@.bin \
	$(COCO_OPTS) $(INCLUDE_OPTS) \
	$(SOURCE_PATH)/main.c \
	display_macros.o sleep.o dac_sounds.o \
	init_images.o \
	memory_mapped_alt_print.o \
	ghost.o \
	move_player.o \
	level.o character.o \
	text_macros.o game_text.o \
	strategy.o \
	input_macros.o \
	item.o bullet.o skull.o \
	rocket.o horizontal_missile.o end_screen.o
	rm 	display_macros.o dac_sounds.o \
	init_images.o sleep.o \
	memory_mapped_alt_print.o \
	ghost.o \
	move_player.o \
	level.o character.o \
	game_text.o text_macros.o \
	strategy.o \
	input_macros.o \
	item.o bullet.o skull.o \
	rocket.o horizontal_missile.o end_screen.o
	rm -rf $(BUILD_PATH)/X$(GAME_NAME)_$@.dsk
	cp $(BUILD_PATH)/X$(GAME_NAME)_$@.bin XCHASE.BIN
	$(TOOLS_PATH)/cmoc/coco/file2dsk XCHASE.BIN
	mv XCHASE.DSK $(BUILD_PATH)/X$(GAME_NAME)_$@.dsk
	$(TOOLS_PATH)/cmoc/dragon/bin2cas.pl -o $(BUILD_PATH)/X$(GAME_NAME)_$@.cas -C XCHASE.BIN -A
	rm XCHASE.BIN


# BROKEN (OUT OF MEMORY?)
coco_gfx: $(ASSETS_PATH)/cmoc_udc_25_tiles_and_fonts.s
	$(CMOC) \
	$(COCO_GFX_COMPILE_OPTS) $(INCLUDE_OPTS) \
	-c $(ASSETS_PATH)/cmoc_udc_25_tiles_and_fonts.s
	$(CMOC) \
	$(COCO_GFX_OPTS) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/display/display_macros.c
	$(CMOC) \
	$(COCO_GFX_OPTS) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/sleep.c
	$(CMOC) \
	$(COCO_GFX_OPTS) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/display/init_graphics/cmoc/coco/coco_init_graphics.c
	$(CMOC) \
	$(COCO_GFX_OPTS) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/init_images.c
	$(CMOC) \
	$(COCO_GFX_OPTS) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/display/alt_print/memory_mapped_alt_print.c
	$(CMOC) \
	$(COCO_GFX_OPTS) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/input/input_macros.c
	$(CMOC) \
	$(COCO_GFX_OPTS) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/text/text_macros.c	
	$(CMOC) \
	$(COCO_GFX_OPTS) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/move_player.c
	$(CMOC) \
	$(COCO_GFX_OPTS) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/ghost.c
	$(CMOC) \
	$(COCO_GFX_OPTS) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/level.c
	$(CMOC) \
	$(COCO_GFX_OPTS) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/character.c
	$(CMOC) \
	$(COCO_GFX_OPTS) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/game_text.c
	$(CMOC) \
	$(COCO_GFX_OPTS) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/strategy.c
	$(CMOC) \
	$(COCO_GFX_OPTS) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/item.c
	$(CMOC) \
	$(COCO_GFX_OPTS) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/bullet.c
	$(CMOC) \
	$(COCO_GFX_OPTS) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/skull.c
	$(CMOC) \
	$(COCO_GFX_OPTS) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/horizontal_missile.c
	$(CMOC) \
	$(COCO_GFX_OPTS) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/rocket.c
	$(CMOC) \
	$(COCO_GFX_OPTS) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/end_screen.c
	$(CMOC) -o $(BUILD_PATH)/X$(GAME_NAME)_$@.bin \
	$(COCO_GFX_OPTS) $(INCLUDE_OPTS) \
	$(SOURCE_PATH)/main.c \
	display_macros.o sleep.o \
	init_images.o  coco_init_graphics.o \
	memory_mapped_alt_print.o \
	ghost.o \
	move_player.o \
	level.o character.o \
	text_macros.o game_text.o \
	strategy.o \
	input_macros.o cmoc_udc_25_tiles_and_fonts.o \
	item.o bullet.o skull.o \
	rocket.o horizontal_missile.o end_screen.o
	rm 	display_macros.o sleep.o \
	init_images.o  coco_init_graphics.o \
	memory_mapped_alt_print.o \
	ghost.o \
	move_player.o \
	level.o character.o \
	game_text.o text_macros.o \
	strategy.o cmoc_udc_25_tiles_and_fonts.o \
	input_macros.o \
	item.o bullet.o skull.o \
	rocket.o horizontal_missile.o end_screen.o
	rm -rf $(BUILD_PATH)/X$(GAME_NAME)_$@.dsk
	cp $(BUILD_PATH)/X$(GAME_NAME)_$@.bin XCHASE.BIN
ifeq ($(DO_WIN),1)
	$(TOOLS_PATH)/cmoc/coco/file2dsk XCHASE.BIN
	mv XCHASE.DSK $(BUILD_PATH)/X$(GAME_NAME)_$@.dsk
endif
	$(TOOLS_PATH)/cmoc/dragon/bin2cas.pl -o $(BUILD_PATH)/X$(GAME_NAME)_$@.cas -C XCHASE.BIN -A
	rm XCHASE.BIN
	rm $(BUILD_PATH)/X$(GAME_NAME)_$@.bin

coco: coco_no_gfx

coco_targets: \
	coco


mo5: $(ASSETS_PATH)/cmoc_udc_25_tiles.s
	$(CMOC) \
	$(MO5_OPTS) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/sound/generic/dac_sounds.c
	$(CMOC) \
	$(MO5_OPTS) $(DRAW_SKIP) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/display/alt_print/mo5_alt_print.c 
	$(CMOC) \
	$(MO5_OPTS) $(DRAW_SKIP) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/display/init_graphics/cmoc/mo5/mo5_init_graphics.c
	$(CMOC) \
	$(MO5_OPTS) $(DRAW_SKIP) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/display/display_macros.c
	$(CMOC) \
	$(MO5_OPTS) $(DRAW_SKIP) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/init_images.c	
	$(CMOC) \
	$(MO5_OPTS) $(DRAW_SKIP) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/sleep.c	
	$(CMOC) \
	$(MO5_OPTS) $(DRAW_SKIP) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/input/input_macros.c
	$(CMOC) \
	$(MO5_OPTS) $(DRAW_SKIP) $(INCLUDE_OPTS) \
	-c $(CROSS_LIB_PATH)/text/text_macros.c	
	$(CMOC) \
	$(MO5_OPTS) $(DRAW_SKIP) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/move_player.c
	$(CMOC) \
	$(MO5_OPTS) $(DRAW_SKIP) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/ghost.c
	$(CMOC) \
	$(MO5_OPTS) $(DRAW_SKIP) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/level.c
	$(CMOC) \
	$(MO5_OPTS) $(DRAW_SKIP) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/character.c
	$(CMOC) \
	$(MO5_OPTS) $(DRAW_SKIP) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/game_text.c
	$(CMOC) \
	$(MO5_OPTS) $(DRAW_SKIP) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/strategy.c
	$(CMOC) \
	$(MO5_OPTS) $(DRAW_SKIP) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/item.c
	$(CMOC) \
	$(MO5_OPTS) $(DRAW_SKIP) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/bullet.c
	$(CMOC) \
	$(MO5_OPTS) $(DRAW_SKIP) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/skull.c	
	$(CMOC) \
	$(MO5_OPTS) $(DRAW_SKIP) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/horizontal_missile.c
	$(CMOC) \
	$(MO5_OPTS) $(DRAW_SKIP) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/rocket.c 
	$(CMOC) \
	$(MO5_OPTS) $(DRAW_SKIP) $(INCLUDE_OPTS) \
	-c $(SOURCE_PATH)/end_screen.c	
	$(CMOC) \
	$(MO5_OPTS) $(DRAW_SKIP) $(INCLUDE_OPTS) \
	-c $(ASSETS_PATH)/cmoc_udc_25_tiles.s	
	$(CMOC) -o $(BUILD_PATH)/FULL_MO5.bin \
	$(MO5_OPTS) $(DRAW_SKIP) $(INCLUDE_OPTS) \
	$(SOURCE_PATH)/main.c \
	mo5_alt_print.o sleep.o dac_sounds.o \
	mo5_init_graphics.o \
	display_macros.o \
	cmoc_udc_25_tiles.o \
	init_images.o \
	ghost.o \
	move_player.o \
	level.o character.o \
	text_macros.o game_text.o \
	strategy.o \
	input_macros.o \
	item.o bullet.o skull.o \
	rocket.o horizontal_missile.o end_screen.o
	rm \
	mo5_alt_print.o sleep.o dac_sounds.o \
	cmoc_udc_25_tiles.o \
	mo5_init_graphics.o \
	display_macros.o \
	init_images.o \
	ghost.o \
	move_player.o \
	level.o character.o \
	game_text.o text_macros.o \
	strategy.o \
	input_macros.o \
	item.o bullet.o skull.o \
	rocket.o horizontal_missile.o end_screen.o
ifeq ($(DO_WIN),1)
	$(TOOLS_PATH)/cmoc/mo5/f2k5 $(BUILD_PATH)/FULL_MO5.bin
	mv $(BUILD_PATH)/FULL_MO5.bin .
	$(TOOLS_PATH)/cmoc/mo5/sapfs -c FULL_MO5.sap
	$(TOOLS_PATH)/cmoc/mo5/sapfs --add FULL_MO5.sap FULL_MO5.bin
	rm ./FULL_MO5.bin
	mv ./FULL_MO5.sap $(BUILD_PATH)/X$(GAME_NAME)_MO5.sap
	mv ./FILE.K5 $(BUILD_PATH)/X$(GAME_NAME)_MO5.k5
else
	mv $(BUILD_PATH)/FULL_MO5.bin $(BUILD_PATH)/X$(GAME_NAME)_$@.bin
endif	



#################################################################
# LCC1802


#################################################################

include makefiles.common/auxiliary/Makefile_combo

# ------------------------------------------------------------------------------------------
# LCC1802
#    -target=xr18CX
# https://sites.google.com/site/lcc1802/downloads/Quarrantine.zip?attredirects=0&d=1


#/cygdrive/c/lcc42/bat/caCX.bat
#/cygdrive/c/lcc42/bin/lcc.exe
LCC1802_OPTS ?= -target=xr18CX "-Wf-volatile" -O "-Wp-D nofloats" "-Wa-D LCCNOLONG" "-Wf-mulcall" $(GLOBAL_OPTS)
BASIC_OPTS ?= $(LCC1802_OPTS) "-Wa-D LCCCX=1"
COMX_OPTS ?= $(BASIC_OPTS) "-Wa-D CODELOC=0x4401" 
PECOM_OPTS ?= $(BASIC_OPTS) "-Wa-D CODELOC=0x201" 
TMC600_OPTS ?= $(BASIC_OPTS) "-Wa-D CODELOC=0x6300"
CIDELSA_OPTS ?= $(LCC1802_OPTS)  "-Wa-D CODELOC=0"  "-Wa-D NOFILLBSS=1" "-Wf-mulcall"
DRACO_32K_OPTS ?= $(CIDELSA_OPTS) "-Wa-D DATALOC=0x8000" "-Wa-D STACKLOC=0x83ff"
DRACO_16K_OPTS ?= $(CIDELSA_OPTS)  "-Wa-D DATALOC=0x4000" "-Wa-D STACKLOC=0x43ff"
ALTAIR_24K_OPTS ?= $(CIDELSA_OPTS) "-Wa-D DATALOC=0x6000" "-Wa-D STACKLOC=0x60ff"
ALTAIR_12K_OPTS ?= $(CIDELSA_OPTS) "-Wa-D DATALOC=0x3000" "-Wa-D STACKLOC=0x30ff"
DESTROYER_12K_OPTS ?= $(CIDELSA_OPTS) "-Wa-D DATALOC=0x3000" "-Wa-D STACKLOC=0x30ff"
DESTROYER_8K_OPTS ?= $(CIDELSA_OPTS) "-Wa-D DATALOC=0x2000" "-Wa-D STACKLOC=0x20ff"
#-target=xr18CX -O "-Wf-volatile" "-Wa-D CODELOC=0x4401" "-Wa-D LCCCX=1"
#-Wf-volatile -target=xr18CX

MICROBOARD_OPTS ?= $(CIDELSA_OPTS) "-Wa-D DATALOC=0x8000" "-Wa-D STACKLOC=0x9fff"
MICROBOARD_PAL_2_OPTS ?= $(MICROBOARD_OPTS) "-DPAL=2"

 
################################################################################



COMX_REDUCED_EXTRA_FILES ?= \
	$(CROSS_LIB_PATH)/display/init_graphics/lcc1802/comx/comx_init_graphics.c \
	$(CROSS_LIB_PATH)/display/alt_print/comx_alt_print.c 

COMX_EXTRA_FILES ?= \
	$(COMX_REDUCED_EXTRA_FILES) \
	$(CROSS_LIB_PATH)/sleep/sleep_macros.c \
	$(CROSS_LIB_PATH)/sound/lcc1802/comx/comx_sounds.c

COMX_EXTRA_FILES_WTIH_END_SCREEN ?= \
	$(COMX_EXTRA_FILES) \
	$(SOURCE_PATH)/end_screen.c 


reduced_full_lcc1802_combo.c: full_combo_rand.c
	cat \
	$(COMX_REDUCED_EXTRA_FILES) \
	$(SOURCE_PATH)/../full_combo_rand.c > $(SOURCE_PATH)/../reduced_full_lcc1802_combo.c
	# rm $(SOURCE_PATH)/../full_combo_rand.c

full_lcc1802_combo.c: full_combo_rand.c
	cat \
	$(COMX_EXTRA_FILES_WTIH_END_SCREEN) \
	$(SOURCE_PATH)/../full_combo_rand.c > $(SOURCE_PATH)/../full_lcc1802_combo.c
	# rm $(SOURCE_PATH)/../full_combo_rand.c

clean_combo_files:
	rm -rf $(SOURCE_PATH)/../full_combo_rand.c
	rm -rf $(SOURCE_PATH)/../full_lcc1802_combo.c
	rm -rf $(SOURCE_PATH)/../reduced_full_lcc1802_combo.c
	rm -rf $(SOURCE_PATH)/../reduced_full_lcc1802_color_combo.c
	rm -rf $(SOURCE_PATH)/../reduced_full_lcc1802_micro_combo.c


LCC1802_BASIC_C_OPTS ?= \
	-D__LCC1802__ \
	-DFORCE_NO_CONIO_LIB \
	-DNO_SET_SCREEN_COLORS \
	-DLESS_TEXT \
	-DALT_RAND \
	-DALT_PRINT \
	-DINITIAL_SLOWDOWN=21150


LCC1802_C_OPTS ?= \
	$(LCC1802_BASIC_C_OPTS) \
	-DSOUNDS \
	-DALT_SLEEP \


REDUCED_LCC1802_C_OPTS ?= \
	$(LCC1802_BASIC_C_OPTS) \
	-DNO_SLEEP \
	-DNO_RANDOM_LEVEL


###############################################################################
# COMX

_full_comx: _comx

#	-DSIMPLE_STRATEGY 
_comx: reduced_full_lcc1802_combo.c $(ASSETS_PATH)/6x9_chars.h
	$(LCC1802) $(INCLUDE_OPTS) -I$(SOURCE_PATH) $(COMX_OPTS)  \
	-D__COMX__ $(EXTRA_DRAW_SKIP) \
	-DFULL_GAME -DFORCE_NARROW -DLCC1802_GRAPHICS -DREDEFINED_CHARS -DGHOSTS_NUMBER=6 -DBULLETS_NUMBER=3 \
	-D_XL_NO_COLOR -DSIMPLE_STRATEGY \
	-DNO_BLINKING -DTINY_TEXT \
	-DLCC1802_JOYSTICK \
	-DLESS_TEXT -DNO_HINTS -DNO_TITLE -DNO_SET_SCREEN_COLORS -DNO_MESSAGE -DNO_INITIAL_SCREEN \
	-DANIMATE_PLAYER -DNINTH_CHAR_LINE \
	$(REDUCED_LCC1802_C_OPTS) \
	-DFORCE_GHOSTS_NUMBER=7 \
	$(SOURCE_PATH)/../reduced_full_lcc1802_combo.c
	# rm -rf $(SOURCE_PATH)/../reduced_full_lcc1802_combo.c
	mv $(SOURCE_PATH)/../../a.hex $(BUILD_PATH)/X$(GAME_NAME)_$@.hex

comx: \
    _comx \
    clean_combo_files

###############################################################################
# PECOM


_full_pecom: _pecom

_pecom: reduced_full_lcc1802_combo.c $(ASSETS_PATH)/6x9_chars.h
	$(LCC1802) $(INCLUDE_OPTS) -I$(SOURCE_PATH) $(PECOM_OPTS)  \
	-D__PECOM__ $(EXTRA_DRAW_SKIP) \
	-DFULL_GAME -DFORCE_NARROW -DREDEFINED_CHARS -DLCC1802_GRAPHICS -DGHOSTS_NUMBER=6 -DBULLETS_NUMBER=3 \
	-D_XL_NO_COLOR -DSIMPLE_STRATEGY \
	-DNO_BLINKING -DTINY_TEXT \
	-DLCC1802_JOYSTICK \
	-DLESS_TEXT -DNO_HINTS -DNO_TITLE -DNO_SET_SCREEN_COLORS -DNO_MESSAGE -DNO_INITIAL_SCREEN \
	-DANIMATE_PLAYER -DNINTH_CHAR_LINE \
	$(REDUCED_LCC1802_C_OPTS) \
	-DFORCE_GHOSTS_NUMBER=7 \
	$(SOURCE_PATH)/../reduced_full_lcc1802_combo.c
	# rm -rf $(SOURCE_PATH)/../reduced_full_lcc1802_combo.c
	mv $(SOURCE_PATH)/../../a.hex $(BUILD_PATH)/X$(GAME_NAME)_$@.hex

pecom: \
    _pecom \
    clean_combo_files

###############################################################################
# MICRO

_micro: _micro_pal2

_micro_pal2: reduced_full_lcc1802_combo.c $(ASSETS_PATH)/6x9_chars.h
	$(LCC1802) $(INCLUDE_OPTS) -I$(SOURCE_PATH) $(MICROBOARD_PAL_2_OPTS)  \
	-D__MICRO__ -DNO_INITIAL_SCREEN -DNO_MESAGE -DNO_TITLE -DNO_HINTS -DLESS_TEXT \
	-DFULL_GAME -DREDEFINED_CHARS -DLCC1802_GRAPHICS \
	-D_XL_NO_COLOR -DNO_TITLE_LINE -D_XL_SLOW_DOWN_FACTOR=50 \
	-DNO_BLINKING \
	-DLCC1802_JOYSTICK \
	-DANIMATE_PLAYER -DNINTH_CHAR_LINE \
	$(REDUCED_LCC1802_C_OPTS) \
	-DFORCE_GHOSTS_NUMBER=8 \
	$(SOURCE_PATH)/../reduced_full_lcc1802_combo.c
	# rm -rf $(SOURCE_PATH)/../reduced_full_lcc1802_combo.c
	mv $(SOURCE_PATH)/../../a.hex $(BUILD_PATH)/X$(GAME_NAME)_$@.hex

micro: \
    _micro \
    clean_combo_files


###############################################################################
# TMC600


_full_tmc600: _tmc600_37k
_tmc600: _tmc600_37k

# -DNO_PRINT -DNO_MESSAGE -DNO_TITLE 
# -savetemps -S
_tmc600_37k: reduced_full_lcc1802_combo.c
	$(LCC1802) $(INCLUDE_OPTS) -I$(SOURCE_PATH) $(TMC600_OPTS)  \
	-D__TMC600__  $(EXTRA_DRAW_SKIP) \
	-DFULL_GAME -DMEMORY_MAPPED -DSIMPLE_STRATEGY \
	-DNO_BLINKING -DBULLETS_NUMBER=4 -DINITIAL_GHOST_SLOWDOWN=25000 \
	-DLCC1802_JOYSTICK -DNO_HINTS \
	$(REDUCED_LCC1802_C_OPTS) \
	-DGHOSTS_NUMBER=6  \
	$(SOURCE_PATH)/../reduced_full_lcc1802_combo.c
	# rm -rf $(SOURCE_PATH)/../reduced_full_lcc1802_combo.c
	mv $(SOURCE_PATH)/../../a.hex $(BUILD_PATH)/X$(GAME_NAME)_tmc600_37k.hex

tmc600: \
    _tmc600 \
    clean_combo_files

###############################################################################
# CIDELSA DRACO


_cidelsa: _cidelsa_draco

_cidelsa_draco_32k: _cidelsa_draco

# -DREDEFINED_CHARS
_cidelsa_draco: full_lcc1802_combo.c
	$(LCC1802) $(INCLUDE_OPTS) -I$(SOURCE_PATH) $(DRACO_32K_OPTS)  \
	-D__CIDELSA__ -D__DRACO__ $(EXTRA_DRAW_SKIP) -DNO_INITIAL_SCREEN -DNO_MESAGE -DNO_TITLE -DNO_HINTS -DLESS_TEXT \
	-DFULL_GAME  \
	-D_XL_NO_COLOR -DMEMORY_MAPPED \
	-DNO_BLINKING \
	-DLCC1802_JOYSTICK \
	-DBETWEEN_LEVEL -DEND_SCREEN \
	$(LCC1802_C_OPTS) \
	-DFORCE_GHOSTS_NUMBER=8 \
	$(SOURCE_PATH)/../full_lcc1802_combo.c
	# rm -rf $(SOURCE_PATH)/../full_lcc1802_combo.c
	mv $(SOURCE_PATH)/../../a.hex $(BUILD_PATH)/X$(GAME_NAME)_cidelsa_draco_32K.hex

cidelsa: \
    _cidelsa \
    clean_combo_files


###############################################################################


comx_targets: comx

pecom_targets: pecom

tmc600_targets: tmc600_37k

cidelsa_targets: cidelsa





###############################################################################################
# GCC
#


ncurses_targets: \
	ncurses
    
###############################################################################################

ncurses_debug:
	$(NATIVE_CC) $(GCC_OPTS) $(INCLUDE_OPTS) -D__NCURSES__ \
	-DFULL_GAME \
	-DFORCE_XSIZE=$(XSIZE) -DFORCE_YSIZE=$(YSIZE) -D_DEBUG_FLAG=$(_DEBUG_FLAG) \
	-D_XL_SLOW_DOWN_FACTOR=$(_COMMON_SLOWDOWN_FACTOR)*$(_NCURSES_SLOWDOWN) \
	-DCONIO -D_XL_NO_UDG \
	-DALT_PRINT \
	-DNO_TITLE_LINE \
	$(CROSS_LIB_PATH)/display/alt_print/ncurses_alt_print.c \
	$(CROSS_LIB_PATH)/display/init_graphics/gcc/ncurses_init_graphics.c \
	$(FULL_FILES) \
	-lncurses
ifeq ($(_DEBUG_FLAG),1)
	mv a$(COMPILEDEXT) $(BUILD_PATH)/X$(GAME_NAME)_ncurses_debug_$(XSIZE)X$(YSIZE)$(COMPILEDEXT)
else
	mv a$(COMPILEDEXT) $(BUILD_PATH)/X$(GAME_NAME)_ncurses_$(XSIZE)X$(YSIZE)$(COMPILEDEXT)
endif


ncurses:
	$(NATIVE_CC) $(GCC_OPTS) $(INCLUDE_OPTS) -D__NCURSES__ \
	-DFULL_GAME  \
	-DEND_SCREEN -DBETWEEN_LEVEL \
	-DCONIO  \
	-DALT_PRINT \
	-DNO_TITLE_LINE \
	-D_XL_SLOW_DOWN_FACTOR=$(_COMMON_SLOWDOWN_FACTOR)*$(_NCURSES_SLOWDOWN) \
	$(CROSS_LIB_PATH)/display/alt_print/ncurses_alt_print.c \
	$(SOURCE_PATH)/end_screen.c \
	$(CROSS_LIB_PATH)/display/init_graphics/gcc/ncurses_init_graphics.c \
	$(FULL_FILES) \
	-lncurses
	mv a$(COMPILEDEXT) $(BUILD_PATH)/X$(GAME_NAME)_ncurses$(COMPILEDEXT)
    

##


