# supervision 16kbyte cartridge

# ld65 config file
# ld65 --config supervision-16k.cfg -o <prog>.bin <prog>.o

SYMBOLS {
    __STACKSIZE__: type = weak, value = $001B; # 1 page stack
	__GFX_START__: type = weak, value = $FB00;
}
MEMORY {
    ZP:       file = "", start = $0000, size = $0100;
    CPUSTACK: file = "", start = $0100, size = $0100;
    RAM:      file = "", start = $0200, size = $1E00 - __STACKSIZE__, define=yes;
    VRAM:     file = "", start = $4000, size = $2000;
    ROM0:    file = %O, start = $8000, size = $4000, fill = yes, fillval = $ff, define=yes;
    ROM:      file = %O, start = $C000, size = $3B00, fill = yes, fillval = $ff, define=yes;
    CHARMEM:  file = %O, start = __GFX_START__, size = $0400, type = rw,  define = yes, fill = yes;
    ROM2:     file = %O, start = $FF00, size = $0100, fill = yes, fillval = $ff, define=yes;   
}
SEGMENTS {
    ZEROPAGE: load = ZP,             type = zp,  define   = yes;
    GFX:  load = CHARMEM,        type = ro,  define   = yes, optional = no;    
    LOWCODE:  load = ROM,            type = ro,  optional = yes;
    ONCE:     load = ROM,            type = ro,  optional = yes;
    CODE:     load = ROM,            type = ro,  define   = yes;
    RODATA:   load = ROM0,            type = ro,  define   = yes;
    DATA:     load = ROM, run = RAM, type = rw,  define   = yes;
    FFF0:     load = ROM2,           type = ro,  offset   = $F0;    
    VECTORS:   load = ROM2,           type = ro,  offset   = $FA;
    BSS:      load = RAM,            type = bss, define   = yes;
    
}
FEATURES {
    CONDES: type    = constructor,
            label   = __CONSTRUCTOR_TABLE__,
            count   = __CONSTRUCTOR_COUNT__,
            segment = ONCE;
    CONDES: type    = destructor,
            label   = __DESTRUCTOR_TABLE__,
            count   = __DESTRUCTOR_COUNT__,
            segment = RODATA;
    CONDES: type    = interruptor,
            label   = __INTERRUPTOR_TABLE__,
            count   = __INTERRUPTOR_COUNT__,
            segment = RODATA,
            import  = __CALLIRQ__;
}
